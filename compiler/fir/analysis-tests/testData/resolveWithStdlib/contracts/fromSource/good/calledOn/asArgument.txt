FILE: asArgument.kt
    public final infix fun <T> R|kotlin/Any?|.calledOn(value: R|kotlin/Any?|): R|kotlin/Unit|
    public final inline fun <T, R> with(value: R|T|, block: R|(T) -> R|): R|R|
        [R|Contract description]
         <
            block calledOn value
            CallsInPlace(block, EXACTLY_ONCE)
        >
     {
        [StubStatement]
        R|<local>/block|.R|FakeOverride<kotlin/Function1.invoke: R|R|>|(R|<local>/value|)
    }
    public final fun test(s: R|kotlin/Any?|): R|kotlin/Unit| {
        R|kotlin/require|((R|<local>/s| is R|kotlin/String?|))
        R|/with|<R|kotlin/String?|, R|kotlin/String|>(R|<local>/s|, <L> = with@fun <anonymous>(it: R|kotlin/String?|): R|kotlin/String| <kind=EXACTLY_ONCE>  {
            R|<local>/s|?.{ $subj$.R|kotlin/String.length| }
            ^ R|kotlin/requireNotNull|<R|kotlin/String|>(R|<local>/it|)
        }
        )
        R|<local>/s|.R|kotlin/String.length|
    }
