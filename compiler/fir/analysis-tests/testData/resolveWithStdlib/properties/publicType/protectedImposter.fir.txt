FILE: protectedImposter.kt
    public open class A : R|kotlin/Any| {
        public constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        protected open val items: R|kotlin/collections/MutableList<kotlin/String>| = R|kotlin/collections/mutableListOf|<R|kotlin/String|>(vararg(String(a), String(b)))
            public get(): R|kotlin/collections/Collection<kotlin/String>|

    }
    public open class B : R|A| {
        public constructor(): R|B| {
            super<R|A|>()
        }

        public open override val items: R|kotlin/collections/List<kotlin/String>| = R|kotlin/collections/listOf|<R|kotlin/String|>(vararg(String(a), String(b)))
            public get(): R|kotlin/collections/List<kotlin/String>|

    }
    public final class ConcreteA : R|A| {
        public constructor(): R|ConcreteA| {
            super<R|A|>()
        }

        public final fun doSomething(): R|kotlin/Unit| {
            this@R|/ConcreteA|.R|/A.items|.R|SubstitutionOverride<kotlin/collections/MutableList.add: R|kotlin/Boolean|>|(String(item))
        }

    }
    public final class ConcreteB : R|B| {
        public constructor(): R|ConcreteB| {
            super<R|B|>()
        }

        public final fun doSomething(): R|kotlin/Unit| {
            this@R|/ConcreteB|.R|/B.items|.<Unresolved name: add>#(String(item))
        }

    }
