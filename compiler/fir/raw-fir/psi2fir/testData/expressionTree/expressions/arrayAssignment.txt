FILE: arrayAssignment.kt
    public? final? fun test(): <implicit> {
        ^test firBlock#(listOf#(), listOf#(firProperty#(firDeclarationStatus#(firVisibilities_Local#(), firModality_FINAL#(), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false)), listOf#(), Null(null), String("x"), firImplicitTypeRef#(), Boolean(false), Boolean(true), Null(null), Null(null), firCallableId#(String("<local>"), Null(null), String("x"))), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), Null(null), firSimpleNamedReference#(String("x"))), firSimpleNamedReference#(String("set")))))
    }
    public? final? fun foo(): <implicit> {
        ^foo IntegerLiteral(1)
    }
    public? final? fun expressionTree(block: ( () -> Unit )): R|kotlin/Unit| {
        TODO#(String(intrinsic))
    }
    public? final? fun test2(): <implicit> {
        ^test2 firBlock#(listOf#(), listOf#(firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), Null(null), firSimpleNamedReference#(String("intArrayOf"))), firSimpleNamedReference#(String("set")))))
    }
