FILE: destructuring.kt
    public? final? data class Some : R|kotlin/Any| {
        public? [ContainingClassKey=Some] constructor(first: Int, second: Double, third: String): R|Some| {
            super<R|kotlin/Any|>()
        }

        public? final? [IsFromPrimaryConstructor=true] val first: Int = R|<local>/first|
            public? get(): Int

        public? final? [IsFromPrimaryConstructor=true] val second: Double = R|<local>/second|
            public? get(): Double

        public? final? [IsFromPrimaryConstructor=true] val third: String = R|<local>/third|
            public? get(): String

        public final operator fun component1(): Int

        public final operator fun component2(): Double

        public final operator fun component3(): String

        public final fun copy(first: Int = this@R|/Some|.R|/Some.first|, second: Double = this@R|/Some|.R|/Some.second|, third: String = this@R|/Some|.R|/Some.third|): R|Some|

    }
    public? final? fun expressionTree(block: ( () -> Unit )): R|kotlin/Unit| {
        TODO#(String(intrinsic))
    }
    public? final? fun foo(some: Some): <implicit> {
        ^foo firBlock#(listOf#(), listOf#(firProperty#(listOf#(), firNull#(), firString#(String("<destruct>")), firImplicitTypeRef#(), firFalse#(), firTrue#(), firNull#(), firNull#()), firProperty#(listOf#(), firNull#(), firString#(String("x")), firImplicitTypeRef#(), firTrue#(), firTrue#(), firNull#(), firNull#()), firProperty#(listOf#(), firNull#(), firString#(String("y")), firImplicitTypeRef#(), firTrue#(), firTrue#(), firNull#(), firNull#()), firProperty#(listOf#(), firNull#(), firString#(String("z")), firUserTypeRef#(listOf#(), firFalse#(), listOf#(firQualifierPart#(firString#(String("String")), listOf#()))), firTrue#(), firTrue#(), firNull#(), firNull#()), firProperty#(listOf#(), firNull#(), firString#(String("<unary>")), firImplicitTypeRef#(), firFalse#(), firTrue#(), firNull#(), firNull#()), firVariableAssignment#(listOf#(), listOf#(), firNull#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firNamedReference#(firString#(String("<unary>")))), firSimpleNamedReference#(firString#(String("inc"))))), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firNamedReference#(firString#(String("<unary>")))), firAssignmentOperatorStatement#(listOf#(), firOperation_TIMES_ASSIGN#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firSimpleNamedReference#(firString#(String("y")))), firDouble#(Double(2.0))), firVariableAssignment#(listOf#(), listOf#(), firNull#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firString#(String()))))
    }
    public? final? fun bar(some: Some): <implicit> {
        ^bar firBlock#(listOf#(), listOf#(firProperty#(listOf#(), firNull#(), firString#(String("<destruct>")), firImplicitTypeRef#(), firFalse#(), firTrue#(), firNull#(), firNull#()), firProperty#(listOf#(), firNull#(), firString#(String("a")), firImplicitTypeRef#(), firFalse#(), firTrue#(), firNull#(), firNull#()), firProperty#(listOf#(), firNull#(), firString#(String("_")), firImplicitTypeRef#(), firFalse#(), firTrue#(), firNull#(), firNull#())))
    }
