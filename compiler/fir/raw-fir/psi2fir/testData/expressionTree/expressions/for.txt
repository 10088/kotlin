FILE: for.kt
    public? final? fun foo(): <implicit> {
        ^foo firBlock#(listOf#(), listOf#(firBlock#(listOf#(), listOf#(firProperty#(firDeclarationStatus#(firVisibilities_Local#(), firModality_FINAL#(), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false)), listOf#(), Null(null), String("<iterator>"), firImplicitTypeRef#(), Boolean(false), Boolean(true), Null(null), Null(null), firCallableId#(String("<local>"), Null(null), String("<iterator>"))), firWhileLoop#(listOf#(), Null(null), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), Null(null), firNamedReference#(String("<iterator>"))), firSimpleNamedReference#(String("hasNext"))), firBlock#(listOf#(), listOf#(firProperty#(firDeclarationStatus#(firVisibilities_Local#(), firModality_FINAL#(), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false)), listOf#(), Null(null), String("i"), firImplicitTypeRef#(), Boolean(false), Boolean(true), Null(null), Null(null), firCallableId#(String("<local>"), Null(null), String("i"))), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), Null(null), firSimpleNamedReference#(String("println"))))))))))
    }
    public? final? fun expressionTree(block: ( () -> Unit )): R|kotlin/Unit| {
        TODO#(String(intrinsic))
    }
    public? final? fun fooLabeled(): <implicit> {
        ^fooLabeled firBlock#(listOf#(), listOf#(firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), Null(null), firSimpleNamedReference#(String("println"))), firBlock#(listOf#(), listOf#(firProperty#(firDeclarationStatus#(firVisibilities_Local#(), firModality_FINAL#(), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false)), listOf#(), Null(null), String("<iterator>"), firImplicitTypeRef#(), Boolean(false), Boolean(true), Null(null), Null(null), firCallableId#(String("<local>"), Null(null), String("<iterator>"))), firWhileLoop#(listOf#(), String("label"), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), Null(null), firNamedReference#(String("<iterator>"))), firSimpleNamedReference#(String("hasNext"))), firBlock#(listOf#(), listOf#(firProperty#(firDeclarationStatus#(firVisibilities_Local#(), firModality_FINAL#(), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false)), listOf#(), Null(null), String("i"), firImplicitTypeRef#(), Boolean(false), Boolean(true), Null(null), Null(null), firCallableId#(String("<local>"), Null(null), String("i"))), firWhenExpression#(listOf#(), Null(null), Null(null), listOf#(firWhenBranch#(firEqualityOperatorCall#(listOf#(), listOf#(firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), Null(null), firSimpleNamedReference#(String("i"))), firIntegerLiteral#(IntegerLiteral(5))), firOperation_EQ#()), firBlock#(listOf#(), listOf#(firContinueExpression#(listOf#(), String("label")))))), Boolean(false)), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), Null(null), firSimpleNamedReference#(String("println")))))))), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), Null(null), firSimpleNamedReference#(String("println")))))
    }
    public? final? fun bar(list: List<String>): <implicit> {
        ^bar firBlock#(listOf#(), listOf#(firBlock#(listOf#(), listOf#(firProperty#(firDeclarationStatus#(firVisibilities_Local#(), firModality_FINAL#(), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false)), listOf#(), Null(null), String("<iterator>"), firImplicitTypeRef#(), Boolean(false), Boolean(true), Null(null), Null(null), firCallableId#(String("<local>"), Null(null), String("<iterator>"))), firWhileLoop#(listOf#(), Null(null), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), Null(null), firNamedReference#(String("<iterator>"))), firSimpleNamedReference#(String("hasNext"))), firBlock#(listOf#(), listOf#(firProperty#(firDeclarationStatus#(firVisibilities_Local#(), firModality_FINAL#(), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false)), listOf#(), Null(null), String("element"), firImplicitTypeRef#(), Boolean(false), Boolean(true), Null(null), Null(null), firCallableId#(String("<local>"), Null(null), String("element"))), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), Null(null), firSimpleNamedReference#(String("println")))))))), firBlock#(listOf#(), listOf#(firProperty#(firDeclarationStatus#(firVisibilities_Local#(), firModality_FINAL#(), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false)), listOf#(), Null(null), String("<iterator>"), firImplicitTypeRef#(), Boolean(false), Boolean(true), Null(null), Null(null), firCallableId#(String("<local>"), Null(null), String("<iterator>"))), firWhileLoop#(listOf#(), Null(null), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), Null(null), firNamedReference#(String("<iterator>"))), firSimpleNamedReference#(String("hasNext"))), firBlock#(listOf#(), listOf#(firProperty#(firDeclarationStatus#(firVisibilities_Local#(), firModality_FINAL#(), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false)), listOf#(), Null(null), String("element"), firImplicitTypeRef#(), Boolean(false), Boolean(true), Null(null), Null(null), firCallableId#(String("<local>"), Null(null), String("element"))), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), Null(null), firSimpleNamedReference#(String("println"))))))))))
    }
    public? final? data class Some : R|kotlin/Any| {
        public? [ContainingClassKey=Some] constructor(x: Int, y: Int): R|Some| {
            super<R|kotlin/Any|>()
        }

        public? final? [IsFromPrimaryConstructor=true] val x: Int = R|<local>/x|
            public? get(): Int

        public? final? [IsFromPrimaryConstructor=true] val y: Int = R|<local>/y|
            public? get(): Int

        public final operator fun component1(): Int

        public final operator fun component2(): Int

        public final fun copy(x: Int = this@R|/Some|.R|/Some.x|, y: Int = this@R|/Some|.R|/Some.y|): R|Some|

    }
    public? final? fun baz(set: Set<Some>): <implicit> {
        ^baz firBlock#(listOf#(), listOf#(firBlock#(listOf#(), listOf#(firProperty#(firDeclarationStatus#(firVisibilities_Local#(), firModality_FINAL#(), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false)), listOf#(), Null(null), String("<iterator>"), firImplicitTypeRef#(), Boolean(false), Boolean(true), Null(null), Null(null), firCallableId#(String("<local>"), Null(null), String("<iterator>"))), firWhileLoop#(listOf#(), Null(null), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), Null(null), firNamedReference#(String("<iterator>"))), firSimpleNamedReference#(String("hasNext"))), firBlock#(listOf#(), listOf#(firProperty#(firDeclarationStatus#(firVisibilities_Local#(), firModality_FINAL#(), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false)), listOf#(), Null(null), String("<destruct>"), firImplicitTypeRef#(), Boolean(false), Boolean(true), Null(null), Null(null), firCallableId#(String("<local>"), Null(null), String("<destruct>"))), firProperty#(firDeclarationStatus#(firVisibilities_Local#(), firModality_FINAL#(), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false)), listOf#(), Null(null), String("x"), firImplicitTypeRef#(), Boolean(false), Boolean(true), Null(null), Null(null), firCallableId#(String("<local>"), Null(null), String("x"))), firProperty#(firDeclarationStatus#(firVisibilities_Local#(), firModality_FINAL#(), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false)), listOf#(), Null(null), String("y"), firImplicitTypeRef#(), Boolean(false), Boolean(true), Null(null), Null(null), firCallableId#(String("<local>"), Null(null), String("y"))), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), Null(null), firSimpleNamedReference#(String("println"))))))))))
    }
    public? final? fun withParameter(list: List<Some>): <implicit> {
        ^withParameter firBlock#(listOf#(), listOf#(firBlock#(listOf#(), listOf#(firProperty#(firDeclarationStatus#(firVisibilities_Local#(), firModality_FINAL#(), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false)), listOf#(), Null(null), String("<iterator>"), firImplicitTypeRef#(), Boolean(false), Boolean(true), Null(null), Null(null), firCallableId#(String("<local>"), Null(null), String("<iterator>"))), firWhileLoop#(listOf#(), Null(null), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), Null(null), firNamedReference#(String("<iterator>"))), firSimpleNamedReference#(String("hasNext"))), firBlock#(listOf#(), listOf#(firProperty#(firDeclarationStatus#(firVisibilities_Local#(), firModality_FINAL#(), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false)), listOf#(), Null(null), String("s"), firUserTypeRef#(listOf#(), Boolean(false), listOf#(firQualifierPart#(String("Some"), listOf#()))), Boolean(false), Boolean(true), Null(null), Null(null), firCallableId#(String("<local>"), Null(null), String("s"))), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), Null(null), firSimpleNamedReference#(String("println"))))))))))
    }
