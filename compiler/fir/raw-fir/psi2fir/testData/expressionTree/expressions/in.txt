FILE: in.kt
    public? final? fun foo(x: Int, y: Int, c: Collection<Int>): <implicit> {
        ^foo firBlock#(listOf#(), listOf#(firBinaryLogicExpression#(listOf#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firSimpleNamedReference#(firString#(String("c")))), firSimpleNamedReference#(firString#(String("contains")))), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firSimpleNamedReference#(firString#(String("c")))), firSimpleNamedReference#(firString#(String("contains")))), firSimpleNamedReference#(firString#(String("not")))), firLogicOperationKind_AND#())))
    }
    public? final? fun expressionTree(block: ( () -> Unit )): R|kotlin/Unit| {
        TODO#(String(intrinsic))
    }
