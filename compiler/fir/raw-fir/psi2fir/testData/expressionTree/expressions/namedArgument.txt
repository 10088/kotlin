FILE: namedArgument.kt
    public? final? fun test(): <implicit> {
        ^test firBlock#(listOf#(), listOf#(firSimpleFunction#(listOf#(), firDeclarationStatus#(firVisibilities_Local#(), firNull#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#()), firCallableId#(firString#(String("<local>")), firNull#(), firString#(String("foo"))), listOf#(), firNull#(), firString#(String("foo")), listOf#(firValueParameter#(listOf#(), firUserTypeRef#(listOf#(), firFalse#(), listOf#(firQualifierPart#(firString#(String("String")), listOf#()))), firString#(String("first")), firString#(String()), firFalse#(), firFalse#(), firFalse#()), firValueParameter#(listOf#(), firUserTypeRef#(listOf#(), firFalse#(), listOf#(firQualifierPart#(firString#(String("Boolean")), listOf#()))), firString#(String("second")), firTrue#(), firFalse#(), firFalse#(), firFalse#()), firValueParameter#(listOf#(), firUserTypeRef#(listOf#(), firFalse#(), listOf#(firQualifierPart#(firString#(String("Double")), listOf#()))), firString#(String("third")), firDouble#(Double(3.1415)), firFalse#(), firFalse#(), firFalse#())), firResolvedTypeRef#(listOf#(), firClassId#(firString#(String("kotlin")), firString#(String("Unit")), firFalse#())), firBlock#(listOf#(), listOf#())), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firSimpleNamedReference#(firString#(String("foo")))), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firSimpleNamedReference#(firString#(String("foo")))), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firSimpleNamedReference#(firString#(String("foo")))), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firSimpleNamedReference#(firString#(String("foo")))), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firSimpleNamedReference#(firString#(String("foo"))))))
    }
    public? final? fun expressionTree(block: ( () -> Unit )): R|kotlin/Unit| {
        TODO#(String(intrinsic))
    }
