FILE: simpleReturns.kt
    public? final? fun test(): <implicit> {
        ^test firBlock#(listOf#(), listOf#(firSimpleFunction#(listOf#(), firDeclarationStatus#(firVisibilities_Local#(), Null(null), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false)), firCallableId#(String("<local>"), Null(null), String("foo")), listOf#(), Null(null), String("foo"), listOf#(), firResolvedTypeRef#(listOf#(), firClassId#(String("kotlin"), String("Unit"), Boolean(false)), Boolean(false)), firBlock#(listOf#(), listOf#(firReturnExpression#(listOf#(), firFunctionTarget#(String("foo"), Boolean(false)), firUnitExpression#(listOf#()))))), firSimpleFunction#(listOf#(), firDeclarationStatus#(firVisibilities_Local#(), Null(null), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false), Boolean(false)), firCallableId#(String("<local>"), Null(null), String("bar")), listOf#(), Null(null), String("bar"), listOf#(), firUserTypeRef#(listOf#(), Boolean(false), listOf#(firQualifierPart#(String("String"), listOf#()))), firBlock#(listOf#(), listOf#(firReturnExpression#(listOf#(), firFunctionTarget#(String("bar"), Boolean(false)), firString#(String(Hello))))))))
    }
    public? final? fun expressionTree(block: ( () -> Unit )): R|kotlin/Unit| {
        TODO#(String(intrinsic))
    }
