FILE: simpleReturns.kt
    public? final? fun test(): <implicit> {
        ^test firBlock#(listOf#(), listOf#(firSimpleFunction#(listOf#(), firDeclarationStatus#(firVisibilities_Local#(), firNull#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#()), firCallableId#(firString#(String("<local>")), firNull#(), firString#(String("foo"))), listOf#(), firNull#(), firString#(String("foo")), listOf#(), firResolvedTypeRef#(listOf#(), firClassId#(firString#(String("kotlin")), firString#(String("Unit")), firFalse#())), firBlock#(listOf#(), listOf#(firReturnExpression#(listOf#(), firImplicitNothingTypeRef#(), firFunctionTarget#(firString#(String("foo")), firFalse#()), firUnitExpression#(listOf#()))))), firSimpleFunction#(listOf#(), firDeclarationStatus#(firVisibilities_Local#(), firNull#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#(), firFalse#()), firCallableId#(firString#(String("<local>")), firNull#(), firString#(String("bar"))), listOf#(), firNull#(), firString#(String("bar")), listOf#(), firUserTypeRef#(listOf#(), firFalse#(), listOf#(firQualifierPart#(firString#(String("String")), listOf#()))), firBlock#(listOf#(), listOf#(firReturnExpression#(listOf#(), firImplicitNothingTypeRef#(), firFunctionTarget#(firString#(String("bar")), firFalse#()), firString#(String(Hello))))))))
    }
    public? final? fun expressionTree(block: ( () -> Unit )): R|kotlin/Unit| {
        TODO#(String(intrinsic))
    }
