FILE: try.kt
    public? final? fun some(): <implicit> {
        ^some firBlock#(listOf#(), listOf#(firTryExpression#(listOf#(), firBlock#(listOf#(), listOf#(firThrowExpression#(listOf#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firSimpleNamedReference#(firString#(String("KotlinNullPointerException"))))))), listOf#(firCatch#(firValueParameter#(listOf#(), firUserTypeRef#(listOf#(), firFalse#(), listOf#(firQualifierPart#(firString#(String("RuntimeException")), listOf#()))), firString#(String("e")), firNull#(), firFalse#(), firFalse#(), firFalse#()), firBlock#(listOf#(), listOf#(firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firSimpleNamedReference#(firString#(String("println"))))))), firCatch#(firValueParameter#(listOf#(), firUserTypeRef#(listOf#(), firFalse#(), listOf#(firQualifierPart#(firString#(String("Exception")), listOf#()))), firString#(String("e")), firNull#(), firFalse#(), firFalse#(), firFalse#()), firBlock#(listOf#(), listOf#(firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firSimpleNamedReference#(firString#(String("println")))))))), firBlock#(listOf#(), listOf#(firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firSimpleNamedReference#(firString#(String("println")))))))))
    }
    public? final? fun expressionTree(block: ( () -> Unit )): R|kotlin/Unit| {
        TODO#(String(intrinsic))
    }
