FILE: try.kt
    public? final? fun some(): <implicit> {
        ^some firBlock#(listOf#(), listOf#(firTryExpression#(listOf#(), firBlock#(listOf#(), listOf#(firThrowExpression#(listOf#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), Null(null), firSimpleNamedReference#(String("KotlinNullPointerException")))))), listOf#(firCatch#(firValueParameter#(listOf#(), firUserTypeRef#(listOf#(), Boolean(false), listOf#(firQualifierPart#(String("RuntimeException"), listOf#()))), String("e"), Null(null), Boolean(false), Boolean(false), Boolean(false)), firBlock#(listOf#(), listOf#(firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), Null(null), firSimpleNamedReference#(String("println")))))), firCatch#(firValueParameter#(listOf#(), firUserTypeRef#(listOf#(), Boolean(false), listOf#(firQualifierPart#(String("Exception"), listOf#()))), String("e"), Null(null), Boolean(false), Boolean(false), Boolean(false)), firBlock#(listOf#(), listOf#(firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), Null(null), firSimpleNamedReference#(String("println"))))))), firBlock#(listOf#(), listOf#(firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), Null(null), firSimpleNamedReference#(String("println"))))))))
    }
    public? final? fun expressionTree(block: ( () -> Unit )): R|kotlin/Unit| {
        TODO#(String(intrinsic))
    }
