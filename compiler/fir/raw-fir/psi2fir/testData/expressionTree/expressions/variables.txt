FILE: variables.kt
    public? final? fun foo(): <implicit> {
        ^foo firBlock#(listOf#(), listOf#(firProperty#(listOf#(), firNull#(), firString#(String("x")), firImplicitTypeRef#(), firFalse#(), firTrue#(), firNull#(), firNull#()), firProperty#(listOf#(), firNull#(), firString#(String("y")), firImplicitTypeRef#(), firTrue#(), firTrue#(), firNull#(), firNull#()), firProperty#(listOf#(), firNull#(), firString#(String("z")), firImplicitTypeRef#(), firFalse#(), firTrue#(), firNull#(), firNull#()), firVariableAssignment#(listOf#(), listOf#(), firNull#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firSimpleNamedReference#(firString#(String("y")))), firSimpleNamedReference#(firString#(String("plus"))))), firProperty#(listOf#(), firNull#(), firString#(String("w")), firImplicitTypeRef#(), firFalse#(), firTrue#(), firNull#(), firNull#()), firReturnExpression#(listOf#(), firFunctionTarget#(firString#(String("foo")), firFalse#()), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firSimpleNamedReference#(firString#(String("w")))))))
    }
    public? final? fun expressionTree(block: ( () -> Unit )): R|kotlin/Unit| {
        TODO#(String(intrinsic))
    }
