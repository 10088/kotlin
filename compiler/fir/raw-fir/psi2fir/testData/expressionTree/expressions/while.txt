FILE: while.kt
    public? final? fun foo(limit: Int): <implicit> {
        ^foo firBlock#(listOf#(), listOf#(firProperty#(listOf#(), firNull#(), firString#(String("k")), firImplicitTypeRef#(), firTrue#(), firTrue#(), firNull#(), firNull#()), firWhileLoop#(listOf#(), firLabel#(firString#(String("some"))), firComparisonExpression#(listOf#(), firOperation_LT#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firSimpleNamedReference#(firString#(String("k")))), firSimpleNamedReference#(firString#(String("compareTo"))))), firBlock#(listOf#(), listOf#(firProperty#(listOf#(), firNull#(), firString#(String("<unary>")), firImplicitTypeRef#(), firFalse#(), firTrue#(), firNull#(), firNull#()), firVariableAssignment#(listOf#(), listOf#(), firNull#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firNamedReference#(firString#(String("<unary>")))), firSimpleNamedReference#(firString#(String("inc"))))), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firNamedReference#(firString#(String("<unary>")))), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firSimpleNamedReference#(firString#(String("println")))), firWhileLoop#(listOf#(), firNull#(), firEqualityOperatorCall#(listOf#(), listOf#(firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firSimpleNamedReference#(firString#(String("k")))), firIntegerLiteral#(IntegerLiteral(13))), firOperation_EQ#()), firBlock#(listOf#(), listOf#(firProperty#(listOf#(), firNull#(), firString#(String("<unary>")), firImplicitTypeRef#(), firFalse#(), firTrue#(), firNull#(), firNull#()), firVariableAssignment#(listOf#(), listOf#(), firNull#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firNamedReference#(firString#(String("<unary>")))), firSimpleNamedReference#(firString#(String("inc"))))), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firNamedReference#(firString#(String("<unary>")))), firWhenExpression#(listOf#(), firNull#(), firNull#(), listOf#(firWhenBranch#(firComparisonExpression#(listOf#(), firOperation_LT#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firSimpleNamedReference#(firString#(String("k")))), firSimpleNamedReference#(firString#(String("compareTo"))))), firBlock#(listOf#(), listOf#(firBreakExpression#(listOf#()))))), firFalse#()), firWhenExpression#(listOf#(), firNull#(), firNull#(), listOf#(firWhenBranch#(firComparisonExpression#(listOf#(), firOperation_GT#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firSimpleNamedReference#(firString#(String("k")))), firSimpleNamedReference#(firString#(String("compareTo"))))), firBlock#(listOf#(), listOf#(firContinueExpression#(listOf#()))))), firFalse#())))))))))
    }
    public? final? fun bar(limit: Int): <implicit> {
        ^bar firBlock#(listOf#(), listOf#(firProperty#(listOf#(), firNull#(), firString#(String("k")), firImplicitTypeRef#(), firTrue#(), firTrue#(), firNull#(), firNull#()), firDoWhileLoop#(listOf#(), firNull#(), firBlock#(listOf#(), listOf#(firProperty#(listOf#(), firNull#(), firString#(String("<unary>")), firImplicitTypeRef#(), firFalse#(), firTrue#(), firNull#(), firNull#()), firVariableAssignment#(listOf#(), listOf#(), firNull#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firNamedReference#(firString#(String("<unary>")))), firSimpleNamedReference#(firString#(String("dec"))))), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firNamedReference#(firString#(String("<unary>")))), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firSimpleNamedReference#(firString#(String("println")))))), firComparisonExpression#(listOf#(), firOperation_GT_EQ#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firQualifiedAccessExpression#(listOf#(), listOf#(), firNoReceiverExpression#(), firNoReceiverExpression#(), firNull#(), firSimpleNamedReference#(firString#(String("k")))), firSimpleNamedReference#(firString#(String("compareTo"))))))))
    }
    public? final? fun expressionTree(block: ( () -> Unit )): R|kotlin/Unit| {
        TODO#(String(intrinsic))
    }
