// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: compiler/ir/serialization.common/src/KotlinIr.proto

package org.jetbrains.kotlin.backend.common.serialization.proto;

/**
 * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier}
 */
public final class PirValueParameterCarrier extends
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite implements
    // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier)
    PirValueParameterCarrierOrBuilder {
  // Use PirValueParameterCarrier.newBuilder() to construct.
  private PirValueParameterCarrier(org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private PirValueParameterCarrier(boolean noInit) { this.unknownFields = org.jetbrains.kotlin.protobuf.ByteString.EMPTY;}

  private static final PirValueParameterCarrier defaultInstance;
  public static PirValueParameterCarrier getDefaultInstance() {
    return defaultInstance;
  }

  public PirValueParameterCarrier getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final org.jetbrains.kotlin.protobuf.ByteString unknownFields;
  private PirValueParameterCarrier(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    org.jetbrains.kotlin.protobuf.ByteString.Output unknownFieldsOutput =
        org.jetbrains.kotlin.protobuf.ByteString.newOutput();
    org.jetbrains.kotlin.protobuf.CodedOutputStream unknownFieldsCodedOutput =
        org.jetbrains.kotlin.protobuf.CodedOutputStream.newInstance(
            unknownFieldsOutput, 1);
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            lastModified_ = input.readInt32();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            parentSymbol_ = input.readInt64();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            origin_ = input.readInt32();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            defaultValue_ = input.readInt32();
            break;
          }
          case 42: {
            org.jetbrains.kotlin.backend.common.serialization.proto.IrType.Builder subBuilder = null;
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              subBuilder = type_.toBuilder();
            }
            type_ = input.readMessage(org.jetbrains.kotlin.backend.common.serialization.proto.IrType.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(type_);
              type_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000010;
            break;
          }
          case 50: {
            org.jetbrains.kotlin.backend.common.serialization.proto.IrType.Builder subBuilder = null;
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
              subBuilder = varargElementType_.toBuilder();
            }
            varargElementType_ = input.readMessage(org.jetbrains.kotlin.backend.common.serialization.proto.IrType.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(varargElementType_);
              varargElementType_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000020;
            break;
          }
        }
      }
    } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      try {
        unknownFieldsCodedOutput.flush();
      } catch (java.io.IOException e) {
      // Should not happen
      } finally {
        unknownFields = unknownFieldsOutput.toByteString();
      }
      makeExtensionsImmutable();
    }
  }
  public static org.jetbrains.kotlin.protobuf.Parser<PirValueParameterCarrier> PARSER =
      new org.jetbrains.kotlin.protobuf.AbstractParser<PirValueParameterCarrier>() {
    public PirValueParameterCarrier parsePartialFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return new PirValueParameterCarrier(input, extensionRegistry);
    }
  };

  @java.lang.Override
  public org.jetbrains.kotlin.protobuf.Parser<PirValueParameterCarrier> getParserForType() {
    return PARSER;
  }

  private int bitField0_;
  public static final int LASTMODIFIED_FIELD_NUMBER = 1;
  private int lastModified_;
  /**
   * <code>required int32 lastModified = 1;</code>
   */
  public boolean hasLastModified() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>required int32 lastModified = 1;</code>
   */
  public int getLastModified() {
    return lastModified_;
  }

  public static final int PARENTSYMBOL_FIELD_NUMBER = 2;
  private long parentSymbol_;
  /**
   * <code>optional int64 parentSymbol = 2;</code>
   */
  public boolean hasParentSymbol() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>optional int64 parentSymbol = 2;</code>
   */
  public long getParentSymbol() {
    return parentSymbol_;
  }

  public static final int ORIGIN_FIELD_NUMBER = 3;
  private int origin_;
  /**
   * <code>optional int32 origin = 3;</code>
   */
  public boolean hasOrigin() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>optional int32 origin = 3;</code>
   */
  public int getOrigin() {
    return origin_;
  }

  public static final int DEFAULTVALUE_FIELD_NUMBER = 4;
  private int defaultValue_;
  /**
   * <code>optional int32 defaultValue = 4;</code>
   */
  public boolean hasDefaultValue() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <code>optional int32 defaultValue = 4;</code>
   */
  public int getDefaultValue() {
    return defaultValue_;
  }

  public static final int TYPE_FIELD_NUMBER = 5;
  private org.jetbrains.kotlin.backend.common.serialization.proto.IrType type_;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrType type = 5;</code>
   */
  public boolean hasType() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrType type = 5;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrType getType() {
    return type_;
  }

  public static final int VARARGELEMENTTYPE_FIELD_NUMBER = 6;
  private org.jetbrains.kotlin.backend.common.serialization.proto.IrType varargElementType_;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrType varargElementType = 6;</code>
   */
  public boolean hasVarargElementType() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrType varargElementType = 6;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrType getVarargElementType() {
    return varargElementType_;
  }

  private void initFields() {
    lastModified_ = 0;
    parentSymbol_ = 0L;
    origin_ = 0;
    defaultValue_ = 0;
    type_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrType.getDefaultInstance();
    varargElementType_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrType.getDefaultInstance();
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasLastModified()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (hasType()) {
      if (!getType().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasVarargElementType()) {
      if (!getVarargElementType().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(org.jetbrains.kotlin.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt32(1, lastModified_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt64(2, parentSymbol_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(3, origin_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt32(4, defaultValue_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeMessage(5, type_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeMessage(6, varargElementType_);
    }
    output.writeRawBytes(unknownFields);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeInt32Size(1, lastModified_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeInt64Size(2, parentSymbol_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeInt32Size(3, origin_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeInt32Size(4, defaultValue_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(5, type_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(6, varargElementType_);
    }
    size += unknownFields.size();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  protected java.lang.Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier parseFrom(byte[] data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier parseFrom(
      byte[] data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier parseFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier parseDelimitedFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  /**
   * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier}
   */
  public static final class Builder extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
        org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier, Builder>
      implements
      // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier)
      org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrierOrBuilder {
    // Construct using org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      lastModified_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      parentSymbol_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000002);
      origin_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      defaultValue_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      type_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrType.getDefaultInstance();
      bitField0_ = (bitField0_ & ~0x00000010);
      varargElementType_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrType.getDefaultInstance();
      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier getDefaultInstanceForType() {
      return org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier.getDefaultInstance();
    }

    public org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier build() {
      org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier buildPartial() {
      org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier result = new org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.lastModified_ = lastModified_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.parentSymbol_ = parentSymbol_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.origin_ = origin_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.defaultValue_ = defaultValue_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.type_ = type_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      result.varargElementType_ = varargElementType_;
      result.bitField0_ = to_bitField0_;
      return result;
    }

    public Builder mergeFrom(org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier other) {
      if (other == org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier.getDefaultInstance()) return this;
      if (other.hasLastModified()) {
        setLastModified(other.getLastModified());
      }
      if (other.hasParentSymbol()) {
        setParentSymbol(other.getParentSymbol());
      }
      if (other.hasOrigin()) {
        setOrigin(other.getOrigin());
      }
      if (other.hasDefaultValue()) {
        setDefaultValue(other.getDefaultValue());
      }
      if (other.hasType()) {
        mergeType(other.getType());
      }
      if (other.hasVarargElementType()) {
        mergeVarargElementType(other.getVarargElementType());
      }
      setUnknownFields(
          getUnknownFields().concat(other.unknownFields));
      return this;
    }

    public final boolean isInitialized() {
      if (!hasLastModified()) {
        
        return false;
      }
      if (hasType()) {
        if (!getType().isInitialized()) {
          
          return false;
        }
      }
      if (hasVarargElementType()) {
        if (!getVarargElementType().isInitialized()) {
          
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int lastModified_ ;
    /**
     * <code>required int32 lastModified = 1;</code>
     */
    public boolean hasLastModified() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 lastModified = 1;</code>
     */
    public int getLastModified() {
      return lastModified_;
    }
    /**
     * <code>required int32 lastModified = 1;</code>
     */
    public Builder setLastModified(int value) {
      bitField0_ |= 0x00000001;
      lastModified_ = value;
      
      return this;
    }
    /**
     * <code>required int32 lastModified = 1;</code>
     */
    public Builder clearLastModified() {
      bitField0_ = (bitField0_ & ~0x00000001);
      lastModified_ = 0;
      
      return this;
    }

    private long parentSymbol_ ;
    /**
     * <code>optional int64 parentSymbol = 2;</code>
     */
    public boolean hasParentSymbol() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 parentSymbol = 2;</code>
     */
    public long getParentSymbol() {
      return parentSymbol_;
    }
    /**
     * <code>optional int64 parentSymbol = 2;</code>
     */
    public Builder setParentSymbol(long value) {
      bitField0_ |= 0x00000002;
      parentSymbol_ = value;
      
      return this;
    }
    /**
     * <code>optional int64 parentSymbol = 2;</code>
     */
    public Builder clearParentSymbol() {
      bitField0_ = (bitField0_ & ~0x00000002);
      parentSymbol_ = 0L;
      
      return this;
    }

    private int origin_ ;
    /**
     * <code>optional int32 origin = 3;</code>
     */
    public boolean hasOrigin() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 origin = 3;</code>
     */
    public int getOrigin() {
      return origin_;
    }
    /**
     * <code>optional int32 origin = 3;</code>
     */
    public Builder setOrigin(int value) {
      bitField0_ |= 0x00000004;
      origin_ = value;
      
      return this;
    }
    /**
     * <code>optional int32 origin = 3;</code>
     */
    public Builder clearOrigin() {
      bitField0_ = (bitField0_ & ~0x00000004);
      origin_ = 0;
      
      return this;
    }

    private int defaultValue_ ;
    /**
     * <code>optional int32 defaultValue = 4;</code>
     */
    public boolean hasDefaultValue() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 defaultValue = 4;</code>
     */
    public int getDefaultValue() {
      return defaultValue_;
    }
    /**
     * <code>optional int32 defaultValue = 4;</code>
     */
    public Builder setDefaultValue(int value) {
      bitField0_ |= 0x00000008;
      defaultValue_ = value;
      
      return this;
    }
    /**
     * <code>optional int32 defaultValue = 4;</code>
     */
    public Builder clearDefaultValue() {
      bitField0_ = (bitField0_ & ~0x00000008);
      defaultValue_ = 0;
      
      return this;
    }

    private org.jetbrains.kotlin.backend.common.serialization.proto.IrType type_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrType.getDefaultInstance();
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrType type = 5;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrType type = 5;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrType getType() {
      return type_;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrType type = 5;</code>
     */
    public Builder setType(org.jetbrains.kotlin.backend.common.serialization.proto.IrType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      type_ = value;

      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrType type = 5;</code>
     */
    public Builder setType(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrType.Builder builderForValue) {
      type_ = builderForValue.build();

      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrType type = 5;</code>
     */
    public Builder mergeType(org.jetbrains.kotlin.backend.common.serialization.proto.IrType value) {
      if (((bitField0_ & 0x00000010) == 0x00000010) &&
          type_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrType.getDefaultInstance()) {
        type_ =
          org.jetbrains.kotlin.backend.common.serialization.proto.IrType.newBuilder(type_).mergeFrom(value).buildPartial();
      } else {
        type_ = value;
      }

      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrType type = 5;</code>
     */
    public Builder clearType() {
      type_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrType.getDefaultInstance();

      bitField0_ = (bitField0_ & ~0x00000010);
      return this;
    }

    private org.jetbrains.kotlin.backend.common.serialization.proto.IrType varargElementType_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrType.getDefaultInstance();
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrType varargElementType = 6;</code>
     */
    public boolean hasVarargElementType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrType varargElementType = 6;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrType getVarargElementType() {
      return varargElementType_;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrType varargElementType = 6;</code>
     */
    public Builder setVarargElementType(org.jetbrains.kotlin.backend.common.serialization.proto.IrType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      varargElementType_ = value;

      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrType varargElementType = 6;</code>
     */
    public Builder setVarargElementType(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrType.Builder builderForValue) {
      varargElementType_ = builderForValue.build();

      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrType varargElementType = 6;</code>
     */
    public Builder mergeVarargElementType(org.jetbrains.kotlin.backend.common.serialization.proto.IrType value) {
      if (((bitField0_ & 0x00000020) == 0x00000020) &&
          varargElementType_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrType.getDefaultInstance()) {
        varargElementType_ =
          org.jetbrains.kotlin.backend.common.serialization.proto.IrType.newBuilder(varargElementType_).mergeFrom(value).buildPartial();
      } else {
        varargElementType_ = value;
      }

      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrType varargElementType = 6;</code>
     */
    public Builder clearVarargElementType() {
      varargElementType_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrType.getDefaultInstance();

      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier)
  }

  static {
    defaultInstance = new PirValueParameterCarrier(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.backend.common.serialization.proto.PirValueParameterCarrier)
}
