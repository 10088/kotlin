@kotlin.internal.InlineOnly public actual inline fun <R> synchronized(lock: kotlin.Any, block: () -> R): R defined in kotlin in file Synchronized.kt[SimpleFunctionDescriptorImpl@589c5d6e]
R: Unit


@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@2d653892]
T: Set<RegexOption>

public abstract operator fun next(): kotlin.collections.Map.Entry<K, V> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2371290e]
T: Entry<K, V>

public abstract operator fun next(): kotlin.collections.Map.Entry<K, V> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2371290e]
T: Entry<K, V>

@kotlin.internal.InlineOnly public inline fun <R> run(block: () -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@3add57c7]
R: PlatformImplementations

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin in file Lazy.kt[SimpleFunctionDescriptorImpl@3a1bb64b]
T: Map<Int, CharCategory>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin in file Lazy.kt[SimpleFunctionDescriptorImpl@3a1bb64b]
T: Map<Int, CharDirectionality>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@14e7cb55]
R: Charset

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@14e7cb55]
R: Charset

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@14e7cb55]
R: Charset

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@14e7cb55]
R: Regex


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: DecimalFormatSymbols

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: DecimalFormatSymbols


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Unit







































































































































public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@22a5c3f5]
T: Int

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@44ddee0c]
T: Int

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@544e05c]
T: Int

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4c3bb2b6]
T: Int

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@744f7833]
T: Int

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@15597214]
T: Int

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1890ad66]
T: Int

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@291ebe99]
T: Int

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7b903ce2]
T: Int

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1183c3e8]
T: Int

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@39c7dbc]
T: Int

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7d44cdf4]
T: Int

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@48813ad8]
T: Int

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1ca20a1a]
T: Int

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5272ffa5]
T: Int

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@73c28426]
T: Int

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2ed3e4d7]
T: Int

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3e4bed08]
T: Int



















@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: Array<Byte>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: Array<Short>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: Array<Int>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: Array<Long>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: Array<Float>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: Array<Double>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: Array<Char>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: Array<T>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: ByteArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: ShortArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: IntArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: LongArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: FloatArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: DoubleArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: CharArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: Array<T>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: ByteArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: ShortArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: IntArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: LongArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: FloatArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: DoubleArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: CharArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: Array<out T>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: ByteArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: ShortArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: IntArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: LongArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: FloatArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: DoubleArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: CharArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: Array<Byte>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: Array<Short>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: Array<Int>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: Array<Long>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: Array<Float>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: Array<Double>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: Array<Boolean>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: Array<Char>

public final operator fun get(index: kotlin.Int): kotlin.Boolean defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@385fb431]
T: Boolean

public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@541124dc]
T: Byte

public final operator fun get(index: kotlin.Int): kotlin.Char defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@1c1022d1]
T: Char

public final operator fun get(index: kotlin.Int): kotlin.Double defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@799f3b9a]
T: Double

public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@5de59647]
T: Float

public final operator fun get(index: kotlin.Int): kotlin.Int defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@2781cb41]
T: Int

public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@46d5e6e5]
T: Long

public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@4e54c61f]
T: Short



















public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<T>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<Byte>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<Short>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<Int>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<Long>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<Float>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<Double>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<Boolean>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<Char>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<V>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<V>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<V>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<V>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<V>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<V>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<V>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<V>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<V>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean














































public final operator fun get(index: kotlin.Int): kotlin.Double defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@235bec12]
T: Double

public final operator fun get(index: kotlin.Int): kotlin.Double defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@235bec12]
T: Double

public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@3f729122]
T: Float

public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@3f729122]
T: Float

public final operator fun get(index: kotlin.Int): T defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@3a7028e7]
T: T

public final operator fun get(index: kotlin.Int): T defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@3a7028e7]
T: T



















public final operator fun get(index: kotlin.Int): kotlin.Double defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@72316554]
T: Double

public final operator fun get(index: kotlin.Int): kotlin.Double defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@72316554]
T: Double

public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@3f29bd06]
T: Float

public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@3f29bd06]
T: Float

public final operator fun get(index: kotlin.Int): T defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6cf7954e]
T: T

public final operator fun get(index: kotlin.Int): T defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6cf7954e]
T: T



















































































































































































































































































public abstract operator fun next(): kotlin.Byte defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@765f83eb]
T: Byte

public abstract operator fun next(): kotlin.Short defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4d4aadcc]
T: Short

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4778ede7]
T: Int

public abstract operator fun next(): kotlin.Long defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3908e85c]
T: Long

public abstract operator fun next(): kotlin.Float defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6455da30]
T: Float

public abstract operator fun next(): kotlin.Double defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6d400a10]
T: Double

public abstract operator fun next(): kotlin.Byte defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@58940f28]
T: Byte

public abstract operator fun next(): kotlin.Short defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@49b1542e]
T: Short

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4d638f0d]
T: Int

public abstract operator fun next(): kotlin.Long defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@787ed78a]
T: Long

public abstract operator fun next(): kotlin.Float defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2f5c9fd2]
T: Float

public abstract operator fun next(): kotlin.Double defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@201def62]
T: Double


















public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7274a495]
T: Int


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: ArrayList<T>


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: Array<T>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: MutableList<T>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: Array<T>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: MutableList<T>

public abstract operator fun next(): kotlin.Boolean defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7decdced]
T: Boolean

public abstract operator fun next(): kotlin.Byte defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2b057b84]
T: Byte

public abstract operator fun next(): kotlin.Char defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@42209564]
T: Char

public abstract operator fun next(): kotlin.Double defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4437568]
T: Double

public abstract operator fun next(): kotlin.Float defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6e21ed5c]
T: Float

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5356dc8e]
T: Int

public abstract operator fun next(): kotlin.Long defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5350be06]
T: Long

public abstract operator fun next(): kotlin.Short defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@75f19ac3]
T: Short



public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<T>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<V>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean






public abstract operator fun next(): kotlin.Double defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5fc35af9]
T: Double

public abstract operator fun next(): kotlin.Double defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5fc35af9]
T: Double

public abstract operator fun next(): kotlin.Float defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6afae61c]
T: Float

public abstract operator fun next(): kotlin.Float defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6afae61c]
T: Float

public abstract operator fun next(): T defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@21a27dad]
T: T

public abstract operator fun next(): T defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@21a27dad]
T: T



public abstract operator fun next(): kotlin.Double defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4b6c0a85]
T: Double

public abstract operator fun next(): kotlin.Double defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4b6c0a85]
T: Double

public abstract operator fun next(): kotlin.Float defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@31f98844]
T: Float

public abstract operator fun next(): kotlin.Float defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@31f98844]
T: Float

public abstract operator fun next(): T defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5129994b]
T: T

public abstract operator fun next(): T defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5129994b]
T: T





@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: C
























public abstract operator fun next(): kotlin.Byte defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4ea0bdca]
T: Byte

public abstract operator fun next(): kotlin.Short defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@28c4e7ea]
T: Short

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3044ce22]
T: Int

public abstract operator fun next(): kotlin.Long defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1d19ea16]
T: Long

public abstract operator fun next(): kotlin.Float defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1f93d721]
T: Float

public abstract operator fun next(): kotlin.Double defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3a84582d]
T: Double

public abstract operator fun next(): kotlin.Byte defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4f6c39ff]
T: Byte

public abstract operator fun next(): kotlin.Short defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4b29169]
T: Short

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2d191c1d]
T: Int

public abstract operator fun next(): kotlin.Long defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1c64c792]
T: Long

public abstract operator fun next(): kotlin.Float defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@466f0cc1]
T: Float

public abstract operator fun next(): kotlin.Double defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@38665de4]
T: Double

public abstract operator fun next(): kotlin.collections.Map.Entry<K, V> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@572f629]
T: Entry<K, V>

public abstract operator fun next(): kotlin.collections.Map.Entry<K, V> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@572f629]
T: Entry<K, V>

public abstract operator fun next(): kotlin.collections.Map.Entry<K, V> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@44138a96]
T: Entry<K, V>


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean

public abstract operator fun next(): kotlin.collections.Map.Entry<K, V> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@77079e4a]
T: Entry<K, V>

public abstract operator fun next(): kotlin.collections.Map.Entry<K, V> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@54ed4ad4]
T: Entry<K, V>


public abstract operator fun next(): kotlin.collections.Map.Entry<K, V> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6d1eab75]
T: Entry<K, V>


public abstract operator fun next(): kotlin.collections.Map.Entry<K, V> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@63fb1640]
T: Entry<K, V>


public abstract operator fun next(): kotlin.collections.Map.Entry<K, V> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1c734a48]
T: Entry<K, V>


public abstract operator fun next(): kotlin.collections.Map.Entry<K, V> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@28de1b0c]
T: Entry<K, V>


public abstract operator fun next(): kotlin.collections.Map.Entry<K, V> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@c6974e4]
T: Entry<K, V>


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: M

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean















public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<T>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<V>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean






public abstract operator fun next(): kotlin.Double defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@72168a31]
T: Double

public abstract operator fun next(): kotlin.Double defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@72168a31]
T: Double

public abstract operator fun next(): kotlin.Float defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2826963]
T: Float

public abstract operator fun next(): kotlin.Float defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2826963]
T: Float

public abstract operator fun next(): T defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1aac9cea]
T: T

public abstract operator fun next(): T defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1aac9cea]
T: T



public abstract operator fun next(): kotlin.Double defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@73bbe5ef]
T: Double

public abstract operator fun next(): kotlin.Double defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@73bbe5ef]
T: Double

public abstract operator fun next(): kotlin.Float defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@23c289fc]
T: Float

public abstract operator fun next(): kotlin.Float defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@23c289fc]
T: Float

public abstract operator fun next(): T defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3ec6b2b8]
T: T

public abstract operator fun next(): T defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3ec6b2b8]
T: T




























public abstract operator fun next(): kotlin.Byte defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4655ee9e]
T: Byte

public abstract operator fun next(): kotlin.Short defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5bfa8724]
T: Short

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4e8820a4]
T: Int

public abstract operator fun next(): kotlin.Long defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2c8b6d5]
T: Long

public abstract operator fun next(): kotlin.Float defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4c89562a]
T: Float

public abstract operator fun next(): kotlin.Double defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@776ae5c8]
T: Double

public abstract operator fun next(): kotlin.Byte defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1926a64e]
T: Byte

public abstract operator fun next(): kotlin.Short defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7ab53693]
T: Short

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4cb949e8]
T: Int

public abstract operator fun next(): kotlin.Long defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7632d6ca]
T: Long

public abstract operator fun next(): kotlin.Float defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@e813e4a]
T: Float

public abstract operator fun next(): kotlin.Double defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3e9b5451]
T: Double

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Int


















public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@62fdc859]
T: Int







public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<Char>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<V>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Boolean












@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: S

























































































public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@66ce51eb]
T: Int

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4cccb5e4]
T: Int

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5f83617c]
T: Int

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7901f5a9]
T: Int









@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: UIntArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: ULongArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: UByteArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: UShortArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: UIntArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: ULongArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: UByteArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: UShortArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: UIntArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: ULongArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: UByteArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: UShortArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: UIntArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: ULongArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: UByteArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: UShortArray

public abstract operator fun next(): kotlin.UInt defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@31e2c64c]
T: UInt

public abstract operator fun next(): kotlin.ULong defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@63672b03]
T: ULong

public abstract operator fun next(): kotlin.UByte defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2a8433b3]
T: UByte

public abstract operator fun next(): kotlin.UShort defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3a6fdc04]
T: UShort

public final operator fun get(index: kotlin.Int): kotlin.UByte defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@5f7b3a74]
T: UByte

public final operator fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6157e2a5]
T: UInt

public final operator fun get(index: kotlin.Int): kotlin.ULong defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@72a7bb3b]
T: ULong

public final operator fun get(index: kotlin.Int): kotlin.UShort defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@56ab1720]
T: UShort





public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<UInt>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<ULong>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<UByte>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<UShort>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<V>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<V>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<V>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections in file Maps.kt[SimpleFunctionDescriptorImpl@4b1ec422]
V: MutableList<V>

















































































































































public abstract operator fun next(): kotlin.UInt defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1e60d958]
T: UInt

public abstract operator fun next(): kotlin.ULong defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@bee29bb]
T: ULong

public abstract operator fun next(): kotlin.UByte defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@173d104a]
T: UByte

public abstract operator fun next(): kotlin.UShort defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@728ca49b]
T: UShort

public abstract operator fun next(): kotlin.UByte defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@cdfeb4f]
T: UByte

public abstract operator fun next(): kotlin.UInt defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@76713186]
T: UInt

public abstract operator fun next(): kotlin.ULong defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@51d4ede6]
T: ULong

public abstract operator fun next(): kotlin.UShort defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@170fe7d0]
T: UShort

public abstract operator fun next(): kotlin.UInt defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@367aaaf0]
T: UInt

public abstract operator fun next(): kotlin.ULong defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@20ef4caa]
T: ULong

public abstract operator fun next(): kotlin.UByte defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3defe9bf]
T: UByte

public abstract operator fun next(): kotlin.UShort defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@79046b05]
T: UShort

public abstract operator fun next(): kotlin.UInt defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@73fe78f1]
T: UInt

public abstract operator fun next(): kotlin.ULong defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2d7894e7]
T: ULong

public abstract operator fun next(): kotlin.UByte defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@19c2682c]
T: UByte

public abstract operator fun next(): kotlin.UShort defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@25aa771e]
T: UShort





public abstract operator fun next(): kotlin.Byte defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@53a095b9]
T: Byte

public abstract operator fun next(): kotlin.Short defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7435973b]
T: Short

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@46a0726]
T: Int

public abstract operator fun next(): kotlin.Long defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5475298d]
T: Long

public abstract operator fun next(): kotlin.Float defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@594ec12f]
T: Float

public abstract operator fun next(): kotlin.Double defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6bf6df54]
T: Double

public abstract operator fun next(): kotlin.Boolean defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3f1da463]
T: Boolean

public abstract operator fun next(): kotlin.Char defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3a61df76]
T: Char

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: IntRef

public abstract val value: kotlin.jvm.internal.Ref.IntRef defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@829698b]
V: IntRef

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: TreeMap<K, V>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: TreeMap<K, V>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: Properties

public abstract operator fun next(): kotlin.collections.Map.Entry<K, V> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4dffa4ad]
T: Entry<K, V>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: MutableList<T>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: MutableList<T>



@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@2d653892]
T: T


@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@58eb8ac9]
R: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@2d653892]
T: Continuation<Any?>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@2d653892]
T: Cache

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@2d653892]
T: Cache

public abstract operator fun next(): kotlin.collections.IndexedValue<kotlin.Int> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7af0a2f4]
T: IndexedValue<Int>

public final operator fun component2(): kotlin.Int defined in kotlin.collections.IndexedValue[SimpleFunctionDescriptorImpl@4eea54b5]
T: Int

public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@699d2d52]
T: String

public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@78de2f02]
T: String

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> kotlin.Result<T>.getOrThrow(): T defined in kotlin in file Result.kt[SimpleFunctionDescriptorImpl@7b9b6893]
T: Unit

@kotlin.internal.InlineOnly public actual inline fun <R> synchronized(lock: kotlin.Any, block: () -> R): R defined in kotlin in file Synchronized.kt[SimpleFunctionDescriptorImpl@589c5d6e]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@58eb8ac9]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@58eb8ac9]
R: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@2d653892]
T: Boolean

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@2d653892]
T: Long

@kotlin.internal.InlineOnly @kotlin.internal.RequireKotlin public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io in file Closeable.kt[SimpleFunctionDescriptorImpl@21496de1]
R: ByteArray

@kotlin.internal.InlineOnly @kotlin.internal.RequireKotlin public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io in file Closeable.kt[SimpleFunctionDescriptorImpl@21496de1]
R: Unit

@kotlin.internal.InlineOnly @kotlin.internal.RequireKotlin public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io in file Closeable.kt[SimpleFunctionDescriptorImpl@21496de1]
R: Unit


@kotlin.internal.InlineOnly @kotlin.internal.RequireKotlin public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io in file Closeable.kt[SimpleFunctionDescriptorImpl@21496de1]
R: Unit

@kotlin.internal.RequireKotlin public inline fun <T> java.io.Reader.useLines(block: (kotlin.sequences.Sequence<kotlin.String>) -> T): T defined in kotlin.io in file ReadWrite.kt[SimpleFunctionDescriptorImpl@10768d32]
T: Unit

@kotlin.internal.InlineOnly @kotlin.internal.RequireKotlin public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io in file Closeable.kt[SimpleFunctionDescriptorImpl@21496de1]
R: ByteArray

public abstract operator fun invoke(p1: java.io.File): kotlin.Boolean defined in kotlin.Function1[FunctionInvokeDescriptor@6f048dc7]
R: Boolean

public abstract operator fun invoke(f: @kotlin.ParameterName java.io.File, e: @kotlin.ParameterName java.io.IOException): kotlin.Unit defined in kotlin.Function2[FunctionInvokeDescriptor@66144dfb]
R: Unit

public final operator fun get(index: kotlin.Int): java.io.File defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@2c614b88]
T: File

public abstract operator fun invoke(p1: java.io.File): kotlin.Unit defined in kotlin.Function1[FunctionInvokeDescriptor@4de42048]
R: Unit

public abstract operator fun invoke(p1: java.io.File): kotlin.Boolean defined in kotlin.Function1[FunctionInvokeDescriptor@6f048dc7]
R: Boolean

public abstract operator fun invoke(f: @kotlin.ParameterName java.io.File, e: @kotlin.ParameterName java.io.IOException): kotlin.Unit defined in kotlin.Function2[FunctionInvokeDescriptor@66144dfb]
R: Unit

public abstract operator fun invoke(p1: java.io.File): kotlin.Unit defined in kotlin.Function1[FunctionInvokeDescriptor@4de42048]
R: Unit

public final operator fun get(index: kotlin.Int): java.io.File defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@55de8749]
T: File

public abstract operator fun invoke(p1: java.io.File): kotlin.Unit defined in kotlin.Function1[FunctionInvokeDescriptor@4de42048]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: File

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: File

public abstract operator fun get(index: kotlin.Int): java.io.File defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1fcb563c]
E: File

public abstract operator fun get(index: kotlin.Int): java.io.File defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1fcb563c]
E: File

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@14e7cb55]
R: Int

public abstract operator fun get(index: kotlin.Int): java.io.File defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1fcb563c]
E: File

@kotlin.internal.InlineOnly @kotlin.internal.RequireKotlin public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io in file Closeable.kt[SimpleFunctionDescriptorImpl@21496de1]
R: Long

@kotlin.internal.InlineOnly @kotlin.internal.RequireKotlin public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io in file Closeable.kt[SimpleFunctionDescriptorImpl@21496de1]
R: Long



public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@609bcb96]
T: File




public inline fun <T, R> kotlin.sequences.Sequence<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.sequences in file _Sequences.kt[SimpleFunctionDescriptorImpl@2ec90fab]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@58eb8ac9]
R: File

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@cdf7789]
T: File

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections in file _Collections.kt[SimpleFunctionDescriptorImpl@40ed6520]
T: File

public abstract fun removeAt(index: kotlin.Int): java.io.File defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@6b4de9d3]
E: File

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@2d653892]
T: ByteArray



@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: StringBuilder

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@2d653892]
T: ByteArray

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: String

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections in file _Collections.kt[SimpleFunctionDescriptorImpl@5abc2930]
R: Int


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: DecimalFormat

public final operator fun get(index: kotlin.Int): java.lang.ThreadLocal<java.text.DecimalFormat> defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@43772848]
T: ThreadLocal<DecimalFormat>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: DecimalFormat

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: DecimalFormat

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: DecimalFormat


@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@58eb8ac9]
R: Int

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@58eb8ac9]
R: String

public abstract operator fun next(): kotlin.Array<out T> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7931f425]
T: Array<out T>

public abstract operator fun next(): kotlin.Pair<T, R> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@263193e1]
T: Pair<T, R>

public abstract fun removeAt(index: kotlin.Int): kotlin.Array<*> defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@1bc44d42]
E: Array<*>



private final val iteratorFactory: () -> kotlin.collections.Iterator<T> defined in kotlin.collections.IndexingIterable[PropertyDescriptorImpl@1b4cc35] +++|+++
R: Iterator<T>

public abstract operator fun next(): kotlin.collections.Iterable<T> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@54e518a9]
T: Iterable<T>

public abstract operator fun next(): kotlin.Pair<T, R> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6116d0d3]
T: Pair<T, R>


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: LinkedHashMap<K, V>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: HashMap<K, V>

public abstract operator fun next(): kotlin.Pair<K, V> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2cd49126]
T: Pair<K, V>

public abstract operator fun next(): kotlin.Pair<K, V> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@26f32a90]
T: Pair<K, V>

public abstract operator fun next(): kotlin.Pair<K, V> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5be667c1]
T: Pair<K, V>

public abstract operator fun next(): kotlin.collections.Map.Entry<K, V> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@f02918f]
T: Entry<K, V>


public abstract operator fun next(): kotlin.collections.Map.Entry<K, V> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5b331dd9]
T: Entry<K, V>


public abstract operator fun next(): kotlin.collections.Map.Entry<K, V> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@68b9f7b1]
T: Entry<K, V>


public abstract operator fun next(): kotlin.collections.Map.Entry<K, V> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@72e06b58]
T: Entry<K, V>


public abstract operator fun get(index: kotlin.Int): kotlin.Pair<K, V> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2ea385ff]
E: Pair<K, V>

public abstract operator fun next(): kotlin.Pair<K, V> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@30e12065]
T: Pair<K, V>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: M

public final operator fun get(index: kotlin.Int): kotlin.Pair<K, V> defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@7babaef4]
T: Pair<K, V>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: M

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: M

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: M

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: LinkedHashMap<(K..K?), (V..V?)>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: LinkedHashMap<(K..K?), (V..V?)>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: LinkedHashMap<(K..K?), (V..V?)>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: LinkedHashMap<(K..K?), (V..V?)>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: LinkedHashMap<(K..K?), (V..V?)>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: MutableMap<K, V>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: MutableMap<K, V>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: MutableMap<K, V>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: MutableMap<K, V>


@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@58eb8ac9]
R: Unit


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: MutableList<T>

@kotlin.SinceKotlin @kotlin.internal.InlineOnly @kotlin.Suppress public suspend inline fun <T> suspendCoroutineUninterceptedOrReturn(crossinline block: (kotlin.coroutines.Continuation<T>) -> kotlin.Any?): T defined in kotlin.coroutines.intrinsics in file Intrinsics.kt[SimpleFunctionDescriptorImpl@22a40d9a]
T: Unit

@kotlin.SinceKotlin @kotlin.internal.InlineOnly @kotlin.Suppress public suspend inline fun <T> suspendCoroutineUninterceptedOrReturn(crossinline block: (kotlin.coroutines.Continuation<T>) -> kotlin.Any?): T defined in kotlin.coroutines.intrinsics in file Intrinsics.kt[SimpleFunctionDescriptorImpl@22a40d9a]
T: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> kotlin.Result<T>.getOrThrow(): T defined in kotlin in file Result.kt[SimpleFunctionDescriptorImpl@7b9b6893]
T: Unit




public abstract operator fun next(): kotlin.Pair<T, R> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@11d6bf99]
T: Pair<T, R>

private final val predicate: (T) -> kotlin.Boolean defined in kotlin.sequences.FilteringSequence[PropertyDescriptorImpl@1967606e] +++|+++
R: Boolean

private final val iterator: (R) -> kotlin.collections.Iterator<E> defined in kotlin.sequences.FlatteningSequence[PropertyDescriptorImpl@1631c6a3] +++|+++
R: Iterator<E>

private final val predicate: (T) -> kotlin.Boolean defined in kotlin.sequences.TakeWhileSequence[PropertyDescriptorImpl@24bbf5e3] +++|+++
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Sequence<T>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Sequence<T>

private final val predicate: (T) -> kotlin.Boolean defined in kotlin.sequences.DropWhileSequence[PropertyDescriptorImpl@585f8c2c] +++|+++
R: Boolean

public abstract operator fun next(): (T) -> kotlin.Comparable<*>? defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@41672474]
T: Function1<T, Comparable<*>?>




public abstract fun <R> fold(initial: R, operation: (R, kotlin.coroutines.CoroutineContext.Element) -> R): R defined in kotlin.coroutines.CoroutineContext[SimpleFunctionDescriptorImpl@5bd43e39]
R: CoroutineContext

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Nothing

public open fun <R> fold(initial: R, operation: (R, kotlin.coroutines.CoroutineContext.Element) -> R): R defined in kotlin.coroutines.CombinedContext[SimpleFunctionDescriptorImpl@4eb71d3c]
R: String

public open fun <R> fold(initial: R, operation: (R, kotlin.coroutines.CoroutineContext.Element) -> R): R defined in kotlin.coroutines.CombinedContext[SimpleFunctionDescriptorImpl@4eb71d3c]
R: Unit


public inline fun <T, R> kotlin.Array<out T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections in file _Arrays.kt[SimpleFunctionDescriptorImpl@105cb076]
R: CoroutineContext



@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: String

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: StringBuilder

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@7a28d464]
T: StringBuilder





public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections in file _Collections.kt[SimpleFunctionDescriptorImpl@3fade63b]
T: String

public final val first: kotlin.Int defined in kotlin.Pair[PropertyDescriptorImpl@3fc7b4a5]
A: Int

public final val first: kotlin.Int defined in kotlin.Pair[PropertyDescriptorImpl@3fc7b4a5]
A: Int

public final operator fun component1(): kotlin.Int defined in kotlin.Pair[SimpleFunctionDescriptorImpl@c4a89f8]
A: Int

public final operator fun component2(): kotlin.Int defined in kotlin.Pair[SimpleFunctionDescriptorImpl@278f07f6]
B: Int

public final val first: kotlin.Int defined in kotlin.Pair[PropertyDescriptorImpl@3fc7b4a5]
A: Int

public final val second: kotlin.String defined in kotlin.Pair[PropertyDescriptorImpl@1b7517d5]
B: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Pair<Int, Int>

public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@3950ba0a]
T: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@35642c0d]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@35642c0d]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@35642c0d]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@35642c0d]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@35642c0d]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@35642c0d]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@35642c0d]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@35642c0d]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@35642c0d]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@35642c0d]
E: String

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@2d653892]
T: TimeUnit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@2d653892]
T: TimeUnit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@2d653892]
T: TimeUnit

public final inline fun <T> toComponents(action: (hours: kotlin.Int, minutes: kotlin.Int, seconds: kotlin.Int, nanoseconds: kotlin.Int) -> T): T defined in kotlin.time.Duration[SimpleFunctionDescriptorImpl@4e22aa89]
T: Unit





@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin in file Standard.kt[SimpleFunctionDescriptorImpl@5c309de1]
R: Unit








public abstract fun <R> fold(initial: R, operation: (R, kotlin.coroutines.experimental.CoroutineContext.Element) -> R): R defined in kotlin.coroutines.experimental.CoroutineContext[SimpleFunctionDescriptorImpl@59ba290d]
R: CoroutineContext

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5011b638]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5011b638]
R: Nothing

public open fun <R> fold(initial: R, operation: (R, kotlin.coroutines.experimental.CoroutineContext.Element) -> R): R defined in kotlin.coroutines.experimental.CombinedContext[SimpleFunctionDescriptorImpl@6d02db63]
R: String


@kotlin.SinceKotlin @kotlin.internal.InlineOnly @kotlin.Suppress public suspend inline fun <T> suspendCoroutineOrReturn(crossinline block: (kotlin.coroutines.experimental.Continuation<T>) -> kotlin.Any?): T defined in kotlin.coroutines.experimental.intrinsics in file Intrinsics.kt[SimpleFunctionDescriptorImpl@1adeed10]
T: Unit

@kotlin.SinceKotlin @kotlin.internal.InlineOnly @kotlin.Suppress public suspend inline fun <T> suspendCoroutineOrReturn(crossinline block: (kotlin.coroutines.experimental.Continuation<T>) -> kotlin.Any?): T defined in kotlin.coroutines.experimental.intrinsics in file Intrinsics.kt[SimpleFunctionDescriptorImpl@1adeed10]
T: Unit

public abstract operator fun next(): T defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@50982200]
T: T

public abstract operator fun next(): T defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@66085d0b]
T: T


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3cb57465]
R: Boolean

public abstract val key: kotlin.String defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@5c14546c]
K: String

public abstract val value: org.jetbrains.kotlin.utils.ReportLevel defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@75a289a5]
V: ReportLevel

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@226e4e95]
T: Array<String>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1e79c221]
T: SmartSet<T>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1e79c221]
T: LinkedHashSet<T>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1e79c221]
T: Array<T?>














public abstract operator fun next(): kotlin.collections.Iterable<T> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@299ae21a]
T: Iterable<T>

public abstract operator fun next(): kotlin.collections.IndexedValue<K> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7b11cf55]
T: IndexedValue<K>




@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1e79c221]
T: ArrayList<T>



@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3e412236]
R: ComponentResolveContext

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@796ce41d]
T: ComponentResolveContext

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3e412236]
R: ComponentResolveContext

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@796ce41d]
T: ComponentResolveContext

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@796ce41d]
T: ArrayList<Closeable>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@796ce41d]
T: ArrayList<Closeable>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3e412236]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3e412236]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3e412236]
R: Boolean


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@646e1213]
T: ArrayList<T>


public abstract operator fun next(): org.jetbrains.kotlin.container.ComponentDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7613d845]
T: ComponentDescriptor

public abstract operator fun next(): java.lang.reflect.Type defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7b90e809]
T: Type

public abstract operator fun next(): org.jetbrains.kotlin.container.PlatformExtensionsClashResolver<*> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@182f2c9a]
T: PlatformExtensionsClashResolver<*>

public abstract operator fun next(): java.lang.reflect.Type defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7df8056b]
T: Type

public abstract fun next(): java.io.Closeable defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@4c338097]
T: Closeable

public abstract fun next(): java.io.Closeable defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@8fbe947]
T: Closeable

public abstract operator fun next(): org.jetbrains.kotlin.container.ValueDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4d3e3fa6]
T: ValueDescriptor

public inline fun <T> runWithUnwrappingInvocationException(block: () -> T): T defined in org.jetbrains.kotlin.container in file reflectHelpers.kt[SimpleFunctionDescriptorImpl@4eec8c85]
T: Any

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49a57ba4]
T: ComponentDescriptor

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@22bcc005]
T: ComponentDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@20941dc6]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.container.ComponentDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5c937d9e]
T: ComponentDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.container.ComponentDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@68766502]
T: ComponentDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.container.ComponentDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@73540844]
T: ComponentDescriptor

public abstract operator fun next(): java.lang.reflect.Type defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3c99a2d8]
T: Type

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3e412236]
R: DefaultInstanceComponentDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.container.ComponentDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@38d60763]
T: ComponentDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.container.ComponentDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@473af2e2]
T: ComponentDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3f424935]
R: SimpleTypeMarker

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3f424935]
R: SimpleTypeMarker



public abstract operator fun next(): org.jetbrains.kotlin.types.model.KotlinTypeMarker defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@9106683]
T: KotlinTypeMarker


@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3f424935]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3f424935]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@579239e5]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@579239e5]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@579239e5]
R: Nothing

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2099c41b]
T: SimpleTypeMarker

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2099c41b]
T: SimpleTypeMarker

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@579239e5]
R: KotlinTypeMarker

internal final inline fun <T> runWithArgumentsSettings(subArgument: org.jetbrains.kotlin.types.model.KotlinTypeMarker, f: org.jetbrains.kotlin.types.AbstractTypeCheckerContext.() -> T): T defined in org.jetbrains.kotlin.types.AbstractTypeCheckerContext[SimpleFunctionDescriptorImpl@1d74b4f4]
T: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@579239e5]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3f424935]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3f424935]
R: TypeConstructorMarker

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3f424935]
R: KotlinTypeMarker

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3f424935]
R: SimpleTypeMarker

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3f424935]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3f424935]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3f424935]
R: CaptureStatus



@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3f424935]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3f424935]
R: TypeConstructorMarker

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3f424935]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: List<KotlinType>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@388d33ee]
T: List<KotlinType>

private final val fqNameFilter: (org.jetbrains.kotlin.name.FqName) -> kotlin.Boolean defined in org.jetbrains.kotlin.descriptors.annotations.FilteredAnnotations[PropertyDescriptorImpl@2b978f91] +++|+++
R: Boolean

private final val fqNameFilter: (org.jetbrains.kotlin.name.FqName) -> kotlin.Boolean defined in org.jetbrains.kotlin.descriptors.annotations.FilteredAnnotations[PropertyDescriptorImpl@2b978f91] +++|+++
R: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@13d6bed0]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@4ae9bb4c]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@4e9cb519]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@cd498ab]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@68b0fc0f]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@5fed40e1]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@116574ce]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@3fd611a8]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@2092852d]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@7f0822f6]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@6df83373]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@56368582]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@4d519a10]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@7bf3b434]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@622a6409]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@23e5ccd8]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@6bd89bf7]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@623625f2]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@34017564]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): (org.jetbrains.kotlin.types.KotlinType) -> org.jetbrains.kotlin.types.KotlinType defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@403caaa]
T: Function1<KotlinType, KotlinType>

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@d468a57]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): org.jetbrains.kotlin.renderer.OverrideRenderingPolicy defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@4671716d]
T: OverrideRenderingPolicy

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): org.jetbrains.kotlin.renderer.RenderingFormat defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@70d60ad]
T: RenderingFormat

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): org.jetbrains.kotlin.renderer.ParameterNameRenderingPolicy defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@1c8c981c]
T: ParameterNameRenderingPolicy

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@3f6adac1]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@1f8375db]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): org.jetbrains.kotlin.renderer.PropertyAccessorRenderingPolicy defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@1832d6e1]
T: PropertyAccessorRenderingPolicy

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@5e447afe]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.collections.Set<org.jetbrains.kotlin.name.FqName> defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@3f82251]
T: Set<FqName>

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.collections.Set<org.jetbrains.kotlin.name.FqName> defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@1f7ad5ed]
T: Set<FqName>

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): org.jetbrains.kotlin.renderer.AnnotationArgumentsRenderingPolicy defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@51eb8140]
T: AnnotationArgumentsRenderingPolicy

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@25d5290]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@114c5016]
T: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2dcde283]
T: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: ClassifierDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@388d33ee]
T: Collection<DeclarationDescriptor>

private final val computation: () -> org.jetbrains.kotlin.types.KotlinType defined in org.jetbrains.kotlin.types.LazyWrappedType[PropertyDescriptorImpl@595ce068] +++|+++
R: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: ResultNullability

public abstract operator fun invoke(): kotlin.collections.List<org.jetbrains.kotlin.types.UnwrappedType> defined in kotlin.Function0[FunctionInvokeDescriptor@169c60ee]
R: List<UnwrappedType>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: Function0<List<UnwrappedType>>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: UnwrappedType

public final val type: org.jetbrains.kotlin.builtins.KotlinBuiltIns.() -> org.jetbrains.kotlin.types.KotlinType defined in org.jetbrains.kotlin.util.ReturnsCheck[PropertyDescriptorImpl@2468e310] +++|+++
R: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: Boolean


@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@388d33ee]
T: MemberScope

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: ClassDescriptor

private final val scopeFactory: (org.jetbrains.kotlin.types.checker.KotlinTypeRefiner) -> T defined in org.jetbrains.kotlin.descriptors.ScopesHolderForClass[PropertyDescriptorImpl@5029bb9a] +++|+++
R: T

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@388d33ee]
T: SimpleType

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@388d33ee]
T: CompositePackageFragmentProvider

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d8a4c3]
T: TypeAliasConstructorDescriptorImpl

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@388d33ee]
T: List<VariableDescriptor>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@388d33ee]
T: DescriptorRendererImpl

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@388d33ee]
T: DescriptorRenderer

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): org.jetbrains.kotlin.renderer.ClassifierNamePolicy defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@3215b00a]
T: ClassifierNamePolicy

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.collections.Set<org.jetbrains.kotlin.renderer.DescriptorRendererModifier> defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@2494a271]
T: Set<DescriptorRendererModifier>

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@6f5aeb3e]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): org.jetbrains.kotlin.renderer.DescriptorRenderer.ValueParametersHandler defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@37399c42]
T: ValueParametersHandler

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@26e154ff]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@6067dc7]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@53d2cec1]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@7951dca2]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@1b051c0a]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@70b1dc9a]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@43c0bc8b]
T: Boolean

public abstract operator fun getValue(thisRef: org.jetbrains.kotlin.renderer.DescriptorRendererOptionsImpl, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@230d14f6]
T: Boolean

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@388d33ee]
T: MutableList<SimpleType>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@388d33ee]
T: KotlinType

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@388d33ee]
T: BuiltInsLoader

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: List<TypeParameterDescriptor>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2dcde283]
T: MutableClassDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: List<TypeParameterDescriptor>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2dcde283]
T: MutableClassDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: Boolean

public abstract operator fun next(): org.jetbrains.kotlin.builtins.UnsignedType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@281f2e3]
T: UnsignedType

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.KotlinTarget defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@62c40f4f]
T: KotlinTarget

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@70aa911f]
T: String



public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@227b6483]
T: TypeProjection

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2b95e0af]
T: TypeProjection

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.types.TypeProjection): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@3a22633d]
E: TypeProjection

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2dcde283]
T: MutableList<TypeProjection>

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.name.Name defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@61fc6a50]
E: Name

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@227b6483]
T: BuiltInsPackageFragment

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@511aa7d9]
V: ClassifierDescriptor

public final val value: org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.collections.IndexedValue[DeserializedPropertyDescriptor@12ae0c3f]
T: TypeParameterDescriptor

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2b95e0af]
T: TypeParameterDescriptor

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1b98b66f]
R: EffectiveVisibility

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@227b6483]
T: EffectiveVisibility

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@35dfe5df]
R: EffectiveVisibility

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DescriptorWithRelation defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@275b1ed0]
T: DescriptorWithRelation

private final val scopeFactory: (org.jetbrains.kotlin.types.checker.KotlinTypeRefiner) -> T defined in org.jetbrains.kotlin.descriptors.ScopesHolderForClass[PropertyDescriptorImpl@5029bb9a] +++|+++
R: T

private final val fqNameFilter: (org.jetbrains.kotlin.name.FqName) -> kotlin.Boolean defined in org.jetbrains.kotlin.descriptors.annotations.FilteredAnnotations[PropertyDescriptorImpl@2b978f91] +++|+++
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: SimpleType

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36d31f31]
R: Boolean

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.PackageFragmentProvider defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6522bca7]
T: PackageFragmentProvider

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.PackageFragmentProvider defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6522bca7]
T: PackageFragmentProvider

public abstract operator fun next(): org.jetbrains.kotlin.name.FqName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@37c5b022]
T: FqName




public open var typeNormalizer: (org.jetbrains.kotlin.types.KotlinType) -> org.jetbrains.kotlin.types.KotlinType defined in org.jetbrains.kotlin.renderer.DescriptorRendererImpl[PropertyDescriptorImpl@725840cc] +++|+++
R: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@35dfe5df]
R: Unit

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.types.TypeProjection> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6a5477b]
T: IndexedValue<TypeProjection>

public final operator fun component2(): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@6f5055bc]
T: TypeProjection

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@585be962]
T: AnnotationDescriptor

val annotationFilter: ((org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor) -> kotlin.Boolean)? defined in org.jetbrains.kotlin.renderer.DescriptorRendererImpl.renderAnnotations[LocalVariableDescriptor@400d382e] +++|+++
R: Boolean

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@572dbc1f]
K: Name

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3f48f537]
V: ConstantValue<*>

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@552dcc32]
T: TypeParameterDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5fac7d19]
T: TypeParameterDescriptor

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.descriptors.ValueParameterDescriptor> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@68b77f84]
T: IndexedValue<ValueParameterDescriptor>

public final operator fun component2(): org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@44e33b8b]
T: ValueParameterDescriptor

public abstract operator fun invoke(p1: org.jetbrains.kotlin.descriptors.ValueParameterDescriptor): kotlin.String defined in kotlin.Function1[FunctionInvokeDescriptor@7fcdf931]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.name.Name defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2516191]
T: Name



@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@35dfe5df]
R: Sequence<CallableMemberDescriptor>

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@35dfe5df]
R: Sequence<D>

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.ClassDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@124ef99b]
T: ClassDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@25b9aaf4]
T: KotlinType

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@25455ba6]
T: DeclarationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.CallableMemberDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3fd9090a]
T: CallableMemberDescriptor

public final val first: org.jetbrains.kotlin.types.TypeProjection defined in kotlin.Pair[DeserializedPropertyDescriptor@1e9540ee]
A: TypeProjection

public final val second: org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.Pair[DeserializedPropertyDescriptor@70a94225]
B: TypeParameterDescriptor

private final val computeType: (org.jetbrains.kotlin.descriptors.ModuleDescriptor) -> org.jetbrains.kotlin.types.KotlinType defined in org.jetbrains.kotlin.resolve.constants.ArrayValue[PropertyDescriptorImpl@55a72f76] +++|+++
R: KotlinType

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d8a4c3]
T: KotlinType

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4094c8e1]
T: TypeProjection

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@227b6483]
T: H

@org.jetbrains.annotations.NotNull public open fun <H : (kotlin.Any..kotlin.Any?)> selectMostSpecificMember(@org.jetbrains.annotations.NotNull overridables: (kotlin.collections.MutableCollection<(H..H?)>..kotlin.collections.Collection<(H..H?)>), @org.jetbrains.annotations.NotNull descriptorByHandle: ((H..H?)) -> (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)): H defined in org.jetbrains.kotlin.resolve.OverridingUtil[JavaMethodDescriptor@5c38a446]
H: H



public abstract operator fun next(): org.jetbrains.kotlin.resolve.scopes.MemberScope defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5d1b2459]
T: MemberScope

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4094c8e1]
T: MemberScope

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.name.Name, kotlin.collections.List<org.jetbrains.kotlin.descriptors.CallableMemberDescriptor>> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@180268be]
T: Entry<Name, List<CallableMemberDescriptor>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@572dbc1f]
K: Name

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3f48f537]
V: List<CallableMemberDescriptor>

public abstract operator fun next(): kotlin.collections.Map.Entry<kotlin.Boolean, kotlin.collections.List<org.jetbrains.kotlin.descriptors.CallableMemberDescriptor>> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6571d52f]
T: Entry<Boolean, List<CallableMemberDescriptor>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@572dbc1f]
K: Boolean

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3f48f537]
V: List<CallableMemberDescriptor>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: Set<Name>


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: DescriptorWithDeprecation<ClassifierDescriptor>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@511aa7d9]
V: DeclarationDescriptor

public abstract operator fun next(): D defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@42798895]
T: D

public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.descriptors.DeclarationDescriptor> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@50f4e969]
A: List<DeclarationDescriptor>

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.descriptors.DeclarationDescriptor> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@52532213]
B: List<DeclarationDescriptor>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: List<KotlinType>

public final val upper: org.jetbrains.kotlin.types.KotlinType defined in org.jetbrains.kotlin.types.typesApproximation.ApproximationBounds[PropertyDescriptorImpl@664d17fb]
T: KotlinType

public final val lower: org.jetbrains.kotlin.types.KotlinType defined in org.jetbrains.kotlin.types.typesApproximation.ApproximationBounds[PropertyDescriptorImpl@139b56ab]
T: KotlinType

public final val lower: org.jetbrains.kotlin.types.KotlinType defined in org.jetbrains.kotlin.types.typesApproximation.ApproximationBounds[PropertyDescriptorImpl@139b56ab]
T: KotlinType

public final val lower: org.jetbrains.kotlin.types.KotlinType defined in org.jetbrains.kotlin.types.typesApproximation.ApproximationBounds[PropertyDescriptorImpl@139b56ab]
T: KotlinType

public final val upper: org.jetbrains.kotlin.types.KotlinType defined in org.jetbrains.kotlin.types.typesApproximation.ApproximationBounds[PropertyDescriptorImpl@664d17fb]
T: KotlinType

public final val upper: org.jetbrains.kotlin.types.KotlinType defined in org.jetbrains.kotlin.types.typesApproximation.ApproximationBounds[PropertyDescriptorImpl@664d17fb]
T: KotlinType

public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.types.TypeProjection, (org.jetbrains.kotlin.descriptors.TypeParameterDescriptor..org.jetbrains.kotlin.descriptors.TypeParameterDescriptor?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4b82728e]
T: Pair<TypeProjection, (org.jetbrains.kotlin.descriptors.TypeParameterDescriptor..org.jetbrains.kotlin.descriptors.TypeParameterDescriptor?)>

public final operator fun component1(): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@13f28c5e]
A: TypeProjection

public final operator fun component1(): org.jetbrains.kotlin.types.typesApproximation.TypeArgument defined in org.jetbrains.kotlin.types.typesApproximation.ApproximationBounds[SimpleFunctionDescriptorImpl@ebf1d03]
T: TypeArgument

public final operator fun component2(): org.jetbrains.kotlin.types.typesApproximation.TypeArgument defined in org.jetbrains.kotlin.types.typesApproximation.ApproximationBounds[SimpleFunctionDescriptorImpl@10f6a825]
T: TypeArgument

public final operator fun component1(): org.jetbrains.kotlin.types.KotlinType defined in org.jetbrains.kotlin.types.typesApproximation.ApproximationBounds[SimpleFunctionDescriptorImpl@3d0a6acc]
T: KotlinType

public final operator fun component2(): org.jetbrains.kotlin.types.KotlinType defined in org.jetbrains.kotlin.types.typesApproximation.ApproximationBounds[SimpleFunctionDescriptorImpl@7a12384c]
T: KotlinType

public final operator fun component1(): org.jetbrains.kotlin.types.KotlinType defined in org.jetbrains.kotlin.types.typesApproximation.ApproximationBounds[SimpleFunctionDescriptorImpl@3d0a6acc]
T: KotlinType

public final operator fun component2(): org.jetbrains.kotlin.types.KotlinType defined in org.jetbrains.kotlin.types.typesApproximation.ApproximationBounds[SimpleFunctionDescriptorImpl@7a12384c]
T: KotlinType



public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@585be962]
T: AnnotationDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: SimpleType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: SimpleType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: SimpleType

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36d31f31]
R: Variance

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@585be962]
T: AnnotationDescriptor

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@66915313]
E: TypeProjection

public final operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@41046130]
T: TypeParameterDescriptor

public final operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@3f259597]
T: TypeProjection



public abstract operator fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5ee8d002]
T: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@35dfe5df]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: TypeProjection

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@66915313]
E: TypeProjection

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: Boolean

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4094c8e1]
T: UnwrappedType

public abstract operator fun next(): org.jetbrains.kotlin.types.SimpleType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1a788168]
T: SimpleType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: SimpleType

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1b98b66f]
R: ResultNullability

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@38c5df92]
T: SimpleType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: Nothing

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@38c5df92]
T: SimpleType


@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@35dfe5df]
R: Boolean


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2dcde283]
T: UnwrappedType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@505f23d]
R: UnwrappedType

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2dcde283]
T: UnwrappedType

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@66915313]
E: TypeProjection

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2688ed8e]
E: TypeProjection


@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36d31f31]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36d31f31]
R: Boolean


public final val upper: org.jetbrains.kotlin.types.KotlinType defined in org.jetbrains.kotlin.types.typesApproximation.ApproximationBounds[PropertyDescriptorImpl@664d17fb]
T: KotlinType

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1cc2714]
T: KotlinType

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1cc2714]
T: TypeProjection

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@38c5df92]
T: Variance

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@35dfe5df]
R: SimpleType

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@35dfe5df]
R: SimpleType

public abstract operator fun next(): org.jetbrains.kotlin.util.Check defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@769e1948]
T: Check

public abstract operator fun next(): org.jetbrains.kotlin.util.Checks defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@e66db00]
T: Checks




@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@457a2f69]
R: List<Type>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@457a2f69]
R: Int

public final operator fun component1(): kotlin.collections.List<kotlin.String> defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@3cae82ae]
A: List<String>

public final operator fun component2(): kotlin.collections.List<kotlin.String> defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@397635ce]
B: List<String>

public final val third: kotlin.Boolean defined in kotlin.Triple[DeserializedPropertyDescriptor@23b1a6b2]
C: Boolean

public final val first: kotlin.collections.List<kotlin.String> defined in kotlin.Triple[DeserializedPropertyDescriptor@15c3e40b]
A: List<String>

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.metadata.ProtoBuf.Type defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@590a23a]
E: Type



@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@549f0de3]
T: Int

public abstract operator fun next(): org.jetbrains.kotlin.metadata.serialization.TableElementWrapper<Element> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1665bd10]
T: TableElementWrapper<Element>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@57414011]
T: TableBuilder


public fun <T> kotlin.sequences.Sequence<T>.last(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@283d409c]
T: ClassId

public final operator fun component1(): org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@179844b1]
A: PackageFragment

public final operator fun component2(): org.jetbrains.kotlin.metadata.deserialization.NameResolverImpl defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@62ab248]
B: NameResolverImpl

public final operator fun component3(): org.jetbrains.kotlin.metadata.builtins.BuiltInsBinaryVersion defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@4bd87a62]
C: BuiltInsBinaryVersion

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@351af341]
R: ClassData

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@351af341]
R: Function0<List<Name>>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@369d6570]
T: DeserializedPackageFragment

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.metadata.ProtoBuf.TypeParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6290315a]
T: IndexedValue<TypeParameter>

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.TypeParameter defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@3b01178f]
T: TypeParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@351af341]
R: EnumEntrySyntheticClassDescriptor


private final inline fun <T, R> T.letIf(predicate: kotlin.Boolean, f: (T) -> R, g: (T) -> R): R defined in org.jetbrains.kotlin.serialization.deserialization.AnnotationDeserializer[SimpleFunctionDescriptorImpl@2d040516]
R: ConstantValue<Byte>

private final inline fun <T, R> T.letIf(predicate: kotlin.Boolean, f: (T) -> R, g: (T) -> R): R defined in org.jetbrains.kotlin.serialization.deserialization.AnnotationDeserializer[SimpleFunctionDescriptorImpl@2d040516]
R: ConstantValue<Short>

private final inline fun <T, R> T.letIf(predicate: kotlin.Boolean, f: (T) -> R, g: (T) -> R): R defined in org.jetbrains.kotlin.serialization.deserialization.AnnotationDeserializer[SimpleFunctionDescriptorImpl@2d040516]
R: ConstantValue<Int>

private final inline fun <T, R> T.letIf(predicate: kotlin.Boolean, f: (T) -> R, g: (T) -> R): R defined in org.jetbrains.kotlin.serialization.deserialization.AnnotationDeserializer[SimpleFunctionDescriptorImpl@2d040516]
R: ConstantValue<Long>

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.resolve.constants.ConstantValue<*> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@73b4853a]
E: ConstantValue<*>

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.deserialization.ClassDescriptorFactory defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7444605]
T: ClassDescriptorFactory

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@351af341]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.PackageFragmentDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7ef5e223]
T: PackageFragmentDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@351af341]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@351af341]
R: KotlinType

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2d8f3e8a]
T: ValueParameterDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@351af341]
R: KotlinType

public final val first: org.jetbrains.kotlin.descriptors.CallableDescriptor.UserDataKey<*> defined in kotlin.Pair[DeserializedPropertyDescriptor@4657cddc]
A: UserDataKey<*>

public final val second: org.jetbrains.kotlin.serialization.deserialization.ContractProvider defined in kotlin.Pair[DeserializedPropertyDescriptor@22c97256]
B: ContractProvider

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@351af341]
R: List<AnnotationDescriptor>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@351af341]
R: List<AnnotationDescriptor>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@351af341]
R: List<AnnotationDescriptor>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@351af341]
R: KotlinType

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@709dba47]
T: String

public final operator fun component1(): org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@179844b1]
A: PackageFragment

public final operator fun component2(): org.jetbrains.kotlin.metadata.deserialization.NameResolverImpl defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@62ab248]
B: NameResolverImpl

public final operator fun component3(): org.jetbrains.kotlin.metadata.builtins.BuiltInsBinaryVersion defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@4bd87a62]
C: BuiltInsBinaryVersion

private final val classSource: (org.jetbrains.kotlin.name.ClassId) -> org.jetbrains.kotlin.descriptors.SourceElement defined in org.jetbrains.kotlin.serialization.deserialization.ProtoBasedClassDataFinder[PropertyDescriptorImpl@6575c6b3] +++|+++
R: SourceElement

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2d8f3e8a]
T: TypeProjection

public abstract operator fun next(): org.jetbrains.kotlin.serialization.deserialization.builtins.BuiltInsPackageFragmentImpl defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6cc8800f]
T: BuiltInsPackageFragmentImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@369d6570]
T: ClassConstructorDescriptorImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@351af341]
R: ClassConstructorDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@33bae088]
T: KotlinType

public abstract operator fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@33bae088]
T: KotlinType

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@369d6570]
T: LinkedHashSet<Name>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@351af341]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@53d65eb1]
T: DeclarationDescriptor

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@755b7a6c]
T: SimpleFunctionDescriptorImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@755b7a6c]
T: DeserializedSimpleFunctionDescriptor

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@755b7a6c]
T: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@755b7a6c]
T: DeserializedClassConstructorDescriptor

public abstract val value: kotlin.collections.Collection<org.jetbrains.kotlin.protobuf.AbstractMessageLite> defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@6eeb183a]
V: Collection<AbstractMessageLite>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@351af341]
R: List<M>


public abstract operator fun next(): org.jetbrains.kotlin.name.Name defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@75750777]
T: Name


public abstract operator fun next(): org.jetbrains.kotlin.name.Name defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@713261da]
T: Name


public abstract operator fun next(): org.jetbrains.kotlin.name.Name defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@e14187a]
T: Name



@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1aa371e5]
R: Set<(kotlin.Int..kotlin.Int?)>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@cfbf465]
T: ArrayList<Record>

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@577e2eff]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@577e2eff]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@577e2eff]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@577e2eff]
E: String

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@475918af]
T: String

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5d43cf6]
T: String

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@717ce1a8]
T: String

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@cfbf465]
T: MutableMap<String, String>

public final val value: kotlin.String defined in kotlin.collections.IndexedValue[DeserializedPropertyDescriptor@629edcb3]
T: String

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.metadata.jvm.JvmProtoBuf.StringTableTypes.Record defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@38b4d0a3]
E: Record

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5ccec11d]
E: String

public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@59b394b4]
T: String

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@cfbf465]
T: ByteArrayOutputStream



public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4abeced9]
V: PackageParts

public abstract operator fun next(): kotlin.collections.IndexedValue<(kotlin.String..kotlin.String?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@fa27096]
T: IndexedValue<(kotlin.String..kotlin.String?)>

public abstract operator fun next(): kotlin.collections.IndexedValue<(kotlin.String..kotlin.String?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7d55e063]
T: IndexedValue<(kotlin.String..kotlin.String?)>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4abeced9]
V: PackageParts

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fb726fe]
R: String

public final operator fun component1(): kotlin.collections.List<kotlin.String> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5b815a46]
A: List<String>

public final operator fun component2(): kotlin.collections.List<kotlin.String> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@268a6eed]
B: List<String>

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<kotlin.String?, (kotlin.collections.List<kotlin.String>..kotlin.collections.List<kotlin.String>?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@694582d7]
T: MutableEntry<String?, (kotlin.collections.List<kotlin.String>..kotlin.collections.List<kotlin.String>?)>

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2f7a2af3]
T: String

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(kotlin.String..kotlin.String?), (kotlin.collections.List<kotlin.String>..kotlin.collections.List<kotlin.String>?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@701dd8dc]
T: MutableEntry<(kotlin.String..kotlin.String?), (kotlin.collections.List<kotlin.String>..kotlin.collections.List<kotlin.String>?)>

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<kotlin.String?, (kotlin.collections.List<kotlin.String>..kotlin.collections.List<kotlin.String>?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@5d2fc412]
T: MutableEntry<String?, (kotlin.collections.List<kotlin.String>..kotlin.collections.List<kotlin.String>?)>

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7ee2c5b9]
T: String

public abstract fun get(index: kotlin.Int): kotlin.Int defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@9def9f3]
E: Int

public abstract fun get(index: kotlin.Int): kotlin.Int defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@9def9f3]
E: Int

public abstract fun removeAt(index: kotlin.Int): kotlin.Int defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@6c9d4368]
E: Int

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4abeced9]
V: Int

public final val first: kotlin.Int defined in kotlin.Pair[DeserializedPropertyDescriptor@5ac8082d]
A: Int

public final val first: kotlin.Int defined in kotlin.Pair[DeserializedPropertyDescriptor@5ac8082d]
A: Int

public abstract operator fun next(): kotlin.Pair<kotlin.Int, kotlin.String> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2ac6ec8f]
T: Pair<Int, String>

public final operator fun component1(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@417a139d]
A: Int

public final operator fun component2(): kotlin.String defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@77791219]
B: String

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<kotlin.String, kotlin.String?> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@519e9970]
T: MutableEntry<String, String?>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1f826470]
K: String

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6a12db23]
T: String

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@cfbf465]
T: Int

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4abeced9]
V: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fb726fe]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7512d9e]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Map<Name, ConstantValue<*>>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Map<Name, ConstantValue<*>>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: LazyJavaTypeParameterResolver

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Pair<String, KotlinJvmBinaryClass>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5b0d21bf]
T: MutableSet<Name>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5b0d21bf]
T: MutableSet<Name>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Pair<(org.jetbrains.kotlin.name.Name..org.jetbrains.kotlin.name.Name?), ConstantValue<*>>

public abstract operator fun next(): org.jetbrains.kotlin.load.java.structure.JavaConstructor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3cec5889]
T: JavaConstructor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5b0d21bf]
T: HashSet<Name>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5b0d21bf]
T: MutableSet<Name>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5b0d21bf]
T: MutableSet<Name>

private final val computeContainingDeclaration: (org.jetbrains.kotlin.descriptors.ModuleDescriptor) -> org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in org.jetbrains.kotlin.builtins.jvm.JvmBuiltInClassDescriptorFactory[PropertyDescriptorImpl@5eef286d] +++|+++
R: DeclarationDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5b0d21bf]
T: ClassDescriptorImpl

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f6c002d]
T: ModuleDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f6c002d]
T: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: JavaSourceElement

private final val memberFilter: (org.jetbrains.kotlin.load.java.structure.JavaMember) -> kotlin.Boolean defined in org.jetbrains.kotlin.load.java.lazy.descriptors.ClassDeclaredMemberIndex[PropertyDescriptorImpl@7dfbba45] +++|+++
R: Boolean

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5316497b]
T: LazyJavaClassDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: LazyJavaClassDescriptor

public abstract operator fun next(): kotlin.collections.Map.Entry<kotlin.String, org.jetbrains.kotlin.load.kotlin.KotlinJvmBinaryClass> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7d7b1f81]
T: Entry<String, KotlinJvmBinaryClass>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@79743e9e]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4c08e7d2]
V: KotlinJvmBinaryClass

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5316497b]
T: LazyJavaClassDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.load.java.structure.JavaMethod defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4021566]
T: JavaMethod

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cb601a4]
T: PropertyDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: LazyJavaTypeParameterDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: String

public inline fun <T> signatures(block: org.jetbrains.kotlin.load.kotlin.SignatureBuildingComponents.() -> T): T defined in org.jetbrains.kotlin.load.kotlin in file methodSignatureBuilding.kt[SimpleFunctionDescriptorImpl@7990c9e3]
T: Set<String>

public inline fun <T> signatures(block: org.jetbrains.kotlin.load.kotlin.SignatureBuildingComponents.() -> T): T defined in org.jetbrains.kotlin.load.kotlin in file methodSignatureBuilding.kt[SimpleFunctionDescriptorImpl@7990c9e3]
T: Set<String>

public inline fun <T> signatures(block: org.jetbrains.kotlin.load.kotlin.SignatureBuildingComponents.() -> T): T defined in org.jetbrains.kotlin.load.kotlin in file methodSignatureBuilding.kt[SimpleFunctionDescriptorImpl@7990c9e3]
T: Set<String>

public inline fun <T> signatures(block: org.jetbrains.kotlin.load.kotlin.SignatureBuildingComponents.() -> T): T defined in org.jetbrains.kotlin.load.kotlin in file methodSignatureBuilding.kt[SimpleFunctionDescriptorImpl@7990c9e3]
T: Set<String>

public inline fun <T> signatures(block: org.jetbrains.kotlin.load.kotlin.SignatureBuildingComponents.() -> T): T defined in org.jetbrains.kotlin.load.kotlin in file methodSignatureBuilding.kt[SimpleFunctionDescriptorImpl@7990c9e3]
T: LinkedHashSet<String>

public abstract val key: org.jetbrains.kotlin.name.FqName defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@4ae945aa]
K: FqName

public abstract val value: org.jetbrains.kotlin.name.Name defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@77de1733]
V: Name

public final val second: org.jetbrains.kotlin.name.Name defined in kotlin.Pair[DeserializedPropertyDescriptor@1f14204f]
B: Name

public final val first: org.jetbrains.kotlin.name.Name defined in kotlin.Pair[DeserializedPropertyDescriptor@48184db0]
A: Name

public inline fun <T> signatures(block: org.jetbrains.kotlin.load.kotlin.SignatureBuildingComponents.() -> T): T defined in org.jetbrains.kotlin.load.kotlin in file methodSignatureBuilding.kt[SimpleFunctionDescriptorImpl@7990c9e3]
T: Map<NameAndSignature, TypeSafeBarrierDescription>

public abstract val key: org.jetbrains.kotlin.load.java.NameAndSignature defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@1c051ac4]
K: NameAndSignature

public inline fun <T> signatures(block: org.jetbrains.kotlin.load.kotlin.SignatureBuildingComponents.() -> T): T defined in org.jetbrains.kotlin.load.kotlin in file methodSignatureBuilding.kt[SimpleFunctionDescriptorImpl@7990c9e3]
T: Map<NameAndSignature, Name>

public abstract val key: org.jetbrains.kotlin.load.java.NameAndSignature defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@3b2e41d9]
K: NameAndSignature

public abstract val key: org.jetbrains.kotlin.load.java.NameAndSignature defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@676d1d95]
K: NameAndSignature

public abstract val value: org.jetbrains.kotlin.name.Name defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@8651ecb]
V: Name

public final val second: org.jetbrains.kotlin.name.Name defined in kotlin.Pair[DeserializedPropertyDescriptor@171b61da]
B: Name

public final val first: org.jetbrains.kotlin.name.Name defined in kotlin.Pair[DeserializedPropertyDescriptor@60cc850e]
A: Name

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: ClassId


public inline fun <T> signatures(block: org.jetbrains.kotlin.load.kotlin.SignatureBuildingComponents.() -> T): T defined in org.jetbrains.kotlin.load.kotlin in file methodSignatureBuilding.kt[SimpleFunctionDescriptorImpl@7990c9e3]
T: Map<String, PredefinedFunctionEnhancementInfo>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.builtins.jvm.JavaToKotlinClassMap.PlatformMutabilityMapping defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@62e36765]
T: PlatformMutabilityMapping

public abstract operator fun next(): org.jetbrains.kotlin.resolve.jvm.JvmPrimitiveType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1ad2322c]
T: JvmPrimitiveType

public abstract operator fun next(): org.jetbrains.kotlin.name.ClassId defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@574d3ce8]
T: ClassId

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@158cf794]
T: BuiltInsPackageFragment

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5b0d21bf]
T: SimpleFunctionDescriptorImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: BuiltInsPackageFragmentImpl

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5f9e1ee5]
T: [@kotlin.jvm.JvmWildcard] SimpleFunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5b0d21bf]
T: CopyBuilder<out (org.jetbrains.kotlin.descriptors.SimpleFunctionDescriptor..org.jetbrains.kotlin.descriptors.SimpleFunctionDescriptor?)>


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5b0d21bf]
T: CopyBuilder<out (org.jetbrains.kotlin.descriptors.SimpleFunctionDescriptor..org.jetbrains.kotlin.descriptors.SimpleFunctionDescriptor?)>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5b0d21bf]
T: CopyBuilder<out (org.jetbrains.kotlin.descriptors.FunctionDescriptor..org.jetbrains.kotlin.descriptors.FunctionDescriptor?)>

public inline fun <T> signatures(block: org.jetbrains.kotlin.load.kotlin.SignatureBuildingComponents.() -> T): T defined in org.jetbrains.kotlin.load.kotlin in file methodSignatureBuilding.kt[SimpleFunctionDescriptorImpl@7990c9e3]
T: LinkedHashSet<String>

public inline fun <T> signatures(block: org.jetbrains.kotlin.load.kotlin.SignatureBuildingComponents.() -> T): T defined in org.jetbrains.kotlin.load.kotlin in file methodSignatureBuilding.kt[SimpleFunctionDescriptorImpl@7990c9e3]
T: LinkedHashSet<String>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Nothing

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@79743e9e]
K: Name

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4c08e7d2]
V: ConstantValue<*>

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@603caa9]
R: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Nothing

public abstract operator fun next(): kotlin.Pair<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2c5ce635]
T: Pair<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: EnumValue

public final operator fun component1(): org.jetbrains.kotlin.load.java.descriptors.ValueParameterData defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@8f8f1eb]
A: ValueParameterData

public final operator fun component2(): org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4cfbeccd]
B: ValueParameterDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Nothing

private final val descriptorResolverByJavaClass: (org.jetbrains.kotlin.load.java.structure.JavaClass) -> org.jetbrains.kotlin.resolve.jvm.JavaDescriptorResolver defined in org.jetbrains.kotlin.load.java.lazy.ModuleClassResolverImpl[PropertyDescriptorImpl@4a8edf83] +++|+++
R: JavaDescriptorResolver

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: EnumMap<QualifierApplicabilityType, NullabilityQualifierWithMigrationStatus?>

public abstract operator fun next(): org.jetbrains.kotlin.load.java.lazy.NullabilityQualifierWithApplicability defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4ba36955]
T: NullabilityQualifierWithApplicability

public abstract operator fun next(): org.jetbrains.kotlin.load.java.AnnotationTypeQualifierResolver.QualifierApplicabilityType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@64a5d899]
T: QualifierApplicabilityType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5b0d21bf]
T: MutableSet<Name>

public abstract operator fun next(): org.jetbrains.kotlin.resolve.scopes.MemberScope defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@423950b8]
T: MemberScope

public abstract operator fun next(): org.jetbrains.kotlin.load.java.structure.JavaClassifierType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4ac0c150]
T: JavaClassifierType

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4321fc9a]
E: TypeProjection

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5b0d21bf]
T: CopyBuilder<out (org.jetbrains.kotlin.descriptors.SimpleFunctionDescriptor..org.jetbrains.kotlin.descriptors.SimpleFunctionDescriptor?)>



public abstract operator fun next(): org.jetbrains.kotlin.descriptors.SimpleFunctionDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3ce0b590]
T: SimpleFunctionDescriptor


public abstract operator fun next(): org.jetbrains.kotlin.descriptors.SimpleFunctionDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@28c0d59]
T: SimpleFunctionDescriptor



@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5b0d21bf]
T: CopyBuilder<out (org.jetbrains.kotlin.descriptors.SimpleFunctionDescriptor..org.jetbrains.kotlin.descriptors.SimpleFunctionDescriptor?)>

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.PropertyDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@42dce1a6]
T: PropertyDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5b0d21bf]
T: PropertyGetterDescriptorImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5b0d21bf]
T: PropertySetterDescriptorImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5b0d21bf]
T: JavaForKotlinOverridePropertyDescriptor

public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.load.java.structure.JavaMethod> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@71274117]
A: List<JavaMethod>

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.load.java.structure.JavaMethod> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@58267433]
B: List<JavaMethod>

public final operator fun component1(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2798faa0]
A: KotlinType

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.load.java.structure.JavaMethod> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@20442ebf]
T: IndexedValue<JavaMethod>

public final operator fun component2(): org.jetbrains.kotlin.load.java.structure.JavaMethod defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@2e3deb6a]
T: JavaMethod

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: KotlinType

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@158cf794]
T: ValueParameterDescriptor

public final operator fun component2(): org.jetbrains.kotlin.load.java.structure.JavaValueParameter defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@2b579af5]
T: JavaValueParameter

public final operator fun component1(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@24410cff]
A: KotlinType

public abstract operator fun next(): org.jetbrains.kotlin.name.Name defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@79f1874a]
T: Name


public abstract operator fun next(): org.jetbrains.kotlin.name.Name defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4ec1c78b]
T: Name


public abstract operator fun next(): org.jetbrains.kotlin.name.Name defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@f6f63b9]
T: Name


public abstract val value: kotlin.collections.List<@kotlin.jvm.JvmWildcard org.jetbrains.kotlin.descriptors.PropertyDescriptor> defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@158f9b2b]
V: List<[@kotlin.jvm.JvmWildcard] PropertyDescriptor>


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Boolean



public final val first: kotlin.String defined in kotlin.Pair[DeserializedPropertyDescriptor@3dd86612]
A: String

public final val second: kotlin.String defined in kotlin.Pair[DeserializedPropertyDescriptor@4e7a88ba]
B: String

public final operator fun component1(): org.jetbrains.kotlin.types.SimpleType defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4e70136f]
A: SimpleType

public final operator fun component2(): kotlin.Boolean defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1ef71e34]
B: Boolean

public final operator fun component1(): org.jetbrains.kotlin.types.SimpleType defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4e70136f]
A: SimpleType

public final operator fun component2(): kotlin.Boolean defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1ef71e34]
B: Boolean

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4321fc9a]
E: TypeProjection

public final val first: org.jetbrains.kotlin.types.SimpleType defined in kotlin.Pair[DeserializedPropertyDescriptor@316a06f9]
A: SimpleType

@kotlin.SinceKotlin public fun <K, V> kotlin.collections.Map<K, V>.getValue(key: K): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2339f0af]
V: TypeSafeBarrierDescription

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5b0d21bf]
T: SignatureEnhancementBuilder

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5b0d21bf]
T: FunctionEnhancementBuilder

public final val first: kotlin.String defined in kotlin.Pair[DeserializedPropertyDescriptor@1614a12a]
A: String

public final val first: kotlin.String defined in kotlin.Pair[DeserializedPropertyDescriptor@7c3ac8f0]
A: String

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@62d7dbea]
R: Pair<String, PredefinedFunctionEnhancementInfo>

public final val value: org.jetbrains.kotlin.load.java.typeEnhancement.JavaTypeQualifiers defined in kotlin.collections.IndexedValue[DeserializedPropertyDescriptor@19a50926]
T: JavaTypeQualifiers

public final val value: org.jetbrains.kotlin.load.java.typeEnhancement.JavaTypeQualifiers defined in kotlin.collections.IndexedValue[DeserializedPropertyDescriptor@595aad7d]
T: JavaTypeQualifiers

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: LazyJavaResolverContext

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c330271]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Unit

val qualifiers: (kotlin.Int) -> org.jetbrains.kotlin.load.java.typeEnhancement.JavaTypeQualifiers defined in org.jetbrains.kotlin.load.java.typeEnhancement.SignatureEnhancement.SignatureParts.enhance[LocalVariableDescriptor@3b041e6c] +++|+++
R: JavaTypeQualifiers

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Function1<Int, JavaTypeQualifiers>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: PartEnhancementResult

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Pair<SimpleType, SimpleType>

public final operator fun component1(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7aa1a43]
A: KotlinType

public final operator fun component2(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@46e724b9]
B: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: NullabilityQualifierWithMigrationStatus

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.load.java.typeEnhancement.TypeAndDefaultQualifiers defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5857ada4]
E: TypeAndDefaultQualifiers

@kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.getOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> T): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@42da5c1]
T: JavaTypeQualifiers

public abstract operator fun next(): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@684e621a]
T: TypeProjection




@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Set<T>


public final operator fun component1(): org.jetbrains.kotlin.descriptors.ClassifierDescriptor defined in org.jetbrains.kotlin.load.java.typeEnhancement.EnhancementResult[SimpleFunctionDescriptorImpl@4eae6dc2]
T: ClassifierDescriptor

public final operator fun component1(): kotlin.Boolean defined in org.jetbrains.kotlin.load.java.typeEnhancement.EnhancementResult[SimpleFunctionDescriptorImpl@bdaf188]
T: Boolean

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cb601a4]
T: Annotations

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cb601a4]
T: AnnotationDescriptor

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cb601a4]
T: AnnotationDescriptor

public final operator fun component1(): org.jetbrains.kotlin.metadata.jvm.deserialization.JvmNameResolver defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7b838faa]
A: JvmNameResolver

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.Class defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1db38e10]
B: Class

public final operator fun component1(): org.jetbrains.kotlin.metadata.jvm.deserialization.JvmNameResolver defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@16a6d932]
A: JvmNameResolver

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.Package defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4a78a7e7]
B: Package


public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@268babc8]
T: KotlinJvmBinaryClass

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: KotlinTypeMarker

public inline fun <T> signatures(block: org.jetbrains.kotlin.load.kotlin.SignatureBuildingComponents.() -> T): T defined in org.jetbrains.kotlin.load.kotlin in file methodSignatureBuilding.kt[SimpleFunctionDescriptorImpl@7990c9e3]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Nothing


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Nothing

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4321fc9a]
E: TypeProjection

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5b0d21bf]
T: JvmDescriptorTypeWriter<T>

@kotlin.internal.InlineOnly public inline fun <R> run(block: () -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@10db46e8]
R: T


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4692d0c7]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51aee37b]
R: ReflectJavaClass

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@50dd602]
R: ReflectJavaType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51aee37b]
R: Name

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51aee37b]
R: ReflectJavaClass

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5e88fa1b]
R: JavaClassifier

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@50dd602]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51aee37b]
R: Name

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51aee37b]
R: ReflectJavaAnnotationArgument

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51aee37b]
R: Visibility

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51aee37b]
R: Name

public abstract operator fun next(): kotlin.collections.IndexedValue<(kotlin.Array<(kotlin.Annotation..kotlin.Annotation?)>..kotlin.Array<out (kotlin.Annotation..kotlin.Annotation?)>?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5807c88e]
T: IndexedValue<(kotlin.Array<(kotlin.Annotation..kotlin.Annotation?)>..kotlin.Array<out (kotlin.Annotation..kotlin.Annotation?)>?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51aee37b]
R: Unit

public abstract operator fun next(): kotlin.collections.IndexedValue<(kotlin.Array<(kotlin.Annotation..kotlin.Annotation?)>..kotlin.Array<out (kotlin.Annotation..kotlin.Annotation?)>?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@609ec7ee]
T: IndexedValue<(kotlin.Array<(kotlin.Annotation..kotlin.Annotation?)>..kotlin.Array<out (kotlin.Annotation..kotlin.Annotation?)>?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51aee37b]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51aee37b]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51aee37b]
R: KotlinClass

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51aee37b]
R: ReflectJavaAnnotation

public final operator fun get(index: kotlin.Int): java.lang.reflect.Type defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@3a7989be]
T: Type

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5e88fa1b]
R: String

public final operator fun get(index: kotlin.Int): kotlin.Array<kotlin.Annotation> defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@31df14ca]
T: Array<Annotation>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: KClassImpl<out (kotlin.Any..kotlin.Any?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: KClassImpl<out T>

public final operator fun component1(): org.jetbrains.kotlin.metadata.jvm.deserialization.JvmNameResolver defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7d804379]
A: JvmNameResolver

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.Package defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@743bd975]
B: Package

public abstract operator fun get(index: kotlin.Int): java.lang.reflect.Type defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@43654305]
E: Type

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: Boolean

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2d84705d]
T: List<Type>

public abstract operator fun get(index: kotlin.Int): java.lang.reflect.Type defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4d478521]
E: Type

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: List<Type>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5a35959e]
T: ArrayList<KotlinType>

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@c495c6f]
E: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@530e8bd4]
R: BoxUnboxData

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: List<KTypeImpl>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: Nothing

public abstract fun callBy(args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): T defined in kotlin.reflect.KFunction[DeserializedSimpleFunctionDescriptor@73c93e35]
R: T

internal inline fun <R> reflectionCall(block: () -> R): R defined in kotlin.reflect.jvm.internal in file util.kt[SimpleFunctionDescriptorImpl@5ba686f6]
R: Nothing

public abstract operator fun next(): kotlin.reflect.KParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1573f0ad]
T: KParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: Int

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5a8ba40a]
T: PropertyDescriptor

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@78144377]
T: PropertyDescriptor

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@78144377]
T: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: Nothing

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5a35959e]
T: ArrayList<Class<*>>

public final operator fun component1(): org.jetbrains.kotlin.metadata.jvm.deserialization.JvmNameResolver defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@43a57cab]
A: JvmNameResolver

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.Package defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@5bc3e3d]
B: Package

public final operator fun component3(): org.jetbrains.kotlin.metadata.jvm.deserialization.JvmMetadataVersion defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@1c31b73a]
C: JvmMetadataVersion

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: String

@org.jetbrains.annotations.NotNull public open fun <D : (org.jetbrains.kotlin.descriptors.CallableMemberDescriptor..org.jetbrains.kotlin.descriptors.CallableMemberDescriptor?)> unwrapFakeOverride(@org.jetbrains.annotations.NotNull p0: D): D defined in org.jetbrains.kotlin.resolve.DescriptorUtils[JavaMethodDescriptor@55c62ee1]
D: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: Nothing

@org.jetbrains.annotations.NotNull public open fun <D : (org.jetbrains.kotlin.descriptors.CallableMemberDescriptor..org.jetbrains.kotlin.descriptors.CallableMemberDescriptor?)> unwrapFakeOverride(@org.jetbrains.annotations.NotNull p0: D): D defined in org.jetbrains.kotlin.resolve.DescriptorUtils[JavaMethodDescriptor@55c62ee1]
D: PropertyDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: KotlinFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: KotlinFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: Nothing

public abstract operator fun get(index: kotlin.Int): java.lang.Class<*> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@416481fb]
E: Class<*>

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6b548fe8]
E: String

public abstract operator fun get(index: kotlin.Int): java.lang.Class<*> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@416481fb]
E: Class<*>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@368434b2]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@646665bd]
V: Any

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2d84705d]
T: Int

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@368434b2]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@646665bd]
V: Any

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2d84705d]
T: String

public abstract operator fun next(): java.lang.ref.WeakReference<kotlin.reflect.jvm.internal.KClassImpl<T>> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@69c3e74d]
T: WeakReference<KClassImpl<T>>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: Nothing

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@368434b2]
K: Name

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@646665bd]
V: ConstantValue<*>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@99bef3c]
R: Pair<String, Any>

public final operator fun component1(): org.jetbrains.kotlin.name.ClassId defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3904bcec]
A: ClassId

public final operator fun component2(): org.jetbrains.kotlin.name.Name defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2beacf64]
B: Name


public final operator fun component1(): org.jetbrains.kotlin.metadata.jvm.deserialization.JvmNameResolver defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4048866]
A: JvmNameResolver

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.Function defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6e27de35]
B: Function

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b42b602]
K: LanguageFeature

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4d572]
V: State

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4e327c31]
T: Set<Jar>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4e327c31]
T: Set<Jar>

public fun <T> kotlin.Array<out T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3bfa78cf]
T: LanguageVersion

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6ea5067b]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6ea5067b]
E: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@146059f4]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@146059f4]
R: Nothing

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b42b602]
K: LanguageFeature

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4d572]
V: State

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@16902398]
T: PsiClass

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@146059f4]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@146059f4]
R: String

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3a719714]
T: String


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@146059f4]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@428c55f5]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@428c55f5]
R: Nothing

public abstract operator fun next(): kotlin.collections.IndexedValue<K> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5aa81167]
T: IndexedValue<K>

public final val init: () -> T defined in org.jetbrains.kotlin.utils.concurrent.block.LockedClearableLazyValue[PropertyDescriptorImpl@39dbcca5] +++|+++
R: T

@kotlin.internal.InlineOnly public inline fun <R> synchronized(lock: kotlin.Any, block: () -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@9c65ccf]
R: T?!!

@kotlin.internal.InlineOnly public inline fun <R> synchronized(lock: kotlin.Any, block: () -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@9c65ccf]
R: Unit

@kotlin.internal.InlineOnly public inline fun <R> synchronized(lock: kotlin.Any, block: () -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@9c65ccf]
R: Boolean

public abstract fun next(): org.jetbrains.kotlin.utils.kapt.ClassLoaderData defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@322f5ade]
T: ClassLoaderData

@kotlin.internal.InlineOnly public inline fun <R> synchronized(lock: kotlin.Any, block: () -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@9c65ccf]
R: Boolean

public abstract fun next(): java.lang.Class<out (kotlin.Any..kotlin.Any?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@5d91c09b]
T: Class<out (kotlin.Any..kotlin.Any?)>

public abstract operator fun next(): kotlin.reflect.KFunction<(kotlin.Any..kotlin.Any?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@d28b7ef]
T: KFunction<(kotlin.Any..kotlin.Any?)>

public abstract operator fun next(): org.jetbrains.kotlin.utils.NamedArgument<T> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6f098acc]
T: NamedArgument<T>

public abstract fun removeAt(index: kotlin.Int): kotlin.reflect.KParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@73c09f3f]
E: KParameter

public abstract fun removeAt(index: kotlin.Int): kotlin.reflect.KParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@73c09f3f]
E: KParameter

public abstract fun removeAt(index: kotlin.Int): kotlin.reflect.KParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@73c09f3f]
E: KParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@146059f4]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@146059f4]
R: Success

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@146059f4]
R: Success

@org.jetbrains.annotations.NotNull protected/*protected and package*/ open fun <T : (kotlin.Any..kotlin.Any?)> notNullChild(p0: (T..T?)): T defined in org.jetbrains.kotlin.psi.KtSecondaryConstructor[JavaMethodDescriptor@332fd6d2]
T: PsiElement

public abstract operator fun invoke(): org.jetbrains.kotlin.psi.KtElement defined in kotlin.Function0[FunctionInvokeDescriptor@6c6ceeb3]
R: KtElement

public abstract operator fun invoke(): org.jetbrains.kotlin.psi.KtElement defined in kotlin.Function0[FunctionInvokeDescriptor@22c8dba9]
R: KtElement

public final operator fun get(index: kotlin.Int): org.jetbrains.kotlin.psi.KtExpression defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@256e77d]
T: KtExpression

public final operator fun get(index: kotlin.Int): org.jetbrains.kotlin.psi.KtExpression defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@77eb08ec]
T: KtExpression

public abstract operator fun next(): com.intellij.lang.ASTNode defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@14ed3012]
T: ASTNode

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7551831c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7551831c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7551831c]
R: Nothing

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@316477d4]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7551831c]
R: Name

public abstract operator fun next(): com.intellij.lang.ASTNode defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@775b853e]
T: ASTNode

public abstract operator fun get(index: kotlin.Int): com.intellij.psi.tree.IElementType defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@7b7540b8]
E: IElementType

public abstract operator fun get(index: kotlin.Int): com.intellij.psi.tree.IElementType defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@7b7540b8]
E: IElementType

public abstract operator fun get(index: kotlin.Int): com.intellij.psi.tree.IElementType defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@7b7540b8]
E: IElementType

public abstract operator fun get(index: kotlin.Int): com.intellij.psi.tree.IElementType defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1ff10313]
E: IElementType

public abstract operator fun get(index: kotlin.Int): com.intellij.psi.tree.IElementType defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4f590873]
E: IElementType

public abstract operator fun get(index: kotlin.Int): com.intellij.psi.tree.IElementType defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6e24c28d]
E: IElementType

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41e1fa70]
T: TItem

public abstract operator fun get(index: kotlin.Int): TItem defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@10fae826]
E: TItem

public abstract operator fun get(index: kotlin.Int): TItem defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@10fae826]
E: TItem

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7551831c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7551831c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7551831c]
R: Name

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7551831c]
R: Name



@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7551831c]
R: Nothing

public open fun <R, D> accept(visitor: org.jetbrains.kotlin.psi.KtVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.psi.KtFile[SimpleFunctionDescriptorImpl@33fae042]
R: Any

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7551831c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7551831c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4055e42f]
T: KtTypeReference

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4055e42f]
T: KtFunctionTypeReceiver

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4055e42f]
T: KtTypeAlias

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41e1fa70]
T: KtObjectDeclaration

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7551831c]
R: String

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41e1fa70]
T: KtDeclaration

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41e1fa70]
T: KtSecondaryConstructor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4055e42f]
T: KtModifierList

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41e1fa70]
T: KtAnonymousInitializer

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41e1fa70]
T: KtParameter

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.psi.KtDeclaration defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@68b950c4]
E: KtDeclaration

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41e1fa70]
T: KtImportDirective

public abstract operator fun next(): org.jetbrains.kotlin.resolve.ImportPath defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5bc8aced]
T: ImportPath

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7551831c]
R: KtPrimaryConstructor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7551831c]
R: KtPrimaryConstructor

public fun <TElement> buildByPattern(factory: (kotlin.String, kotlin.Array<out kotlin.Any>) -> TElement, build: org.jetbrains.kotlin.psi.BuilderByPattern<TElement>.() -> kotlin.Unit): TElement defined in org.jetbrains.kotlin.psi in file createByPattern.kt[SimpleFunctionDescriptorImpl@5c3538f3]
TElement: KtValueArgumentList

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41e1fa70]
T: KtSuperTypeListEntry

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41e1fa70]
T: KtSuperTypeListEntry

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41e1fa70]
T: KtSecondaryConstructor



public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6a4f333c]
T: [@kotlin.internal.NoInfer] PsiComment

@org.jetbrains.annotations.NotNull protected/*protected and package*/ open fun <T : (kotlin.Any..kotlin.Any?)> findNotNullChildByClass(p0: (java.lang.Class<(T..T?)>..java.lang.Class<(T..T?)>?)): T defined in org.jetbrains.kotlin.psi.KtSecondaryConstructor[JavaMethodDescriptor@258d01c0]
T: KtConstructorDelegationCall


public inline fun <T> kotlin.sequences.Sequence<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5b2ec992]
T: PsiElement




























































public fun <T> kotlin.sequences.Sequence<T>.first(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@2f11be14]
T: PsiElement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7551831c]
R: Unit

public final operator fun component1(): kotlin.Any defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6f8b9c04]
A: Any

public final operator fun component2(): org.jetbrains.kotlin.psi.ArgumentType<out kotlin.Any> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@a1d45b6]
B: ArgumentType<out Any>

public abstract operator fun invoke(p1: kotlin.Any): kotlin.String defined in kotlin.Function1[FunctionInvokeDescriptor@45e80045]
R: String


public abstract operator fun next(): kotlin.collections.Map.Entry<kotlin.Int, kotlin.collections.List<org.jetbrains.kotlin.psi.Placeholder>> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2fa0cf3e]
T: Entry<Int, List<Placeholder>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@158c6bae]
K: Int

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7f761a45]
V: List<Placeholder>

public abstract operator fun get(index: kotlin.Int): kotlin.Any defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4149645b]
E: Any

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.psi.ArgumentType<out kotlin.Any> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1400c65a]
E: ArgumentType<out Any>

public abstract operator fun next(): org.jetbrains.kotlin.psi.Placeholder defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@767f174a]
T: Placeholder

public abstract operator fun next(): com.intellij.psi.PsiElement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3756b073]
T: PsiElement

public abstract val key: kotlin.Int defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@658d9186]
K: Int

public abstract operator fun get(index: kotlin.Int): kotlin.Any defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4149645b]
E: Any

public abstract val value: kotlin.collections.List<org.jetbrains.kotlin.psi.Placeholder> defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@4959408f]
V: List<Placeholder>

public abstract operator fun next(): com.intellij.openapi.util.TextRange defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@404d541d]
T: TextRange

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<com.intellij.psi.SmartPsiElementPointer<com.intellij.psi.PsiElement>, kotlin.Int> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@33041165]
T: MutableEntry<SmartPsiElementPointer<PsiElement>, Int>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@158c6bae]
K: SmartPsiElementPointer<PsiElement>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7f761a45]
V: Int

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.psi.ArgumentType<out kotlin.Any> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1400c65a]
E: ArgumentType<out Any>

public abstract operator fun get(index: kotlin.Int): kotlin.Any defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4149645b]
E: Any

public abstract operator fun get(index: kotlin.Int): kotlin.Any defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@8e05fb0]
E: Any

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@40b23221]
V: MutableList<Placeholder>

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.psi.KtExpression?> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@d9848e4]
T: IndexedValue<KtExpression?>

public fun <TElement> buildByPattern(factory: (kotlin.String, kotlin.Array<out kotlin.Any>) -> TElement, build: org.jetbrains.kotlin.psi.BuilderByPattern<TElement>.() -> kotlin.Unit): TElement defined in org.jetbrains.kotlin.psi in file createByPattern.kt[SimpleFunctionDescriptorImpl@5c3538f3]
TElement: KtExpression

public fun <TElement> buildByPattern(factory: (kotlin.String, kotlin.Array<out kotlin.Any>) -> TElement, build: org.jetbrains.kotlin.psi.BuilderByPattern<TElement>.() -> kotlin.Unit): TElement defined in org.jetbrains.kotlin.psi in file createByPattern.kt[SimpleFunctionDescriptorImpl@5c3538f3]
TElement: KtValueArgumentList

public fun <TElement> buildByPattern(factory: (kotlin.String, kotlin.Array<out kotlin.Any>) -> TElement, build: org.jetbrains.kotlin.psi.BuilderByPattern<TElement>.() -> kotlin.Unit): TElement defined in org.jetbrains.kotlin.psi in file createByPattern.kt[SimpleFunctionDescriptorImpl@5c3538f3]
TElement: KtDeclaration

public fun <TElement> buildByPattern(factory: (kotlin.String, kotlin.Array<out kotlin.Any>) -> TElement, build: org.jetbrains.kotlin.psi.BuilderByPattern<TElement>.() -> kotlin.Unit): TElement defined in org.jetbrains.kotlin.psi in file createByPattern.kt[SimpleFunctionDescriptorImpl@5c3538f3]
TElement: KtDestructuringDeclaration


public fun <T> kotlin.sequences.Sequence<T>.last(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@683411e1]
T: KtExpression

public inline fun <T> kotlin.sequences.Sequence<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5b2ec992]
T: PsiElement

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtSuperTypeListEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@629e5985]
T: KtSuperTypeListEntry



public final operator fun component1(): com.intellij.psi.PsiElement defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@79f68151]
A: PsiElement

public final operator fun component2(): com.intellij.psi.PsiElement defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@695b2028]
B: PsiElement

public final val first: com.intellij.psi.PsiElement defined in kotlin.Pair[DeserializedPropertyDescriptor@6437b87]
A: PsiElement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7551831c]
R: Nothing

public final val first: com.intellij.psi.PsiElement defined in kotlin.Pair[DeserializedPropertyDescriptor@50a09a81]
A: PsiElement

public final val second: com.intellij.psi.PsiElement defined in kotlin.Pair[DeserializedPropertyDescriptor@60194674]
B: PsiElement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7551831c]
R: Nothing










public inline fun <T> kotlin.sequences.Sequence<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5b2ec992]
T: PsiElement

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41e1fa70]
T: KtDeclaration

public final operator fun get(index: kotlin.Int): org.jetbrains.kotlin.psi.stubs.ConstantValueKind defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@188858a1]
T: ConstantValueKind

public abstract operator fun next(): com.intellij.util.io.StringRef defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@33870b40]
T: StringRef

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7551831c]
R: FqName

public abstract operator fun next(): kotlin.collections.IndexedValue<(org.jetbrains.kotlin.lexer.KtModifierKeywordToken..org.jetbrains.kotlin.lexer.KtModifierKeywordToken?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2da6061c]
T: IndexedValue<(org.jetbrains.kotlin.lexer.KtModifierKeywordToken..org.jetbrains.kotlin.lexer.KtModifierKeywordToken?)>


public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3f79d7dc]
E: String

public abstract operator fun invoke(p1: org.jetbrains.kotlin.psi.KtExpression): kotlin.Boolean defined in kotlin.Function1[FunctionInvokeDescriptor@90a867a]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2bc4263a]
T: ArrayList<ImportPath>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@14681eae]
R: MemoizedFunctionToNotNull<(org.jetbrains.kotlin.resolve.PlatformDependentAnalyzerServices.DefaultImportsKey..org.jetbrains.kotlin.resolve.PlatformDependentAnalyzerServices.DefaultImportsKey?), (kotlin.collections.List<org.jetbrains.kotlin.resolve.ImportPath>..kotlin.collections.List<org.jetbrains.kotlin.resolve.ImportPath>?)>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@735a7db1]
T: Collection<C>

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@75bea7fe]
T: C

public final val origin: C defined in org.jetbrains.kotlin.resolve.calls.results.FlatSignature[PropertyDescriptorImpl@55012852]
T: C

public final val origin: C defined in org.jetbrains.kotlin.resolve.calls.results.FlatSignature[PropertyDescriptorImpl@55012852]
T: C

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1d02bc56]
T: NewConstraintSystemImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1d02bc56]
T: NewConstraintSystemImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1d02bc56]
T: NewConstraintSystemImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1d02bc56]
T: NewConstraintSystemImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1d02bc56]
T: NewConstraintSystemImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@735a7db1]
T: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: List<UnwrappedType>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: List<UnwrappedType>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2e26342c]
R: Int

private final val getResultingDescriptor: (C) -> org.jetbrains.kotlin.descriptors.CallableDescriptor defined in org.jetbrains.kotlin.resolve.calls.results.OverloadingConflictResolver[PropertyDescriptorImpl@56fb370e] +++|+++
R: CallableDescriptor

public final val message: (org.jetbrains.kotlin.name.Name) -> kotlin.String defined in org.jetbrains.kotlin.resolve.calls.tower.WrongResolutionToClassifier[PropertyDescriptorImpl@81d37e2] +++|+++
R: String

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7fa44565]
T: List<ScopeBasedTowerLevel>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7fa44565]
T: List<ScopeBasedTowerLevel>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7fa44565]
T: Collection<ScopeTowerLevel>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7fa44565]
T: Collection<ScopeTowerLevel>

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4a036ee3]
E: TypeParameterDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: ReceiverValueWithSmartCastInfo

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7fa44565]
T: HierarchicalScope

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7fa44565]
T: HierarchicalScope

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.KotlinCallArgument defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4f531d70]
T: KotlinCallArgument


public open fun <R, D> accept(contractDescriptionVisitor: org.jetbrains.kotlin.contracts.description.ContractDescriptionVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.contracts.description.EffectDeclaration[SimpleFunctionDescriptorImpl@7fabb2bc]
R: Unit

public open fun <R, D> accept(contractDescriptionVisitor: org.jetbrains.kotlin.contracts.description.ContractDescriptionVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.contracts.description.BooleanExpression[SimpleFunctionDescriptorImpl@a4b95bb]
R: Unit

public open fun <R, D> accept(contractDescriptionVisitor: org.jetbrains.kotlin.contracts.description.ContractDescriptionVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.contracts.description.expressions.ConstantReference[SimpleFunctionDescriptorImpl@d8c549d]
R: Unit

public open fun <R, D> accept(contractDescriptionVisitor: org.jetbrains.kotlin.contracts.description.ContractDescriptionVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.contracts.description.expressions.VariableReference[SimpleFunctionDescriptorImpl@55ba8763]
R: Unit

public open fun <R, D> accept(contractDescriptionVisitor: org.jetbrains.kotlin.contracts.description.ContractDescriptionVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.contracts.description.BooleanExpression[SimpleFunctionDescriptorImpl@a4b95bb]
R: Unit

public open fun <R, D> accept(contractDescriptionVisitor: org.jetbrains.kotlin.contracts.description.ContractDescriptionVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.contracts.description.BooleanExpression[SimpleFunctionDescriptorImpl@a4b95bb]
R: Unit

public open fun <R, D> accept(contractDescriptionVisitor: org.jetbrains.kotlin.contracts.description.ContractDescriptionVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.contracts.description.BooleanExpression[SimpleFunctionDescriptorImpl@a4b95bb]
R: Unit

public open fun <R, D> accept(contractDescriptionVisitor: org.jetbrains.kotlin.contracts.description.ContractDescriptionVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.contracts.description.BooleanExpression[SimpleFunctionDescriptorImpl@a4b95bb]
R: Unit

public open fun <R, D> accept(contractDescriptionVisitor: org.jetbrains.kotlin.contracts.description.ContractDescriptionVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.contracts.description.BooleanExpression[SimpleFunctionDescriptorImpl@a4b95bb]
R: Unit

public open fun <R, D> accept(contractDescriptionVisitor: org.jetbrains.kotlin.contracts.description.ContractDescriptionVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.contracts.description.expressions.VariableReference[SimpleFunctionDescriptorImpl@55ba8763]
R: Unit

public open fun <R, D> accept(contractDescriptionVisitor: org.jetbrains.kotlin.contracts.description.ContractDescriptionVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.contracts.description.expressions.VariableReference[SimpleFunctionDescriptorImpl@55ba8763]
R: Unit



@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1d02bc56]
T: MutableContextInfo

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1d02bc56]
T: MutableContextInfo

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1d02bc56]
T: MutableContextInfo

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1d02bc56]
T: MutableContextInfo

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1d02bc56]
T: MutableContextInfo

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5893cca9]
K: ESValue

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@58bdd8f6]
V: MutableSet<D>

public abstract val value: kotlin.collections.Set<D> defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@4373ce94]
V: Set<D>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5893cca9]
K: ESValue

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@58bdd8f6]
V: Set<D>

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.contracts.model.Computation defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@14e51f5]
E: Computation

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.contracts.model.Computation defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@14e51f5]
E: Computation

public inline fun <S, T : S> kotlin.collections.Iterable<T>.reduce(operation: (acc: S, T) -> S): S defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@199b3052]
S: ESExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.contracts.model.Computation defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@265f3a24]
E: Computation

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.contracts.model.Computation defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@8604b1c]
E: Computation

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.contracts.model.Computation defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@8604b1c]
E: Computation

public abstract operator fun next(): org.jetbrains.kotlin.contracts.model.ESEffect defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@b221a58]
T: ESEffect

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.contracts.model.Computation defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@56f59d42]
E: Computation

public abstract operator fun next(): org.jetbrains.kotlin.contracts.model.ESEffect defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1d52a30c]
T: ESEffect


public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@28700ce6]
R: MutableContextInfo

public abstract fun <T> accept(visitor: org.jetbrains.kotlin.contracts.model.ESExpressionVisitor<T>): T defined in org.jetbrains.kotlin.contracts.model.ESExpression[SimpleFunctionDescriptorImpl@14c7cafc]
T: MutableContextInfo

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b74d303]
R: MutableContextInfo

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b74d303]
R: MutableContextInfo

public abstract fun <T> accept(visitor: org.jetbrains.kotlin.contracts.model.ESExpressionVisitor<T>): T defined in org.jetbrains.kotlin.contracts.model.ESExpression[SimpleFunctionDescriptorImpl@14c7cafc]
T: MutableContextInfo

public abstract fun <T> accept(visitor: org.jetbrains.kotlin.contracts.model.ESExpressionVisitor<T>): T defined in org.jetbrains.kotlin.contracts.model.ESExpression[SimpleFunctionDescriptorImpl@14c7cafc]
T: MutableContextInfo

public abstract fun <T> accept(visitor: org.jetbrains.kotlin.contracts.model.ESExpressionVisitor<T>): T defined in org.jetbrains.kotlin.contracts.model.ESExpression[SimpleFunctionDescriptorImpl@14c7cafc]
T: MutableContextInfo

private final fun <R> inverted(block: () -> R): R defined in org.jetbrains.kotlin.contracts.model.visitors.InfoCollector[SimpleFunctionDescriptorImpl@248195ec]
R: MutableContextInfo

public abstract fun <T> accept(visitor: org.jetbrains.kotlin.contracts.model.ESExpressionVisitor<T>): T defined in org.jetbrains.kotlin.contracts.model.ESExpression[SimpleFunctionDescriptorImpl@14c7cafc]
T: MutableContextInfo

public abstract fun <T> accept(visitor: org.jetbrains.kotlin.contracts.model.ESExpressionVisitor<T>): T defined in org.jetbrains.kotlin.contracts.model.ESExpression[SimpleFunctionDescriptorImpl@14c7cafc]
T: MutableContextInfo

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Boolean


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.types.model.SimpleTypeMarker defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6cfc8edd]
T: SimpleTypeMarker

public abstract fun next(): org.jetbrains.kotlin.types.model.SimpleTypeMarker defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@1697840]
T: SimpleTypeMarker

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3a963098]
T: SimpleTypeMarker

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3a963098]
T: SimpleTypeMarker

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3a963098]
T: SimpleTypeMarker

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@13e7d8ab]
T: SimpleTypeMarker

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1d02bc56]
T: LinkedHashSet<TypeConstructorMarker>

public abstract operator fun next(): org.jetbrains.kotlin.types.model.SimpleTypeMarker defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@281a72d6]
T: SimpleTypeMarker

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@13e7d8ab]
T: SimpleTypeMarker

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b74d303]
R: List<SimpleTypeMarker>

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b74d303]
R: List<SimpleTypeMarker>

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@13e7d8ab]
T: TypeArgumentMarker

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7acdd01f]
T: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: UnwrappedType

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.KotlinCallArgument defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@ca918c2]
T: KotlinCallArgument

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@73139a23]
E: ValueParameterDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.KotlinCallArgument defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4145eb0c]
T: KotlinCallArgument

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<org.jetbrains.kotlin.descriptors.ValueParameterDescriptor, org.jetbrains.kotlin.resolve.calls.model.ResolvedCallArgument> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@56500b03]
T: MutableEntry<ValueParameterDescriptor, ResolvedCallArgument>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5893cca9]
K: ValueParameterDescriptor

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@58bdd8f6]
V: ResolvedCallArgument

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@66540f47]
T: ValueParameterDescriptor


@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b74d303]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: VisibilityError

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: UnwrappedType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: CallableReceiver

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: CallableReceiver

public final operator fun component1(): org.jetbrains.kotlin.types.UnwrappedType defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@78451597]
A: UnwrappedType

public final operator fun component2(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@75c46f23]
B: Int

public final operator fun component1(): org.jetbrains.kotlin.resolve.calls.inference.components.FreshVariableNewTypeSubstitutor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5c59a5a7]
A: FreshVariableNewTypeSubstitutor

public final val compatibilityChecker: ((org.jetbrains.kotlin.resolve.calls.inference.ConstraintSystemOperation) -> kotlin.Unit) -> kotlin.Unit defined in org.jetbrains.kotlin.resolve.calls.components.CallableReferencesCandidateFactory[PropertyDescriptorImpl@540b55ff] +++|+++
R: Unit

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.descriptors.ValueParameterDescriptor, org.jetbrains.kotlin.resolve.calls.model.ResolvedCallArgument> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7e73916]
T: Entry<ValueParameterDescriptor, ResolvedCallArgument>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5893cca9]
K: ValueParameterDescriptor

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@58bdd8f6]
V: ResolvedCallArgument

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.KotlinCallArgument defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@44a65384]
T: KotlinCallArgument

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2e26342c]
R: Boolean

public final operator fun component1(): kotlin.Array<org.jetbrains.kotlin.types.KotlinType> defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@569a5d33]
A: Array<KotlinType>

public final operator fun component2(): org.jetbrains.kotlin.types.expressions.CoercionStrategy defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@4d3ebc65]
B: CoercionStrategy

public final val third: kotlin.Int defined in kotlin.Triple[DeserializedPropertyDescriptor@5d80188b]
C: Int

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3a963098]
T: TypeProjection

public inline fun <T> kotlin.collections.Iterable<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2894730c]
T: KotlinType

public inline fun <T> kotlin.collections.Iterable<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2894730c]
T: KotlinType

public inline fun <T> kotlin.collections.Iterable<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2894730c]
T: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: UnwrappedType


@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b74d303]
R: Pair<FreshVariableNewTypeSubstitutor, KotlinCallDiagnostic?>

public final operator fun component1(): org.jetbrains.kotlin.resolve.calls.inference.components.FreshVariableNewTypeSubstitutor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5e0c4c7]
A: FreshVariableNewTypeSubstitutor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: KClass<out Any>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.types.model.TypeConstructorMarker, org.jetbrains.kotlin.resolve.calls.inference.model.VariableWithConstraints> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1e207b6a]
T: Entry<TypeConstructorMarker, VariableWithConstraints>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5893cca9]
K: TypeConstructorMarker

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@58bdd8f6]
V: VariableWithConstraints

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.descriptors.ValueParameterDescriptor, org.jetbrains.kotlin.resolve.calls.model.ResolvedCallArgument> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@d46a8bc]
T: Entry<ValueParameterDescriptor, ResolvedCallArgument>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5893cca9]
K: ValueParameterDescriptor

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@58bdd8f6]
V: ResolvedCallArgument

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.KotlinCallArgument defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@739f5574]
T: KotlinCallArgument

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@13e7d8ab]
T: TypeProjection

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit

public abstract val key: org.jetbrains.kotlin.types.model.TypeVariableMarker defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@73a93860]
K: TypeVariableMarker

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: UnwrappedType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: UnwrappedType

public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.resolve.calls.model.KotlinCallArgument> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@48848c84]
A: List<KotlinCallArgument>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: UnwrappedType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: UnwrappedType

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.types.TypeConstructor, org.jetbrains.kotlin.types.UnwrappedType> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@45896bea]
T: Entry<TypeConstructor, UnwrappedType>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5893cca9]
K: TypeConstructor

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@58bdd8f6]
V: UnwrappedType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: SmartCastReceiverValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: SmartCastReceiverValue

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@735a7db1]
T: TypeArgumentsMapping

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.descriptors.ValueParameterDescriptor, org.jetbrains.kotlin.resolve.calls.model.ResolvedCallArgument> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@65d3c269]
T: Entry<ValueParameterDescriptor, ResolvedCallArgument>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5893cca9]
K: ValueParameterDescriptor

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@58bdd8f6]
V: ResolvedCallArgument

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.KotlinCallArgument defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@47f1ae54]
T: KotlinCallArgument

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.resolve.calls.inference.model.TypeVariableFromCallableDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@168657a3]
E: TypeVariableFromCallableDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.inference.model.TypeVariableFromCallableDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@295f88eb]
T: TypeVariableFromCallableDescriptor

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.resolve.calls.inference.model.TypeVariableFromCallableDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@47ca56ba]
E: TypeVariableFromCallableDescriptor

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.resolve.calls.inference.model.TypeVariableFromCallableDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@47ca56ba]
E: TypeVariableFromCallableDescriptor

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4df9aa0d]
T: Int

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.resolve.calls.model.KotlinCallArgument, org.jetbrains.kotlin.descriptors.ValueParameterDescriptor> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@52169041]
T: Entry<KotlinCallArgument, ValueParameterDescriptor>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5893cca9]
K: KotlinCallArgument

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@58bdd8f6]
V: ValueParameterDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.inference.model.TypeVariableFromCallableDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4e1098a9]
T: TypeVariableFromCallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: UnwrappedType

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.resolve.calls.model.KotlinCallArgument defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@9602a4a]
E: KotlinCallArgument

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.KotlinCallArgument defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@8d67753]
T: KotlinCallArgument

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit

public abstract val key: org.jetbrains.kotlin.types.model.TypeConstructorMarker defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@8a2d0f5]
K: TypeConstructorMarker

public abstract val value: org.jetbrains.kotlin.types.model.KotlinTypeMarker defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@53e3056d]
V: KotlinTypeMarker

public abstract val key: org.jetbrains.kotlin.types.model.TypeConstructorMarker defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@8a2d0f5]
K: TypeConstructorMarker

public abstract val value: org.jetbrains.kotlin.types.model.KotlinTypeMarker defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@53e3056d]
V: KotlinTypeMarker

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5893cca9]
K: TypeConstructorMarker

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@58bdd8f6]
V: VariableWithConstraints

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b74d303]
R: TypeSubstitutorMarker

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: UnwrappedType




@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing




@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b74d303]
R: Unit

public abstract fun next(): org.jetbrains.kotlin.types.model.TypeVariableMarker defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@201b28fa]
T: TypeVariableMarker

public abstract fun next(): org.jetbrains.kotlin.resolve.calls.inference.model.Constraint defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@24261513]
T: Constraint

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.inference.model.VariableWithConstraints defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@728e4e3c]
T: VariableWithConstraints

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b74d303]
R: Unit

public final operator fun component1(): org.jetbrains.kotlin.types.model.TypeVariableMarker defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@34aa52ee]
A: TypeVariableMarker

public final operator fun component2(): org.jetbrains.kotlin.resolve.calls.inference.model.Constraint defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@76ece82d]
B: Constraint

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit

@kotlin.SinceKotlin public fun <K, V> kotlin.collections.Map<K, V>.getValue(key: K): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@23d88a5a]
V: VariableWithConstraints

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.PostponedResolvedAtom defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7c50b20d]
T: PostponedResolvedAtom



public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.ResolvedAtom defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7cf856a4]
T: ResolvedAtom

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.ResolvedAtom defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@49811e6c]
T: ResolvedAtom

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.ResolvedAtom defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3c58226c]
T: ResolvedAtom

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1d02bc56]
T: UnwrappedType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: UnwrappedType

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@ab031ef]
E: TypeProjection

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2e26342c]
R: SimpleTypeMarker

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.inference.model.Constraint defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@342e4728]
T: Constraint

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b74d303]
R: KotlinTypeMarker

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@13e7d8ab]
T: KotlinTypeMarker

public abstract operator fun next(): org.jetbrains.kotlin.types.model.TypeParameterMarker defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@41cbcecd]
T: TypeParameterMarker

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7f622a2f]
V: MutableSet<TypeConstructorMarker>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7f622a2f]
V: MutableSet<TypeConstructorMarker>

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.inference.model.VariableWithConstraints defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7dfe9f0e]
T: VariableWithConstraints

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.inference.model.Constraint defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7afda0c7]
T: Constraint


@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b74d303]
R: Boolean

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7f622a2f]
V: MutableSet<TypeConstructorMarker>

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.PostponedResolvedAtomMarker defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6d9ed349]
T: PostponedResolvedAtomMarker

public abstract operator fun next(): org.jetbrains.kotlin.types.model.KotlinTypeMarker defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5b95ca0]
T: KotlinTypeMarker

public abstract fun next(): org.jetbrains.kotlin.types.model.TypeConstructorMarker defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@44070706]
T: TypeConstructorMarker

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.PostponedResolvedAtomMarker defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4ed36e82]
T: PostponedResolvedAtomMarker

public abstract operator fun next(): org.jetbrains.kotlin.types.model.TypeConstructorMarker defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@41399aca]
T: TypeConstructorMarker

public abstract operator fun next(): org.jetbrains.kotlin.types.model.TypeConstructorMarker defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@43c08431]
T: TypeConstructorMarker

public open fun getOrDefault(key: org.jetbrains.kotlin.resolve.calls.inference.components.Variable /* = org.jetbrains.kotlin.resolve.calls.inference.model.VariableWithConstraints */, defaultValue: org.jetbrains.kotlin.resolve.calls.inference.components.TypeVariableDirectionCalculator.ResolveDirection): org.jetbrains.kotlin.resolve.calls.inference.components.TypeVariableDirectionCalculator.ResolveDirection defined in java.util.HashMap[JavaMethodDescriptor@226c0a84]
V: ResolveDirection

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b74d303]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b74d303]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.PostponedResolvedAtom defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5de1f8b6]
T: PostponedResolvedAtom

public abstract operator fun next(): org.jetbrains.kotlin.types.UnwrappedType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5cbbf19e]
T: UnwrappedType

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.inference.components.TypeVariableDirectionCalculator.NodeWithDirection defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7833d789]
T: NodeWithDirection

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.inference.model.Constraint defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@506ebf1c]
T: Constraint

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@735a7db1]
T: SmartList<NodeWithDirection>


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b74d303]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.inference.model.Constraint defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@59a75c97]
T: Constraint


public abstract fun next(): org.jetbrains.kotlin.resolve.calls.inference.model.Constraint defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@665d34c3]
T: Constraint


public abstract fun next(): org.jetbrains.kotlin.types.model.TypeVariableMarker defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@373ceb59]
T: TypeVariableMarker

public abstract fun next(): org.jetbrains.kotlin.resolve.calls.inference.model.MutableVariableWithConstraints defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@c4be2af]
T: MutableVariableWithConstraints

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.types.model.TypeConstructorMarker, org.jetbrains.kotlin.resolve.calls.inference.model.VariableWithConstraints> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6ded7048]
T: Entry<TypeConstructorMarker, VariableWithConstraints>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5893cca9]
K: TypeConstructorMarker

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@58bdd8f6]
V: VariableWithConstraints

public abstract fun next(): org.jetbrains.kotlin.resolve.calls.inference.model.MutableVariableWithConstraints defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@1e749f2e]
T: MutableVariableWithConstraints

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: ReceiverExpressionKotlinCallArgument

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: ReceiverExpressionKotlinCallArgument

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: ReceiverExpressionKotlinCallArgument

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7acdd01f]
T: CallableMemberDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.resolve.calls.model.ResolutionPart defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@38e2f2bb]
E: ResolutionPart

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2e26342c]
R: Int

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.resolve.calls.model.ResolutionPart defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@38e2f2bb]
E: ResolutionPart

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.resolve.calls.model.ResolutionPart defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@38e2f2bb]
E: ResolutionPart

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2e26342c]
R: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2e26342c]
R: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2e26342c]
R: Unit

public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.types.model.KotlinTypeMarker?, org.jetbrains.kotlin.types.model.KotlinTypeMarker?> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@199093c0]
T: Pair<KotlinTypeMarker?, KotlinTypeMarker?>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: KotlinTypeMarker

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7acdd01f]
T: C

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

private final val isFromSources: (org.jetbrains.kotlin.descriptors.CallableDescriptor) -> kotlin.Boolean defined in org.jetbrains.kotlin.resolve.calls.results.OverloadingConflictResolver[PropertyDescriptorImpl@60b80c18] +++|+++
R: Boolean

public abstract operator fun next(): C defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@12077f88]
T: C

public abstract fun next(): C defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@38cdef4c]
T: C

private final val isFromSources: (org.jetbrains.kotlin.descriptors.CallableDescriptor) -> kotlin.Boolean defined in org.jetbrains.kotlin.resolve.calls.results.OverloadingConflictResolver[PropertyDescriptorImpl@60b80c18] +++|+++
R: Boolean

private final val isFromSources: (org.jetbrains.kotlin.descriptors.CallableDescriptor) -> kotlin.Boolean defined in org.jetbrains.kotlin.resolve.calls.results.OverloadingConflictResolver[PropertyDescriptorImpl@60b80c18] +++|+++
R: Boolean


private final val createFlatSignature: (C) -> org.jetbrains.kotlin.resolve.calls.results.FlatSignature<C> defined in org.jetbrains.kotlin.resolve.calls.results.OverloadingConflictResolver[PropertyDescriptorImpl@1f753176] +++|+++
R: FlatSignature<C>

private final val createFlatSignature: (C) -> org.jetbrains.kotlin.resolve.calls.results.FlatSignature<C> defined in org.jetbrains.kotlin.resolve.calls.results.OverloadingConflictResolver[PropertyDescriptorImpl@1f753176] +++|+++
R: FlatSignature<C>

public final val origin: C defined in org.jetbrains.kotlin.resolve.calls.results.FlatSignature[PropertyDescriptorImpl@72cb5723]
T: C

public abstract operator fun next(): C defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@8ce8707]
T: C






private final val createEmptyConstraintSystem: () -> org.jetbrains.kotlin.resolve.calls.results.SimpleConstraintSystem defined in org.jetbrains.kotlin.resolve.calls.results.OverloadingConflictResolver[PropertyDescriptorImpl@147fbf] +++|+++
R: SimpleConstraintSystem

private final val createEmptyConstraintSystem: () -> org.jetbrains.kotlin.resolve.calls.results.SimpleConstraintSystem defined in org.jetbrains.kotlin.resolve.calls.results.OverloadingConflictResolver[PropertyDescriptorImpl@147fbf] +++|+++
R: SimpleConstraintSystem

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1d02bc56]
T: THashSet<C>

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.FunctionDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2717069c]
T: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1d02bc56]
T: CopyBuilder<out (org.jetbrains.kotlin.descriptors.FunctionDescriptor..org.jetbrains.kotlin.descriptors.FunctionDescriptor?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: VariableInvokeProcessor<C>

public abstract fun next(): kotlin.collections.Collection<org.jetbrains.kotlin.resolve.calls.tower.AbstractInvokeTowerProcessor<C>.VariableInvokeProcessor> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@cd9f76f]
T: Collection<VariableInvokeProcessor<C>>

public abstract operator fun next(): kotlin.collections.Collection<C> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@198f59ef]
T: Collection<C>

public abstract fun next(): org.jetbrains.kotlin.resolve.calls.tower.TowerData defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@45773779]
T: TowerData

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@75bea7fe]
T: VariableInvokeProcessor<C>

public final operator fun component1(): org.jetbrains.kotlin.resolve.scopes.receivers.ReceiverValueWithSmartCastInfo defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6a969113]
A: ReceiverValueWithSmartCastInfo

public final operator fun component2(): org.jetbrains.kotlin.resolve.calls.tower.CandidateFactory<C> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@40451bcd]
B: CandidateFactory<C>

public final operator fun component1(): org.jetbrains.kotlin.resolve.scopes.receivers.ReceiverValueWithSmartCastInfo defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@67310c64]
A: ReceiverValueWithSmartCastInfo

public final operator fun component2(): org.jetbrains.kotlin.resolve.calls.tower.CandidateFactory<C> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@334e1555]
B: CandidateFactory<C>

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@75bea7fe]
T: [@kotlin.jvm.JvmWildcard] SimpleFunctionDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.tower.CandidateWithBoundDispatchReceiver defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@604e0b5e]
T: CandidateWithBoundDispatchReceiver

public final val collectCandidates: org.jetbrains.kotlin.resolve.calls.tower.CandidatesCollector /* = org.jetbrains.kotlin.resolve.calls.tower.ScopeTowerLevel.(extensionReceiver: org.jetbrains.kotlin.resolve.scopes.receivers.ReceiverValueWithSmartCastInfo?) -> kotlin.collections.Collection<org.jetbrains.kotlin.resolve.calls.tower.CandidateWithBoundDispatchReceiver> */ defined in org.jetbrains.kotlin.resolve.calls.tower.ExplicitReceiverScopeTowerProcessor[PropertyDescriptorImpl@70d3639e] +++|+++
R: Collection<CandidateWithBoundDispatchReceiver>

public final val collectCandidates: org.jetbrains.kotlin.resolve.calls.tower.CandidatesCollector /* = org.jetbrains.kotlin.resolve.calls.tower.ScopeTowerLevel.(extensionReceiver: org.jetbrains.kotlin.resolve.scopes.receivers.ReceiverValueWithSmartCastInfo?) -> kotlin.collections.Collection<org.jetbrains.kotlin.resolve.calls.tower.CandidateWithBoundDispatchReceiver> */ defined in org.jetbrains.kotlin.resolve.calls.tower.ExplicitReceiverScopeTowerProcessor[PropertyDescriptorImpl@70d3639e] +++|+++
R: Collection<CandidateWithBoundDispatchReceiver>

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.tower.TowerData defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4bc19de0]
T: TowerData

public final val collectCandidates: org.jetbrains.kotlin.resolve.calls.tower.CandidatesCollector /* = org.jetbrains.kotlin.resolve.calls.tower.ScopeTowerLevel.(extensionReceiver: org.jetbrains.kotlin.resolve.scopes.receivers.ReceiverValueWithSmartCastInfo?) -> kotlin.collections.Collection<org.jetbrains.kotlin.resolve.calls.tower.CandidateWithBoundDispatchReceiver> */ defined in org.jetbrains.kotlin.resolve.calls.tower.QualifierScopeTowerProcessor[PropertyDescriptorImpl@68d94b07] +++|+++
R: Collection<CandidateWithBoundDispatchReceiver>

public final val collectCandidates: org.jetbrains.kotlin.resolve.calls.tower.CandidatesCollector /* = org.jetbrains.kotlin.resolve.calls.tower.ScopeTowerLevel.(extensionReceiver: org.jetbrains.kotlin.resolve.scopes.receivers.ReceiverValueWithSmartCastInfo?) -> kotlin.collections.Collection<org.jetbrains.kotlin.resolve.calls.tower.CandidateWithBoundDispatchReceiver> */ defined in org.jetbrains.kotlin.resolve.calls.tower.NoExplicitReceiverScopeTowerProcessor[PropertyDescriptorImpl@42db2bc8] +++|+++
R: Collection<CandidateWithBoundDispatchReceiver>

public final val collectCandidates: org.jetbrains.kotlin.resolve.calls.tower.CandidatesCollector /* = org.jetbrains.kotlin.resolve.calls.tower.ScopeTowerLevel.(extensionReceiver: org.jetbrains.kotlin.resolve.scopes.receivers.ReceiverValueWithSmartCastInfo?) -> kotlin.collections.Collection<org.jetbrains.kotlin.resolve.calls.tower.CandidateWithBoundDispatchReceiver> */ defined in org.jetbrains.kotlin.resolve.calls.tower.NoExplicitReceiverScopeTowerProcessor[PropertyDescriptorImpl@42db2bc8] +++|+++
R: Collection<CandidateWithBoundDispatchReceiver>

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.tower.TowerData defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@295eb723]
T: TowerData

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: ScopeTowerProcessor<C>


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Boolean


public abstract operator fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6db79cce]
T: KotlinType




@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.tower.ScopeTowerLevel defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1b69332e]
T: ScopeTowerLevel

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.resolve.scopes.HierarchicalScope defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@73f2626a]
T: HierarchicalScope

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.tower.ScopeTowerLevel defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@485db533]
T: ScopeTowerLevel

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.tower.ScopeTowerLevel defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3f89f639]
T: ScopeTowerLevel

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

public abstract operator fun next(): kotlin.collections.Collection<C> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@762914f9]
T: Collection<C>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b74d303]
R: Nothing

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1f1ba64d]
E: TypeParameterDescriptor

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@fced10]
E: TypeParameterDescriptor

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1f1ba64d]
E: TypeParameterDescriptor

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@fced10]
E: TypeParameterDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.MemberDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@54df6296]
T: MemberDescriptor

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.descriptors.MemberDescriptor, org.jetbrains.kotlin.resolve.multiplatform.ExpectedActualResolver.Compatibility> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@315edb7b]
T: Entry<MemberDescriptor, Compatibility>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5893cca9]
K: MemberDescriptor

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@58bdd8f6]
V: Compatibility

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7f622a2f]
V: MutableCollection<MemberDescriptor>

val nameFilter: (org.jetbrains.kotlin.name.Name) -> kotlin.Boolean defined in org.jetbrains.kotlin.resolve.multiplatform.ExpectedActualResolver.getMembers[LocalVariableDescriptor@332add43] +++|+++
R: Boolean


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: DescriptorWithDeprecation<ClassifierDescriptor>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: DescriptorWithDeprecation<ClassifierDescriptor>

public abstract operator fun next(): org.jetbrains.kotlin.resolve.scopes.MemberScope defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@368dfefc]
T: MemberScope

public abstract operator fun next(): org.jetbrains.kotlin.resolve.scopes.MemberScope defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@26d17aca]
T: MemberScope

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@6f3d4b44]
E: DeclarationDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: DescriptorWithDeprecation<ClassifierDescriptor>


public abstract operator fun next(): org.jetbrains.kotlin.resolve.scopes.HierarchicalScope defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@71c642e6]
T: HierarchicalScope

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit



@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Unit


public inline fun <T> kotlin.sequences.Sequence<T>.last(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@7b9bd1d1]
T: HierarchicalScope

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: Nothing




@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4747b469]
R: KotlinTypeMarker

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@13e7d8ab]
T: KotlinTypeMarker

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b74d303]
R: KotlinTypeMarker

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@75bea7fe]
T: KotlinTypeMarker

public open val typeVariable: (org.jetbrains.kotlin.types.model.TypeVariableTypeConstructorMarker) -> kotlin.Boolean defined in org.jetbrains.kotlin.types.TypeApproximatorConfiguration[PropertyDescriptorImpl@28712d11] +++|+++
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7896247b]
R: MemoizedFunctionToNullable<KtImportInfo, ImportingScope>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: String

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d38e21]
T: ReadValueInstruction

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@75f9b53e]
T: AnnotationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationUseSiteTarget defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4e9b5543]
T: AnnotationUseSiteTarget

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@f8b007f]
V: MutableList<AnnotationDescriptor>

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationWithTarget defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6a3d95b9]
T: AnnotationWithTarget

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@f8b007f]
V: MutableList<AnnotationDescriptor>

public final operator fun component1(): kotlin.collections.HashMap<org.jetbrains.kotlin.descriptors.annotations.AnnotationUseSiteTarget, kotlin.collections.MutableList<org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor>> /* = java.util.HashMap<org.jetbrains.kotlin.descriptors.annotations.AnnotationUseSiteTarget, kotlin.collections.MutableList<org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor>> */ defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1b112754]
A: HashMap<AnnotationUseSiteTarget, MutableList<AnnotationDescriptor>>

public final operator fun component2(): org.jetbrains.kotlin.descriptors.annotations.Annotations defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@73b28701]
B: Annotations

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Annotations

public final operator fun component1(): kotlin.collections.HashMap<org.jetbrains.kotlin.descriptors.annotations.AnnotationUseSiteTarget, kotlin.collections.MutableList<org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor>> /* = java.util.HashMap<org.jetbrains.kotlin.descriptors.annotations.AnnotationUseSiteTarget, kotlin.collections.MutableList<org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor>> */ defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@36da60aa]
A: HashMap<AnnotationUseSiteTarget, MutableList<AnnotationDescriptor>>

public final operator fun component2(): org.jetbrains.kotlin.descriptors.annotations.Annotations defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@dc4d345]
B: Annotations

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Annotations

public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@32017891]
T: Boolean

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73181360]
R: Long

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7040e082]
T: ResolvedCall<D>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Pair<Name, ConstantValue<Any?>>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Pair<Name, ConstantValue<Any?>>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Pair<Name, ConstantValue<Any?>>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Pair<Name, ConstantValue<Any?>>

public abstract fun <T> compute(computable: () -> T): T defined in org.jetbrains.kotlin.storage.StorageManager[DeserializedSimpleFunctionDescriptor@f35ac5]
T: Collection<(K..K?)>

public abstract fun <T> compute(computable: () -> T): T defined in org.jetbrains.kotlin.storage.StorageManager[DeserializedSimpleFunctionDescriptor@f35ac5]
T: ImmutableMap<(K..K?), (V..V?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: String

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@587dd93f]
T: Set<M>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@587dd93f]
T: Set<M>

public abstract operator fun next(): org.jetbrains.kotlin.analyzer.ModuleInfo defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@736db3df]
T: ModuleInfo

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@587dd93f]
T: PseudocodeVariablesData

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@587dd93f]
T: PseudocodeVariablesData

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@587dd93f]
T: Set<LocalFunctionDeclarationInstruction>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@587dd93f]
T: Set<LocalFunctionDeclarationInstruction>

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@fb9f39]
T: Instruction

public abstract operator fun next(): org.jetbrains.kotlin.cfg.pseudocode.instructions.Instruction defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@449bad9e]
T: Instruction

public open fun get(index: kotlin.Int): org.jetbrains.kotlin.cfg.pseudocode.instructions.Instruction defined in java.util.ArrayList[JavaMethodDescriptor@68278e1a]
E: Instruction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@587dd93f]
T: VariablesForDeclaration

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@587dd93f]
T: VariablesForDeclaration

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@587dd93f]
T: Map<Instruction, Edges<VariableInitReadOnlyControlFlowInfo>>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@587dd93f]
T: Map<Instruction, Edges<VariableInitReadOnlyControlFlowInfo>>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d38e21]
T: HashMap<Instruction, Edges<ReadOnlyControlFlowInfo<VariableDescriptor, VariableUseState>>>

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@17234fbe]
T: UsageVariableControlFlowInfo

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73181360]
R: UsageVariableControlFlowInfo

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73181360]
R: UsageVariableControlFlowInfo

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: Instruction

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: Edges<UsageVariableControlFlowInfo>

public final val incoming: org.jetbrains.kotlin.cfg.variable.PseudocodeVariablesData.ReadOnlyUseControlFlowInfoImpl defined in org.jetbrains.kotlin.cfg.pseudocodeTraverser.Edges[PropertyDescriptorImpl@67cfd7c2]
T: ReadOnlyUseControlFlowInfoImpl

public final val incoming: org.jetbrains.kotlin.cfg.variable.UsageVariableControlFlowInfo defined in org.jetbrains.kotlin.cfg.pseudocodeTraverser.Edges[PropertyDescriptorImpl@4df7df95]
T: UsageVariableControlFlowInfo

public final val outgoing: org.jetbrains.kotlin.cfg.variable.PseudocodeVariablesData.ReadOnlyUseControlFlowInfoImpl defined in org.jetbrains.kotlin.cfg.pseudocodeTraverser.Edges[PropertyDescriptorImpl@631ac93e]
T: ReadOnlyUseControlFlowInfoImpl

public final val outgoing: org.jetbrains.kotlin.cfg.variable.UsageVariableControlFlowInfo defined in org.jetbrains.kotlin.cfg.pseudocodeTraverser.Edges[PropertyDescriptorImpl@18a0b384]
T: UsageVariableControlFlowInfo

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4ed6616]
T: LinkedHashSet<VariableDescriptor>

public abstract operator fun next(): org.jetbrains.kotlin.checkers.diagnostics.AbstractTestDiagnostic defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7f401d47]
T: AbstractTestDiagnostic

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@587dd93f]
T: Array<PreprocessedVirtualFileFactoryExtension>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@587dd93f]
T: Array<PreprocessedVirtualFileFactoryExtension>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Position

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d38e21]
T: MutableList<KotlinType>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@f69d202]
R: Boolean

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@68375020]
E: TypeProjection

public abstract operator fun getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@734dc940]
T: Boolean

public abstract operator fun getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@2f6b7a0c]
T: Boolean

public abstract val key: org.jetbrains.kotlin.resolve.calls.inference.TypeVariable defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@6a8c1128]
K: TypeVariable

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7040e082]
T: KotlinType

public abstract operator fun invoke(): kotlin.collections.List<org.jetbrains.kotlin.resolve.calls.model.KotlinCallDiagnostic> defined in kotlin.Function0[FunctionInvokeDescriptor@56935f3]
R: List<KotlinCallDiagnostic>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@587dd93f]
T: List<KotlinCallDiagnostic>

public abstract operator fun invoke(): kotlin.collections.List<org.jetbrains.kotlin.resolve.calls.model.KotlinCallDiagnostic> defined in kotlin.Function0[FunctionInvokeDescriptor@56935f3]
R: List<KotlinCallDiagnostic>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@587dd93f]
T: List<KotlinCallDiagnostic>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@587dd93f]
T: ResolutionCandidateApplicability

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@587dd93f]
T: ResolutionCandidateApplicability

public open fun <R : (kotlin.Any..kotlin.Any?), D : (kotlin.Any..kotlin.Any?)> accept(@org.jetbrains.annotations.NotNull visitor: org.jetbrains.kotlin.psi.KtVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.psi.KtStringTemplateEntry[JavaMethodDescriptor@1e86c6ea]
R: TypedCompileTimeConstant<String>

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7040e082]
T: Deprecation

public abstract operator fun next(): I defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1aebb3d2]
T: I

public abstract operator fun next(): I defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1820addb]
T: I

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d38e21]
T: Collection<DeclarationDescriptor>

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtImportDirective defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@24e9f69f]
T: KtImportDirective

private final val getOuterScope: () -> org.jetbrains.kotlin.resolve.scopes.LexicalScope defined in org.jetbrains.kotlin.resolve.lazy.descriptors.ClassResolutionScopesSupport[PropertyDescriptorImpl@550c9655] +++|+++
R: LexicalScope

private final val inheritanceScopeWithMe: () -> org.jetbrains.kotlin.resolve.scopes.LexicalScope defined in org.jetbrains.kotlin.resolve.lazy.descriptors.ClassResolutionScopesSupport[PropertyDescriptorImpl@42cbbfda] +++|+++
R: LexicalScope

private final val getOuterScope: () -> org.jetbrains.kotlin.resolve.scopes.LexicalScope defined in org.jetbrains.kotlin.resolve.lazy.descriptors.ClassResolutionScopesSupport[PropertyDescriptorImpl@550c9655] +++|+++
R: LexicalScope

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73181360]
R: LexicalScope

private final val inheritanceScopeWithoutMe: () -> org.jetbrains.kotlin.resolve.scopes.LexicalScope defined in org.jetbrains.kotlin.resolve.lazy.descriptors.ClassResolutionScopesSupport[PropertyDescriptorImpl@6293e131] +++|+++
R: LexicalScope

private final val inheritanceScopeWithoutMe: () -> org.jetbrains.kotlin.resolve.scopes.LexicalScope defined in org.jetbrains.kotlin.resolve.lazy.descriptors.ClassResolutionScopesSupport[PropertyDescriptorImpl@6293e131] +++|+++
R: LexicalScope

private final val inheritanceScopeWithMe: () -> org.jetbrains.kotlin.resolve.scopes.LexicalScope defined in org.jetbrains.kotlin.resolve.lazy.descriptors.ClassResolutionScopesSupport[PropertyDescriptorImpl@42cbbfda] +++|+++
R: LexicalScope

public final val scopeForMemberDeclarationResolution: () -> org.jetbrains.kotlin.resolve.scopes.LexicalScope defined in org.jetbrains.kotlin.resolve.lazy.descriptors.ClassResolutionScopesSupport[PropertyDescriptorImpl@707267b] +++|+++
R: LexicalScope

private final val inheritanceScopeWithMe: () -> org.jetbrains.kotlin.resolve.scopes.LexicalScope defined in org.jetbrains.kotlin.resolve.lazy.descriptors.ClassResolutionScopesSupport[PropertyDescriptorImpl@42cbbfda] +++|+++
R: LexicalScope

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d38e21]
T: MutableSet<Name>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@587dd93f]
T: MutableSet<Name>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d38e21]
T: MutableSet<Name>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@587dd93f]
T: MutableSet<Name>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d38e21]
T: MutableSet<Name>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@587dd93f]
T: MutableSet<Name>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d38e21]
T: MutableSet<Name>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@587dd93f]
T: MutableSet<Name>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ClassValueReceiver

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ClassValueReceiver

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@587dd93f]
T: Unit

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@587dd93f]
T: Unit

internal final inline fun <T> getOrPut(threadLocal: java.lang.ThreadLocal<T>, default: () -> T): T defined in org.jetbrains.kotlin.util.PerformanceCounter.Companion[SimpleFunctionDescriptorImpl@38aff425]
T: MutableMap<CounterWithExclude, CallStackWithTime>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@f8b007f]
V: CallStackWithTime

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d38e21]
T: MutableSet<MutableEntry<K, V>>

@org.jetbrains.annotations.NotNull public open operator fun <T : (kotlin.Any..kotlin.Any?)> get(@org.jetbrains.annotations.NotNull key: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>, @org.jetbrains.annotations.NotNull defaultValue: T): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@32b4f2ac]
T: LanguageVersionSettings

public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@32017891]
T: Boolean

public final val <E : (com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?), A : (kotlin.Any..kotlin.Any?), B : (kotlin.Any..kotlin.Any?), C : (kotlin.Any..kotlin.Any?)> org.jetbrains.kotlin.diagnostics.DiagnosticWithParameters3<E, A, B, C>.c: C[MyPropertyDescriptor@45d0fdf2]
C: (kotlin.collections.MutableMap<(org.jetbrains.kotlin.resolve.multiplatform.ExpectedActualResolver.Compatibility.Incompatible..org.jetbrains.kotlin.resolve.multiplatform.ExpectedActualResolver.Compatibility.Incompatible?), (kotlin.collections.MutableCollection<(org.jetbrains.kotlin.descriptors.MemberDescriptor..org.jetbrains.kotlin.descriptors.MemberDescriptor?)>..kotlin.collections.Collection<(org.jetbrains.kotlin.descriptors.MemberDescriptor..org.jetbrains.kotlin.descriptors.MemberDescriptor?)>?)>..kotlin.collections.Map<(org.jetbrains.kotlin.resolve.multiplatform.ExpectedActualResolver.Compatibility.Incompatible..org.jetbrains.kotlin.resolve.multiplatform.ExpectedActualResolver.Compatibility.Incompatible?), (kotlin.collections.MutableCollection<(org.jetbrains.kotlin.descriptors.MemberDescriptor..org.jetbrains.kotlin.descriptors.MemberDescriptor?)>..kotlin.collections.Collection<(org.jetbrains.kotlin.descriptors.MemberDescriptor..org.jetbrains.kotlin.descriptors.MemberDescriptor?)>?)>)

public final val <E : (com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?), A : (kotlin.Any..kotlin.Any?), B : (kotlin.Any..kotlin.Any?)> org.jetbrains.kotlin.diagnostics.DiagnosticWithParameters2<E, A, B>.b: B[MyPropertyDescriptor@130cf6a1]
B: (kotlin.collections.MutableMap<(org.jetbrains.kotlin.resolve.multiplatform.ExpectedActualResolver.Compatibility.Incompatible..org.jetbrains.kotlin.resolve.multiplatform.ExpectedActualResolver.Compatibility.Incompatible?), (kotlin.collections.MutableCollection<(org.jetbrains.kotlin.descriptors.MemberDescriptor..org.jetbrains.kotlin.descriptors.MemberDescriptor?)>..kotlin.collections.Collection<(org.jetbrains.kotlin.descriptors.MemberDescriptor..org.jetbrains.kotlin.descriptors.MemberDescriptor?)>?)>..kotlin.collections.Map<(org.jetbrains.kotlin.resolve.multiplatform.ExpectedActualResolver.Compatibility.Incompatible..org.jetbrains.kotlin.resolve.multiplatform.ExpectedActualResolver.Compatibility.Incompatible?), (kotlin.collections.MutableCollection<(org.jetbrains.kotlin.descriptors.MemberDescriptor..org.jetbrains.kotlin.descriptors.MemberDescriptor?)>..kotlin.collections.Collection<(org.jetbrains.kotlin.descriptors.MemberDescriptor..org.jetbrains.kotlin.descriptors.MemberDescriptor?)>?)>)

public final val <E : (com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?)> org.jetbrains.kotlin.diagnostics.ParametrizedDiagnostic<E>.psiElement: E[MyPropertyDescriptor@4399d3bb]
E: KtNamedDeclaration

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: List<TextRange>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: List<TextRange>

public final val <E : (com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?), A : (kotlin.Any..kotlin.Any?)> org.jetbrains.kotlin.diagnostics.DiagnosticWithParameters1<E, A>.a: A[MyPropertyDescriptor@16f199d5]
A: (kotlin.collections.MutableList<(com.intellij.openapi.util.TextRange..com.intellij.openapi.util.TextRange?)>..kotlin.collections.List<(com.intellij.openapi.util.TextRange..com.intellij.openapi.util.TextRange?)>)

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.psi.KtSuperTypeListEntry defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4bf910c7]
E: KtSuperTypeListEntry

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing


public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@17234fbe]
T: SimplePlatform


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: String

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.ClassDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7154f6b]
T: ClassDescriptor

public abstract val value: kotlin.collections.List<org.jetbrains.kotlin.name.FqNameUnsafe> defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@863bdda]
V: List<FqNameUnsafe>

public abstract val key: org.jetbrains.kotlin.name.Name defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@285013af]
K: Name

public abstract operator fun <T> get(key: org.jetbrains.kotlin.diagnostics.rendering.RenderingContext.Key<T>): T defined in org.jetbrains.kotlin.diagnostics.rendering.RenderingContext[SimpleFunctionDescriptorImpl@6aa9a888]
T: ClassifierNamePolicy

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Regex

@kotlin.internal.InlineOnly public inline fun <R> synchronized(lock: kotlin.Any, block: () -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@76222bd]
R: Boolean

private final val modulesContent: (M) -> org.jetbrains.kotlin.analyzer.ModuleContent<M> defined in org.jetbrains.kotlin.analyzer.ResolverForProjectImpl[PropertyDescriptorImpl@133adb05] +++|+++
R: ModuleContent<M>

private final val modulesContent: (M) -> org.jetbrains.kotlin.analyzer.ModuleContent<M> defined in org.jetbrains.kotlin.analyzer.ResolverForProjectImpl[PropertyDescriptorImpl@133adb05] +++|+++
R: ModuleContent<M>

private final val resolverForModuleFactoryByPlatform: (org.jetbrains.kotlin.platform.TargetPlatform?) -> org.jetbrains.kotlin.analyzer.ResolverForModuleFactory defined in org.jetbrains.kotlin.analyzer.ResolverForProjectImpl[PropertyDescriptorImpl@123f44c2] +++|+++
R: ResolverForModuleFactory

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@f8b007f]
V: ResolverForModule

public abstract fun <T> compute(computable: () -> T): T defined in org.jetbrains.kotlin.storage.StorageManager[DeserializedSimpleFunctionDescriptor@f35ac5]
T: ResolverForModule

public abstract fun <T> compute(computable: () -> T): T defined in org.jetbrains.kotlin.storage.StorageManager[DeserializedSimpleFunctionDescriptor@f35ac5]
T: Boolean

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@f8b007f]
V: ModuleData

public abstract fun <T> compute(computable: () -> T): T defined in org.jetbrains.kotlin.storage.StorageManager[DeserializedSimpleFunctionDescriptor@f35ac5]
T: ModuleDescriptorImpl

public open val builtInsProvider: (M) -> org.jetbrains.kotlin.builtins.KotlinBuiltIns defined in org.jetbrains.kotlin.analyzer.ResolverForProjectImpl[PropertyDescriptorImpl@7e21205b] +++|+++
R: KotlinBuiltIns

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@653f756f]
T: ModuleInfo

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: KtExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: KtExpression

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtElement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@45e9db4a]
T: KtElement

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtElement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7eed28a3]
T: KtElement

public abstract fun next(): org.jetbrains.kotlin.cfg.pseudocode.instructions.Instruction defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@2e964bae]
T: Instruction

public abstract operator fun next(): org.jetbrains.kotlin.cfg.pseudocode.instructions.Instruction defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3057a7a9]
T: Instruction

public abstract operator fun next(): org.jetbrains.kotlin.cfg.pseudocode.instructions.special.LocalFunctionDeclarationInstruction defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@372e659f]
T: LocalFunctionDeclarationInstruction

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtElement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4ff2fa44]
T: KtElement

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtElement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@62b35600]
T: KtElement

public abstract operator fun next(): org.jetbrains.kotlin.cfg.pseudocode.instructions.Instruction defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6153cfa8]
T: Instruction

public abstract operator fun next(): org.jetbrains.kotlin.cfg.pseudocode.instructions.special.LocalFunctionDeclarationInstruction defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@78a7dacf]
T: LocalFunctionDeclarationInstruction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@239da3de]
T: DeclarationDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.VariableDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@136d2c95]
T: VariableDescriptor

public final val incoming: org.jetbrains.kotlin.cfg.variable.VariableInitReadOnlyControlFlowInfo defined in org.jetbrains.kotlin.cfg.pseudocodeTraverser.Edges[PropertyDescriptorImpl@c40cc26]
T: VariableInitReadOnlyControlFlowInfo

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<org.jetbrains.kotlin.psi.KtExpression, kotlin.Pair<org.jetbrains.kotlin.descriptors.VariableDescriptor, org.jetbrains.kotlin.cfg.ControlFlowInformationProvider.VariableUseContext>> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@12e937d1]
T: MutableEntry<KtExpression, Pair<VariableDescriptor, VariableUseContext>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: KtExpression

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: Pair<VariableDescriptor, VariableUseContext>

public final operator fun component1(): org.jetbrains.kotlin.descriptors.VariableDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@70b91df]
A: VariableDescriptor

public final operator fun component2(): org.jetbrains.kotlin.cfg.ControlFlowInformationProvider.VariableUseContext defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1efaf358]
B: VariableUseContext

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtExpression defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1ef0cb1a]
T: KtExpression

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtExpression defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7a243550]
T: KtExpression

public final val incoming: org.jetbrains.kotlin.cfg.variable.VariableInitReadOnlyControlFlowInfo defined in org.jetbrains.kotlin.cfg.pseudocodeTraverser.Edges[PropertyDescriptorImpl@135bed8]
T: VariableInitReadOnlyControlFlowInfo

public final val outgoing: org.jetbrains.kotlin.cfg.variable.VariableInitReadOnlyControlFlowInfo defined in org.jetbrains.kotlin.cfg.pseudocodeTraverser.Edges[PropertyDescriptorImpl@63d8bff9]
T: VariableInitReadOnlyControlFlowInfo

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtElement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@e2e0934]
T: KtElement

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<org.jetbrains.kotlin.psi.KtElement, org.jetbrains.kotlin.cfg.ControlFlowInformationProvider.markAndCheckRecursiveTailCalls.KindAndCall> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@d6735c4]
T: MutableEntry<KtElement, KindAndCall>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: KtElement

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: KindAndCall


public abstract operator fun next(): org.jetbrains.kotlin.cfg.pseudocode.instructions.Instruction defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@56d59a54]
T: Instruction

public abstract operator fun next(): org.jetbrains.kotlin.cfg.pseudocode.instructions.Instruction defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@dba122a]
T: Instruction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Call

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Call

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: List<PseudoValue>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: List<PseudoValue>

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: FunctionDescriptor

public abstract fun next(): org.jetbrains.kotlin.psi.ValueArgument defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@554af466]
T: ValueArgument

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: KtElement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: KtElement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Label

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: PseudoValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: PseudoValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7896247b]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtSuperTypeListEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2974ce77]
T: KtSuperTypeListEntry

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@65466fe7]
T: KtDeclaration

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6523db82]
T: KtParameter

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtExpression defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@507821e3]
T: KtExpression

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@594e7e9f]
T: KtDeclaration

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

public abstract operator fun invoke(p1: org.jetbrains.kotlin.cfg.ControlFlowBuilder): kotlin.Unit defined in kotlin.Function1[FunctionInvokeDescriptor@1d8809ea]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.cfg.pseudocode.instructions.Instruction defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@c590cad]
T: Instruction


public abstract operator fun next(): org.jetbrains.kotlin.cfg.pseudocode.instructions.Instruction defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2a571402]
T: Instruction


public abstract val value: kotlin.Boolean defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@45cc99e]
V: Boolean

public abstract operator fun next(): org.jetbrains.kotlin.cfg.pseudocode.instructions.Instruction defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@42b5fded]
T: Instruction

public final val incoming: I defined in org.jetbrains.kotlin.cfg.pseudocodeTraverser.Edges[PropertyDescriptorImpl@232a9bba]
T: I


public final val outgoing: I defined in org.jetbrains.kotlin.cfg.pseudocodeTraverser.Edges[PropertyDescriptorImpl@77143277]
T: I


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Edges<I>

public abstract operator fun next(): org.jetbrains.kotlin.cfg.pseudocode.instructions.Instruction defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@507f261f]
T: Instruction

public final val outgoing: I defined in org.jetbrains.kotlin.cfg.pseudocodeTraverser.Edges[PropertyDescriptorImpl@7832a05a]
T: I




@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: TraverseInstructionResult

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: TraverseInstructionResult

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: TextRange

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: TextRange

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7896247b]
R: List<TextRange>

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7896247b]
R: List<TextRange>

public abstract operator fun get(index: kotlin.Int): com.intellij.psi.PsiElement defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4be28eed]
E: PsiElement

public abstract operator fun next(): kotlin.collections.IndexedValue<com.intellij.psi.PsiElement> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@42cf3a16]
T: IndexedValue<PsiElement>

public final operator fun component2(): com.intellij.psi.PsiElement defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@a37e000]
T: PsiElement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract fun next(): org.jetbrains.kotlin.cfg.pseudocode.ControlFlowInstructionsGenerator.TryFinallyBlockInfo defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@72ae1702]
T: TryFinallyBlockInfo

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: String

public abstract fun next(): org.jetbrains.kotlin.cfg.pseudocode.instructions.Instruction defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@68b8d868]
T: Instruction

public abstract operator fun next(): org.jetbrains.kotlin.cfg.pseudocode.PseudoValue defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1b05587d]
T: PseudoValue

public abstract operator fun next(): org.jetbrains.kotlin.cfg.pseudocode.PseudoValue defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2ccc0812]
T: PseudoValue

public abstract operator fun next(): org.jetbrains.kotlin.cfg.pseudocode.PseudoValue defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@25d81db4]
T: PseudoValue

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@f8b007f]
V: MutableList<Instruction>

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.cfg.pseudocode.instructions.Instruction> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5a621866]
T: IndexedValue<Instruction>

public final operator fun component2(): org.jetbrains.kotlin.cfg.pseudocode.instructions.Instruction defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@41aff16c]
T: Instruction

public abstract fun next(): org.jetbrains.kotlin.cfg.pseudocode.instructions.Instruction defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@2e10d719]
T: Instruction

public abstract operator fun next(): org.jetbrains.kotlin.cfg.Label defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1e3fe6c1]
T: Label

public abstract fun next(): org.jetbrains.kotlin.cfg.pseudocode.instructions.Instruction defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@60733add]
T: Instruction

public abstract operator fun next(): org.jetbrains.kotlin.cfg.pseudocode.instructions.Instruction defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@37669701]
T: Instruction

public open fun get(index: kotlin.Int): org.jetbrains.kotlin.cfg.pseudocode.instructions.Instruction defined in java.util.ArrayList[JavaMethodDescriptor@68278e1a]
E: Instruction

public abstract fun next(): org.jetbrains.kotlin.cfg.pseudocode.PseudocodeLabel defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@624b6af6]
T: PseudocodeLabel

public abstract fun next(): org.jetbrains.kotlin.cfg.pseudocode.PseudocodeLabel defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@575f053c]
T: PseudocodeLabel

public open fun get(index: kotlin.Int): org.jetbrains.kotlin.cfg.pseudocode.instructions.Instruction defined in java.util.ArrayList[JavaMethodDescriptor@68278e1a]
E: Instruction

public open fun get(index: kotlin.Int): org.jetbrains.kotlin.cfg.pseudocode.instructions.Instruction defined in java.util.ArrayList[JavaMethodDescriptor@68278e1a]
E: Instruction

public abstract operator fun next(): org.jetbrains.kotlin.cfg.Label defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@28360b04]
T: Label

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.cfg.pseudocode.instructions.Instruction defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@51d28c6b]
E: Instruction

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7040e082]
T: TypePredicate

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7040e082]
T: TypePredicate

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: KotlinType

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.FunctionDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@34e4fd1c]
T: [@kotlin.internal.NoInfer] FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

public abstract operator fun next(): org.jetbrains.kotlin.cfg.pseudocode.instructions.special.LocalFunctionDeclarationInstruction defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7cebab3b]
T: LocalFunctionDeclarationInstruction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@f8b007f]
V: MutableCollection<VariableDescriptor>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@f8b007f]
V: VariablesForDeclaration

public abstract operator fun next(): org.jetbrains.kotlin.cfg.pseudocode.instructions.special.LocalFunctionDeclarationInstruction defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@73a3857e]
T: LocalFunctionDeclarationInstruction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

public abstract operator fun next(): org.jetbrains.kotlin.cfg.pseudocode.instructions.Instruction defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7f236ab9]
T: Instruction

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: Instruction

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: Edges<VariableInitControlFlowInfo>

public final val incoming: org.jetbrains.kotlin.cfg.variable.PseudocodeVariablesData.ReadOnlyInitVariableControlFlowInfoImpl defined in org.jetbrains.kotlin.cfg.pseudocodeTraverser.Edges[PropertyDescriptorImpl@44c0c4a8]
T: ReadOnlyInitVariableControlFlowInfoImpl

public final val incoming: org.jetbrains.kotlin.cfg.variable.VariableInitControlFlowInfo defined in org.jetbrains.kotlin.cfg.pseudocodeTraverser.Edges[PropertyDescriptorImpl@6c5175c]
T: VariableInitControlFlowInfo

public final val outgoing: org.jetbrains.kotlin.cfg.variable.PseudocodeVariablesData.ReadOnlyInitVariableControlFlowInfoImpl defined in org.jetbrains.kotlin.cfg.pseudocodeTraverser.Edges[PropertyDescriptorImpl@62e68d12]
T: ReadOnlyInitVariableControlFlowInfoImpl

public final val outgoing: org.jetbrains.kotlin.cfg.variable.VariableInitControlFlowInfo defined in org.jetbrains.kotlin.cfg.pseudocodeTraverser.Edges[PropertyDescriptorImpl@3ccc0e7f]
T: VariableInitControlFlowInfo

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73181360]
R: Map<VariableDescriptor, VariableControlFlowState>

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73181360]
R: VariableInitControlFlowInfo

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73181360]
R: Map<VariableDescriptor, VariableUseState>

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@17234fbe]
T: VariableInitControlFlowInfo

public abstract operator fun next(): org.jetbrains.kotlin.cfg.variable.VariableInitControlFlowInfo defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@45fae8af]
T: VariableInitControlFlowInfo

public abstract operator fun next(): org.jetbrains.kotlin.cfg.variable.VariableInitControlFlowInfo defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7fc87cff]
T: VariableInitControlFlowInfo

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73181360]
R: VariableInitControlFlowInfo

public inline fun <T> kotlin.Array<out T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@31d75759]
T: InferenceCompatibility

public final val first: org.jetbrains.kotlin.platform.TargetPlatform defined in kotlin.Pair[DeserializedPropertyDescriptor@74c650fa]
A: TargetPlatform

public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.platform.TargetPlatform, org.jetbrains.kotlin.resolve.BindingContext> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4750c548]
T: Pair<TargetPlatform, BindingContext>

public final operator fun component1(): org.jetbrains.kotlin.platform.TargetPlatform defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6d39063e]
A: TargetPlatform

public final operator fun component2(): org.jetbrains.kotlin.resolve.BindingContext defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@9cccff1]
B: BindingContext

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@17234fbe]
T: SimplePlatform

public abstract operator fun next(): kotlin.Pair<(org.jetbrains.kotlin.util.slicedMap.WritableSlice<out (org.jetbrains.kotlin.psi.KtExpression..org.jetbrains.kotlin.psi.KtExpression?), out (kotlin.Any..kotlin.Any?)>..org.jetbrains.kotlin.util.slicedMap.WritableSlice<out (org.jetbrains.kotlin.psi.KtExpression..org.jetbrains.kotlin.psi.KtExpression?), out (kotlin.Any..kotlin.Any?)>?), {DebugInfoDiagnosticFactory & DiagnosticFactoryWithPsiElement<(com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?), out (org.jetbrains.kotlin.diagnostics.AbstractDiagnostic<(com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?)>..org.jetbrains.kotlin.diagnostics.AbstractDiagnostic<(com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?)>?)>}> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4930e75b]
T: Pair<(org.jetbrains.kotlin.util.slicedMap.WritableSlice<out (org.jetbrains.kotlin.psi.KtExpression..org.jetbrains.kotlin.psi.KtExpression?), out (kotlin.Any..kotlin.Any?)>..org.jetbrains.kotlin.util.slicedMap.WritableSlice<out (org.jetbrains.kotlin.psi.KtExpression..org.jetbrains.kotlin.psi.KtExpression?), out (kotlin.Any..kotlin.Any?)>?), {DebugInfoDiagnosticFactory & DiagnosticFactoryWithPsiElement<(com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?), out (org.jetbrains.kotlin.diagnostics.AbstractDiagnostic<(com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?)>..org.jetbrains.kotlin.diagnostics.AbstractDiagnostic<(com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?)>?)>}>

public final operator fun component2(): {DebugInfoDiagnosticFactory & DiagnosticFactoryWithPsiElement<(com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?), out (org.jetbrains.kotlin.diagnostics.AbstractDiagnostic<(com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?)>..org.jetbrains.kotlin.diagnostics.AbstractDiagnostic<(com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?)>?)>} defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@16385e2a]
B: {DebugInfoDiagnosticFactory & DiagnosticFactoryWithPsiElement<(com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?), out (org.jetbrains.kotlin.diagnostics.AbstractDiagnostic<(com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?)>..org.jetbrains.kotlin.diagnostics.AbstractDiagnostic<(com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?)>?)>}

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<out (org.jetbrains.kotlin.psi.KtExpression..org.jetbrains.kotlin.psi.KtExpression?), out (kotlin.Any..kotlin.Any?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@3edc452]
T: MutableEntry<out (org.jetbrains.kotlin.psi.KtExpression..org.jetbrains.kotlin.psi.KtExpression?), out (kotlin.Any..kotlin.Any?)>

public abstract operator fun next(): org.jetbrains.kotlin.checkers.diagnostics.TextDiagnostic defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@24a04c73]
T: TextDiagnostic

public abstract val value: org.jetbrains.kotlin.checkers.diagnostics.TextDiagnostic defined in kotlin.collections.MutableMap.MutableEntry[DeserializedPropertyDescriptor@3357c02d]
V: TextDiagnostic

public abstract val value: org.jetbrains.kotlin.checkers.diagnostics.TextDiagnostic defined in kotlin.collections.MutableMap.MutableEntry[DeserializedPropertyDescriptor@3357c02d]
V: TextDiagnostic

public abstract val key: org.jetbrains.kotlin.checkers.diagnostics.AbstractTestDiagnostic defined in kotlin.collections.MutableMap.MutableEntry[DeserializedPropertyDescriptor@57e79114]
K: AbstractTestDiagnostic

public abstract val value: org.jetbrains.kotlin.checkers.diagnostics.TextDiagnostic defined in kotlin.collections.MutableMap.MutableEntry[DeserializedPropertyDescriptor@2c658085]
V: TextDiagnostic

public abstract fun next(): org.jetbrains.kotlin.checkers.diagnostics.AbstractTestDiagnostic defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@14101b93]
T: AbstractTestDiagnostic

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@7f2d7fd7]
E: String

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7040e082]
T: ActualDiagnostic

public abstract operator fun next(): org.jetbrains.kotlin.checkers.diagnostics.ActualDiagnostic defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@564b928e]
T: ActualDiagnostic

public abstract operator fun next(): org.jetbrains.kotlin.checkers.diagnostics.AbstractTestDiagnostic defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@21cd4639]
T: AbstractTestDiagnostic

public abstract operator fun next(): org.jetbrains.kotlin.checkers.diagnostics.TextDiagnostic defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6c5a022d]
T: TextDiagnostic


public abstract fun next(): org.jetbrains.kotlin.checkers.AbstractDiagnosticDescriptor defined in kotlin.collections.ListIterator[DeserializedSimpleFunctionDescriptor@ed5bf2b]
T: AbstractDiagnosticDescriptor

public abstract fun next(): org.jetbrains.kotlin.checkers.AbstractDiagnosticDescriptor defined in kotlin.collections.ListIterator[DeserializedSimpleFunctionDescriptor@ed5bf2b]
T: AbstractDiagnosticDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.checkers.diagnostics.AbstractTestDiagnostic defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@492dd712]
T: AbstractTestDiagnostic

public abstract operator fun next(): org.jetbrains.kotlin.checkers.diagnostics.ActualDiagnostic defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5a5c6412]
T: ActualDiagnostic

public abstract operator fun next(): org.jetbrains.kotlin.checkers.diagnostics.PositionalTextDiagnostic defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@14c6b0e]
T: PositionalTextDiagnostic

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.contracts.model.ESValue, kotlin.collections.Set<D>> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2e691f7d]
T: Entry<ESValue, Set<D>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: ESValue

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: Set<D>


public inline fun <S, T : S> kotlin.collections.Iterable<T>.reduce(operation: (acc: S, T) -> S): S defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2595c2f9]
S: BooleanExpression

public inline fun <S, T : S> kotlin.collections.Iterable<T>.reduce(operation: (acc: S, T) -> S): S defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2595c2f9]
S: BooleanExpression

public abstract fun next(): org.jetbrains.kotlin.contracts.model.ESEffect defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@5b7945b7]
T: ESEffect

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.psi.KtVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.psi.KtElement[DeserializedSimpleFunctionDescriptor@2dc11b88]
R: Computation

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4ed6616]
T: Computation

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

public abstract fun <R : (kotlin.Any..kotlin.Any?), D : (kotlin.Any..kotlin.Any?)> accept(@org.jetbrains.annotations.NotNull visitor: org.jetbrains.kotlin.psi.KtVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.psi.KtExpression[JavaMethodDescriptor@435b0264]
R: Computation

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ESLambda

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ESLambda

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Computation

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Computation

public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@32017891]
T: Boolean

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

val operationConstructor: (org.jetbrains.kotlin.contracts.description.BooleanExpression, org.jetbrains.kotlin.contracts.description.BooleanExpression) -> org.jetbrains.kotlin.contracts.description.BooleanExpression defined in org.jetbrains.kotlin.contracts.parsing.PsiConditionParser.visitBinaryExpression[LocalVariableDescriptor@4c801846] +++|+++
R: BooleanExpression

public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.contracts.description.EffectDeclaration?, org.jetbrains.kotlin.psi.KtExpression> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7b88ed3e]
T: Pair<EffectDeclaration?, KtExpression>

public final operator fun component2(): org.jetbrains.kotlin.psi.KtExpression defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@149fdbd2]
B: KtExpression

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

public fun <T> kotlin.sequences.Sequence<T>.first(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@2806159]
T: DeclarationDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@145ee490]
T: AnnotationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.lexer.KtModifierKeywordToken defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@49ebbc9a]
T: KtModifierKeywordToken

public final val <E : (com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?)> org.jetbrains.kotlin.diagnostics.ParametrizedDiagnostic<E>.psiElement: E[MyPropertyDescriptor@4122dfb]
E: E

public final operator fun component1(): org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<*> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@608022e8]
A: ResolvedCall<*>

public final operator fun component2(): (org.jetbrains.kotlin.descriptors.CallableDescriptor) -> org.jetbrains.kotlin.types.KotlinType? defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@238015e5]
B: Function1<CallableDescriptor, KotlinType?>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public final operator fun component1(): org.jetbrains.kotlin.config.LanguageFeature defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@79eeff8d]
A: LanguageFeature

public final operator fun component2(): org.jetbrains.kotlin.config.LanguageVersionSettings defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6e29a139]
B: LanguageVersionSettings

public abstract operator fun next(): () -> kotlin.Unit defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@43f748ba]
T: Function0<Unit>

val element: () -> kotlin.Unit defined in org.jetbrains.kotlin.diagnostics.rendering.MultiplatformDiagnosticRenderingMode.renderList[LocalVariableDescriptor@ce3d89a] +++|+++
R: Unit

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.resolve.multiplatform.ExpectedActualResolver.Compatibility.Incompatible, kotlin.collections.Collection<org.jetbrains.kotlin.descriptors.MemberDescriptor>> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@52a55a01]
T: Entry<Incompatible, Collection<MemberDescriptor>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: Incompatible

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: Collection<MemberDescriptor>

public abstract operator fun get(index: kotlin.Int): kotlin.Pair<org.jetbrains.kotlin.descriptors.MemberDescriptor, kotlin.collections.Map<org.jetbrains.kotlin.resolve.multiplatform.ExpectedActualResolver.Compatibility.Incompatible, kotlin.collections.Collection<org.jetbrains.kotlin.descriptors.MemberDescriptor>>> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2bc322d2]
E: Pair<MemberDescriptor, Map<Incompatible, Collection<MemberDescriptor>>>

public final operator fun component1(): org.jetbrains.kotlin.descriptors.MemberDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@8f89de9]
A: MemberDescriptor

public final operator fun component2(): kotlin.collections.Map<org.jetbrains.kotlin.resolve.multiplatform.ExpectedActualResolver.Compatibility.Incompatible, kotlin.collections.Collection<org.jetbrains.kotlin.descriptors.MemberDescriptor>> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6489b2d9]
B: Map<Incompatible, Collection<MemberDescriptor>>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d38e21]
T: TabledDescriptorRenderer

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: TypeProjectionImpl

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.inference.ConstraintError defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6546d0c5]
T: ConstraintError

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.inference.TypeVariable defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@62606109]
T: TypeVariable

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d38e21]
T: MutableSet<String>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@f8b007f]
V: LinkedHashSet<TypeParameterDescriptor>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d38e21]
T: LinkedHashSet<FqNameUnsafe>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

public final val <E : (com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?), A : (kotlin.Any..kotlin.Any?)> org.jetbrains.kotlin.diagnostics.DiagnosticWithParameters1<E, A>.a: A[MyPropertyDescriptor@7ac6ffa6]
A: A

public final val <E : (com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?), A : (kotlin.Any..kotlin.Any?)> org.jetbrains.kotlin.diagnostics.DiagnosticWithParameters1<E, A>.a: A[MyPropertyDescriptor@7ac6ffa6]
A: A

public final val <E : (com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?), A : (kotlin.Any..kotlin.Any?), B : (kotlin.Any..kotlin.Any?)> org.jetbrains.kotlin.diagnostics.DiagnosticWithParameters2<E, A, B>.a: A[MyPropertyDescriptor@52ce38bc]
A: A

public final val <E : (com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?), A : (kotlin.Any..kotlin.Any?), B : (kotlin.Any..kotlin.Any?)> org.jetbrains.kotlin.diagnostics.DiagnosticWithParameters2<E, A, B>.b: B[MyPropertyDescriptor@130cf6a1]
B: B

public final val <E : (com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?), A : (kotlin.Any..kotlin.Any?), B : (kotlin.Any..kotlin.Any?)> org.jetbrains.kotlin.diagnostics.DiagnosticWithParameters2<E, A, B>.a: A[MyPropertyDescriptor@52ce38bc]
A: A

public final val <E : (com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?), A : (kotlin.Any..kotlin.Any?), B : (kotlin.Any..kotlin.Any?)> org.jetbrains.kotlin.diagnostics.DiagnosticWithParameters2<E, A, B>.b: B[MyPropertyDescriptor@130cf6a1]
B: B

public final val <E : (com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?), A : (kotlin.Any..kotlin.Any?), B : (kotlin.Any..kotlin.Any?), C : (kotlin.Any..kotlin.Any?)> org.jetbrains.kotlin.diagnostics.DiagnosticWithParameters3<E, A, B, C>.a: A[MyPropertyDescriptor@5652eaf4]
A: A

public final val <E : (com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?), A : (kotlin.Any..kotlin.Any?), B : (kotlin.Any..kotlin.Any?), C : (kotlin.Any..kotlin.Any?)> org.jetbrains.kotlin.diagnostics.DiagnosticWithParameters3<E, A, B, C>.b: B[MyPropertyDescriptor@79464f48]
B: B

public final val <E : (com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?), A : (kotlin.Any..kotlin.Any?), B : (kotlin.Any..kotlin.Any?), C : (kotlin.Any..kotlin.Any?)> org.jetbrains.kotlin.diagnostics.DiagnosticWithParameters3<E, A, B, C>.c: C[MyPropertyDescriptor@45d0fdf2]
C: C

public final val <E : (com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?), A : (kotlin.Any..kotlin.Any?), B : (kotlin.Any..kotlin.Any?), C : (kotlin.Any..kotlin.Any?)> org.jetbrains.kotlin.diagnostics.DiagnosticWithParameters3<E, A, B, C>.a: A[MyPropertyDescriptor@5652eaf4]
A: A

public final val <E : (com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?), A : (kotlin.Any..kotlin.Any?), B : (kotlin.Any..kotlin.Any?), C : (kotlin.Any..kotlin.Any?)> org.jetbrains.kotlin.diagnostics.DiagnosticWithParameters3<E, A, B, C>.b: B[MyPropertyDescriptor@79464f48]
B: B

public final val <E : (com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?), A : (kotlin.Any..kotlin.Any?), B : (kotlin.Any..kotlin.Any?), C : (kotlin.Any..kotlin.Any?)> org.jetbrains.kotlin.diagnostics.DiagnosticWithParameters3<E, A, B, C>.c: C[MyPropertyDescriptor@45d0fdf2]
C: C

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@54d28fd9]
T: AnnotationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.extensions.StorageComponentContainerContributor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3bb21d3a]
T: StorageComponentContainerContributor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@32755fc8]
E: KotlinType

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@68375020]
E: TypeProjection

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@68375020]
E: TypeProjection

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.PackageFragmentDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7a9c612d]
T: PackageFragmentDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.name.FqName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@449dd4f0]
T: FqName

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.psi.KtVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.psi.KtElement[DeserializedSimpleFunctionDescriptor@2dc11b88]
R: String


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public final val scopeForClassHeaderResolution: () -> org.jetbrains.kotlin.resolve.scopes.LexicalScope defined in org.jetbrains.kotlin.resolve.lazy.descriptors.ClassResolutionScopesSupport[PropertyDescriptorImpl@2280137d] +++|+++
R: LexicalScope

public final val scopeForConstructorHeaderResolution: () -> org.jetbrains.kotlin.resolve.scopes.LexicalScope defined in org.jetbrains.kotlin.resolve.lazy.descriptors.ClassResolutionScopesSupport[PropertyDescriptorImpl@78f7e707] +++|+++
R: LexicalScope

public final val scopeForCompanionObjectHeaderResolution: () -> org.jetbrains.kotlin.resolve.scopes.LexicalScope defined in org.jetbrains.kotlin.resolve.lazy.descriptors.ClassResolutionScopesSupport[PropertyDescriptorImpl@45cae3f9] +++|+++
R: LexicalScope

public final val scopeForMemberDeclarationResolution: () -> org.jetbrains.kotlin.resolve.scopes.LexicalScope defined in org.jetbrains.kotlin.resolve.lazy.descriptors.ClassResolutionScopesSupport[PropertyDescriptorImpl@707267b] +++|+++
R: LexicalScope

public final val scopeForStaticMemberDeclarationResolution: () -> org.jetbrains.kotlin.resolve.scopes.LexicalScope defined in org.jetbrains.kotlin.resolve.lazy.descriptors.ClassResolutionScopesSupport[PropertyDescriptorImpl@41e931e] +++|+++
R: LexicalScope

@org.jetbrains.annotations.NotNull public open fun <K : (kotlin.Any..kotlin.Any?), V : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull bindingContext: org.jetbrains.kotlin.resolve.BindingContext, @org.jetbrains.annotations.NotNull slice: org.jetbrains.kotlin.util.slicedMap.ReadOnlySlice<(K..K?), (V..V?)>, @org.jetbrains.annotations.NotNull key: K): V defined in org.jetbrains.kotlin.resolve.BindingContextUtils[JavaMethodDescriptor@2a33bc3]
V: ClassDescriptor


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtTypeReference defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2c306563]
T: KtTypeReference

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtAnnotationEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7e942652]
T: KtAnnotationEntry

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtAnnotationEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6d3919a1]
T: KtAnnotationEntry

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@f8b007f]
V: MutableList<AnnotationUseSiteTarget?>

public abstract operator fun next(): org.jetbrains.kotlin.resolve.AdditionalAnnotationChecker defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1e354d8e]
T: AdditionalAnnotationChecker

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: TargetList

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: TargetList


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtAnnotationEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@79129ae]
T: KtAnnotationEntry

public abstract operator fun next(): com.intellij.psi.PsiElement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@20a33246]
T: PsiElement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

public abstract operator fun next(): com.intellij.psi.PsiElement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@67772b31]
T: PsiElement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: List<DeclarationDescriptor>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: List<DeclarationDescriptor>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.results.OverloadResolutionResults<D>.resultingDescriptor: D[MyPropertyDescriptor@756a55b7]
D: FunctionDescriptor

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5ad21df1]
T: BindingContext

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73181360]
R: Sequence<Diagnostic>

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3bce11]
T: ValueParameterDescriptor

public abstract operator fun next(): kotlin.collections.Map.Entry<(org.jetbrains.kotlin.psi.KtFile..org.jetbrains.kotlin.psi.KtFile?), org.jetbrains.kotlin.resolve.scopes.LexicalScope> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@344624d7]
T: Entry<(org.jetbrains.kotlin.psi.KtFile..org.jetbrains.kotlin.psi.KtFile?), LexicalScope>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: LexicalScope

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@726d9ec5]
T: DeclarationDescriptor

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.name.FqName..org.jetbrains.kotlin.name.FqName?), (kotlin.collections.MutableCollection<(org.jetbrains.kotlin.psi.KtElement..org.jetbrains.kotlin.psi.KtElement?)>..kotlin.collections.Collection<(org.jetbrains.kotlin.psi.KtElement..org.jetbrains.kotlin.psi.KtElement?)>?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@284ab48a]
T: MutableEntry<(org.jetbrains.kotlin.name.FqName..org.jetbrains.kotlin.name.FqName?), (kotlin.collections.MutableCollection<(org.jetbrains.kotlin.psi.KtElement..org.jetbrains.kotlin.psi.KtElement?)>..kotlin.collections.Collection<(org.jetbrains.kotlin.psi.KtElement..org.jetbrains.kotlin.psi.KtElement?)>?)>

public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.descriptors.DeclarationDescriptor> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@68d25a6]
A: List<DeclarationDescriptor>

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.descriptors.DeclarationDescriptor> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1d7f66ce]
B: List<DeclarationDescriptor>

public abstract operator fun next(): kotlin.collections.List<org.jetbrains.kotlin.descriptors.DeclarationDescriptor> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@14bfd08c]
T: List<DeclarationDescriptor>

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.psi.KtClassOrObject..org.jetbrains.kotlin.psi.KtClassOrObject?), (org.jetbrains.kotlin.descriptors.ClassDescriptorWithResolutionScopes..org.jetbrains.kotlin.descriptors.ClassDescriptorWithResolutionScopes?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@67cbff82]
T: MutableEntry<(org.jetbrains.kotlin.psi.KtClassOrObject..org.jetbrains.kotlin.psi.KtClassOrObject?), (org.jetbrains.kotlin.descriptors.ClassDescriptorWithResolutionScopes..org.jetbrains.kotlin.descriptors.ClassDescriptorWithResolutionScopes?)>

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.psi.KtNamedFunction..org.jetbrains.kotlin.psi.KtNamedFunction?), (org.jetbrains.kotlin.descriptors.SimpleFunctionDescriptor..org.jetbrains.kotlin.descriptors.SimpleFunctionDescriptor?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@5b9aede5]
T: MutableEntry<(org.jetbrains.kotlin.psi.KtNamedFunction..org.jetbrains.kotlin.psi.KtNamedFunction?), (org.jetbrains.kotlin.descriptors.SimpleFunctionDescriptor..org.jetbrains.kotlin.descriptors.SimpleFunctionDescriptor?)>

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.psi.KtProperty..org.jetbrains.kotlin.psi.KtProperty?), (org.jetbrains.kotlin.descriptors.PropertyDescriptor..org.jetbrains.kotlin.descriptors.PropertyDescriptor?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@694d5cbb]
T: MutableEntry<(org.jetbrains.kotlin.psi.KtProperty..org.jetbrains.kotlin.psi.KtProperty?), (org.jetbrains.kotlin.descriptors.PropertyDescriptor..org.jetbrains.kotlin.descriptors.PropertyDescriptor?)>

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDestructuringDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@18ace15a]
T: [@kotlin.internal.NoInfer] KtDestructuringDeclaration

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.psi.KtSecondaryConstructor..org.jetbrains.kotlin.psi.KtSecondaryConstructor?), (org.jetbrains.kotlin.descriptors.ClassConstructorDescriptor..org.jetbrains.kotlin.descriptors.ClassConstructorDescriptor?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@b4a6e43]
T: MutableEntry<(org.jetbrains.kotlin.psi.KtSecondaryConstructor..org.jetbrains.kotlin.psi.KtSecondaryConstructor?), (org.jetbrains.kotlin.descriptors.ClassConstructorDescriptor..org.jetbrains.kotlin.descriptors.ClassConstructorDescriptor?)>

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.psi.KtTypeAlias..org.jetbrains.kotlin.psi.KtTypeAlias?), (org.jetbrains.kotlin.descriptors.TypeAliasDescriptor..org.jetbrains.kotlin.descriptors.TypeAliasDescriptor?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@10b44b5]
T: MutableEntry<(org.jetbrains.kotlin.psi.KtTypeAlias..org.jetbrains.kotlin.psi.KtTypeAlias?), (org.jetbrains.kotlin.descriptors.TypeAliasDescriptor..org.jetbrains.kotlin.descriptors.TypeAliasDescriptor?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtSuperTypeListEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1afdde08]
T: KtSuperTypeListEntry

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract fun next(): org.jetbrains.kotlin.resolve.DescriptorResolver.UpperBoundCheckRequest defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@1dd38e3f]
T: UpperBoundCheckRequest

public final val first: kotlin.collections.List<org.jetbrains.kotlin.types.TypeConstructor> defined in kotlin.Pair[DeserializedPropertyDescriptor@42b28ad1]
A: List<TypeConstructor>

public final val second: kotlin.collections.List<org.jetbrains.kotlin.types.TypeConstructor> defined in kotlin.Pair[DeserializedPropertyDescriptor@362d57cb]
B: List<TypeConstructor>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Pair<Set<TypeConstructor>, Set<TypeConstructor>>

public final operator fun component1(): kotlin.collections.Set<org.jetbrains.kotlin.types.TypeConstructor> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@52aff327]
A: Set<TypeConstructor>

public final operator fun component2(): kotlin.collections.Set<org.jetbrains.kotlin.types.TypeConstructor> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5d48b47e]
B: Set<TypeConstructor>

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7040e082]
T: TypeConstructor

public final val first: org.jetbrains.kotlin.psi.KtTypeReference defined in kotlin.Pair[DeserializedPropertyDescriptor@67922123]
A: KtTypeReference

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.descriptors.TypeParameterDescriptor..org.jetbrains.kotlin.descriptors.TypeParameterDescriptor?), (kotlin.collections.MutableCollection<(org.jetbrains.kotlin.types.TypeProjection..org.jetbrains.kotlin.types.TypeProjection?)>..kotlin.collections.Collection<(org.jetbrains.kotlin.types.TypeProjection..org.jetbrains.kotlin.types.TypeProjection?)>?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@64d06369]
T: MutableEntry<(org.jetbrains.kotlin.descriptors.TypeParameterDescriptor..org.jetbrains.kotlin.descriptors.TypeParameterDescriptor?), (kotlin.collections.MutableCollection<(org.jetbrains.kotlin.types.TypeProjection..org.jetbrains.kotlin.types.TypeProjection?)>..kotlin.collections.Collection<(org.jetbrains.kotlin.types.TypeProjection..org.jetbrains.kotlin.types.TypeProjection?)>?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@77d14f1c]
T: KtDeclaration

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@84970e6]
T: KtParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract operator fun next(): com.intellij.psi.PsiElement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1124af4d]
T: PsiElement

public abstract fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@38c2339d]
T: KotlinType

public abstract fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@3ba2b4c1]
T: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.tower.PSIPartialCallInfo defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@43f24b18]
T: PSIPartialCallInfo

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: FunctionDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: FunctionDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.results.OverloadResolutionResults<D>.resultingDescriptor: D[MyPropertyDescriptor@756a55b7]
D: FunctionDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.results.OverloadResolutionResults<D>.resultingDescriptor: D[MyPropertyDescriptor@756a55b7]
D: FunctionDescriptor

public final val first: org.jetbrains.kotlin.psi.Call defined in kotlin.Pair[DeserializedPropertyDescriptor@72712ca]
A: Call

public final val second: org.jetbrains.kotlin.resolve.calls.results.OverloadResolutionResults<org.jetbrains.kotlin.descriptors.FunctionDescriptor> defined in kotlin.Pair[DeserializedPropertyDescriptor@562eb3d1]
B: OverloadResolutionResults<FunctionDescriptor>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@f69d202]
R: List<KtExpression>

public final operator fun component1(): org.jetbrains.kotlin.psi.Call defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6e83556c]
A: Call

public final operator fun component2(): org.jetbrains.kotlin.resolve.calls.results.OverloadResolutionResults<org.jetbrains.kotlin.descriptors.FunctionDescriptor> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@14d056c5]
B: OverloadResolutionResults<FunctionDescriptor>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.results.OverloadResolutionResults<D>.resultingDescriptor: D[MyPropertyDescriptor@756a55b7]
D: FunctionDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.results.OverloadResolutionResults<D>.resultingDescriptor: D[MyPropertyDescriptor@756a55b7]
D: FunctionDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.results.OverloadResolutionResults<D>.resultingDescriptor: D[MyPropertyDescriptor@756a55b7]
D: FunctionDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.results.OverloadResolutionResults<D>.resultingDescriptor: D[MyPropertyDescriptor@756a55b7]
D: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: TypeProjectionImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.psi.KtSuperTypeListEntry defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3ac2a9a8]
E: KtSuperTypeListEntry

public abstract operator fun next(): org.jetbrains.kotlin.resolve.FilePreprocessorExtension defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@25d60084]
T: FilePreprocessorExtension

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@f8b007f]
V: MutableList<TypeParameterDescriptor>

public abstract operator fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@31cc6ab4]
T: KotlinType


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: KotlinType

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d38e21]
T: MutableMap<UserDataKey<*>, Any>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@150e97f1]
T: ValueParameterDescriptor

public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@32017891]
T: Boolean

@kotlin.jvm.JvmStatic public final fun <T, E : kotlin.Throwable> forceAllowTreeLoading(psiFile: com.intellij.psi.PsiFile, computable: com.intellij.openapi.util.ThrowableComputable<out T, E>): T defined in org.jetbrains.kotlin.util.AstLoadingFilter[DeserializedSimpleFunctionDescriptor@3babebbd]
T: KotlinType

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@653f756f]
T: ValueParameterDescriptor

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@653f756f]
T: KotlinType

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.psi.KtParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@7e47ef5f]
E: KtParameter

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@236e2807]
E: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7896247b]
R: Unit

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@17234fbe]
T: [@kotlin.jvm.JvmWildcard] SimpleFunctionDescriptor





public abstract operator fun next(): com.intellij.psi.PsiElement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@16adc3e3]
T: PsiElement

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@752cd8fe]
T: KtDeclaration

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3caee180]
T: KtDeclaration

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3601b579]
T: KtParameter

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtTypeAlias defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@38f94cc4]
T: KtTypeAlias

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtProperty defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6ddf188e]
T: KtProperty

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtNamedFunction defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@59dcabc5]
T: KtNamedFunction

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDestructuringDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5e0f8d6c]
T: KtDestructuringDeclaration

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.lexer.KtModifierKeywordToken defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@36e2ddd6]
T: KtModifierKeywordToken

public abstract operator fun next(): org.jetbrains.kotlin.lexer.KtModifierKeywordToken defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2ed6079b]
T: KtModifierKeywordToken

public abstract operator fun next(): org.jetbrains.kotlin.config.LanguageFeature defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3f76f87a]
T: LanguageFeature

public final val from: org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in org.jetbrains.kotlin.resolve.NonExpansiveInheritanceRestrictionChecker.ExpansiveEdge[PropertyDescriptorImpl@789ee98b]
T: TypeParameterDescriptor

public final val to: org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in org.jetbrains.kotlin.resolve.NonExpansiveInheritanceRestrictionChecker.ExpansiveEdge[PropertyDescriptorImpl@2a8e0eec]
T: TypeParameterDescriptor

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@f8b007f]
V: MutableSet<TypeParameterDescriptor>

public abstract operator fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@70778e07]
T: KotlinType

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1ce0bfef]
T: DeclarationDescriptor


public abstract operator fun next(): org.jetbrains.kotlin.descriptors.FunctionDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3d822354]
T: FunctionDescriptor

public abstract operator fun next(): kotlin.collections.Collection<org.jetbrains.kotlin.descriptors.DeclarationDescriptorNonRoot> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6bac3c1e]
T: Collection<DeclarationDescriptorNonRoot>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@f8b007f]
V: MutableSet<DeclarationDescriptorNonRoot>

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<org.jetbrains.kotlin.descriptors.DeclarationDescriptorNonRoot, kotlin.collections.MutableSet<org.jetbrains.kotlin.descriptors.DeclarationDescriptorNonRoot>> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@7063378d]
T: MutableEntry<DeclarationDescriptorNonRoot, MutableSet<DeclarationDescriptorNonRoot>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: DeclarationDescriptorNonRoot

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: MutableSet<DeclarationDescriptorNonRoot>

public abstract operator fun next(): kotlin.collections.List<org.jetbrains.kotlin.descriptors.DeclarationDescriptorNonRoot> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@434d89e]
T: List<DeclarationDescriptorNonRoot>

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptorNonRoot defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@46dc98ca]
T: DeclarationDescriptorNonRoot

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptorNonRoot defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1d55e49]
T: DeclarationDescriptorNonRoot

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptorNonRoot defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@93135e8]
T: DeclarationDescriptorNonRoot

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.psi.KtClassOrObject..org.jetbrains.kotlin.psi.KtClassOrObject?), (org.jetbrains.kotlin.descriptors.ClassDescriptorWithResolutionScopes..org.jetbrains.kotlin.descriptors.ClassDescriptorWithResolutionScopes?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@5ed39ea7]
T: MutableEntry<(org.jetbrains.kotlin.psi.KtClassOrObject..org.jetbrains.kotlin.psi.KtClassOrObject?), (org.jetbrains.kotlin.descriptors.ClassDescriptorWithResolutionScopes..org.jetbrains.kotlin.descriptors.ClassDescriptorWithResolutionScopes?)>

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7040e082]
T: CallableMemberDescriptor

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7040e082]
T: CallableMemberDescriptor

public abstract fun next(): org.jetbrains.kotlin.descriptors.CallableMemberDescriptor defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@402d818a]
T: CallableMemberDescriptor

public abstract fun next(): org.jetbrains.kotlin.descriptors.CallableMemberDescriptor defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@3da2dc99]
T: CallableMemberDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1473e2e3]
T: ValueParameterDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3badace2]
T: ValueParameterDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6eeaf3fd]
T: ValueParameterDescriptor

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.psi.KtCallableDeclaration..org.jetbrains.kotlin.psi.KtCallableDeclaration?), (org.jetbrains.kotlin.descriptors.CallableMemberDescriptor..org.jetbrains.kotlin.descriptors.CallableMemberDescriptor?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@10e5979c]
T: MutableEntry<(org.jetbrains.kotlin.psi.KtCallableDeclaration..org.jetbrains.kotlin.psi.KtCallableDeclaration?), (org.jetbrains.kotlin.descriptors.CallableMemberDescriptor..org.jetbrains.kotlin.descriptors.CallableMemberDescriptor?)>

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.CallableMemberDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1f82604]
T: CallableMemberDescriptor

public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.descriptors.CallableMemberDescriptor> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@79d5ea92]
A: List<CallableMemberDescriptor>

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.descriptors.CallableMemberDescriptor> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@462d3da3]
B: List<CallableMemberDescriptor>

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5ad21df1]
T: CallableMemberDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.CallableMemberDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5a3eff2]
T: CallableMemberDescriptor

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<org.jetbrains.kotlin.descriptors.CallableMemberDescriptor, kotlin.collections.Set<org.jetbrains.kotlin.descriptors.CallableMemberDescriptor>> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@7f23e822]
T: MutableEntry<CallableMemberDescriptor, Set<CallableMemberDescriptor>>

public abstract val value: kotlin.collections.Set<org.jetbrains.kotlin.descriptors.CallableMemberDescriptor> defined in kotlin.collections.MutableMap.MutableEntry[DeserializedPropertyDescriptor@3cb94eaa]
V: Set<CallableMemberDescriptor>

public abstract operator fun next(): kotlin.collections.Set<org.jetbrains.kotlin.descriptors.CallableMemberDescriptor> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@26b0589c]
T: Set<CallableMemberDescriptor>

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.CallableMemberDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5ce6bf31]
T: CallableMemberDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.CallableMemberDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@120473ee]
T: CallableMemberDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.CallableMemberDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@d8fa405]
T: CallableMemberDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7c7b3a44]
T: KotlinType

public abstract fun next(): org.jetbrains.kotlin.descriptors.CallableMemberDescriptor defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@75512917]
T: CallableMemberDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7896247b]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract operator fun next(): kotlin.collections.IndexedValue<(org.jetbrains.kotlin.psi.KtSimpleNameExpression..org.jetbrains.kotlin.psi.KtSimpleNameExpression?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6db81ecd]
T: IndexedValue<(org.jetbrains.kotlin.psi.KtSimpleNameExpression..org.jetbrains.kotlin.psi.KtSimpleNameExpression?)>

public final val first: kotlin.collections.List<org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.ExpressionQualifierPart> defined in kotlin.Pair[DeserializedPropertyDescriptor@1285336c]
A: List<ExpressionQualifierPart>

public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.ExpressionQualifierPart> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5961c939]
A: List<ExpressionQualifierPart>

public final operator fun component2(): kotlin.Boolean defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@366173fe]
B: Boolean

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@fb9f39]
T: ExpressionQualifierPart

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@653f756f]
T: ExpressionQualifierPart

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ClassDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ClassDescriptor

public final operator fun component2(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@24e41e98]
B: Int

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5ad21df1]
T: QualifierPart


public final operator fun component1(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@524f508b]
A: DeclarationDescriptor

public final operator fun component2(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@adfe98a]
B: Int

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.QualifierPart defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@42f5a6ff]
E: QualifierPart

public final operator fun component2(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7b62f2a]
B: Int

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.QualifierPart defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@31c268d5]
E: QualifierPart

public final val second: kotlin.Int defined in kotlin.Pair[DeserializedPropertyDescriptor@554d65a2]
B: Int

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5ad21df1]
T: KtQualifiedExpression

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtQualifiedExpression defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7f21b242]
T: KtQualifiedExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Int

public inline fun <T, R> kotlin.collections.List<T>.foldRight(initial: R, operation: (T, acc: R) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@40f670ba]
R: PackageViewDescriptor

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7040e082]
T: DeclarationDescriptor

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@653f756f]
T: DeclarationDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract operator fun next(): @kotlin.jvm.JvmWildcard org.jetbrains.kotlin.descriptors.SimpleFunctionDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@f072b54]
T: [@kotlin.jvm.JvmWildcard] SimpleFunctionDescriptor

public abstract operator fun next(): @kotlin.jvm.JvmWildcard org.jetbrains.kotlin.descriptors.PropertyDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@797e4999]
T: [@kotlin.jvm.JvmWildcard] PropertyDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: NoTypeElementBinding<KtCallableDeclaration>


public abstract operator fun next(): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1d0e97bb]
T: TypeProjection

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@f69d202]
R: Boolean

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDeclarationModifierList defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4aa1ddf1]
T: KtDeclarationModifierList

public abstract operator fun next(): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@754f25e]
T: TypeProjection

public abstract operator fun next(): kotlin.collections.List<org.jetbrains.kotlin.descriptors.VariableDescriptor> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@673f468f]
T: List<VariableDescriptor>

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.VariableDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6db259ea]
T: VariableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@653f756f]
T: ExpressionQualifierPart

public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.psi.KtTypeProjection> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@730dae14]
A: List<KtTypeProjection>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6d3afb80]
E: TypeProjection

public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.psi.KtTypeProjection> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@da6a425]
A: List<KtTypeProjection>

public abstract operator fun next(): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@58626a4f]
T: TypeProjection

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.ExpressionQualifierPart defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@63dd34e4]
E: ExpressionQualifierPart

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.ClassifierDescriptorWithTypeParameters defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6546bbc4]
E: ClassifierDescriptorWithTypeParameters

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.ClassifierDescriptorWithTypeParameters defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6546bbc4]
E: ClassifierDescriptorWithTypeParameters

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.ClassifierDescriptorWithTypeParameters defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6546bbc4]
E: ClassifierDescriptorWithTypeParameters

public abstract operator fun next(): org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.ExpressionQualifierPart defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@78a58d2e]
T: ExpressionQualifierPart

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5ad21df1]
T: ExpressionQualifierPart

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d38e21]
T: TypeQualifierResolutionResult

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: UnwrappedType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: UnwrappedType

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtSuperTypeListEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@60366e8d]
T: KtSuperTypeListEntry

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.psi.KtCallableDeclaration..org.jetbrains.kotlin.psi.KtCallableDeclaration?), (org.jetbrains.kotlin.descriptors.CallableMemberDescriptor..org.jetbrains.kotlin.descriptors.CallableMemberDescriptor?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@267216ca]
T: MutableEntry<(org.jetbrains.kotlin.psi.KtCallableDeclaration..org.jetbrains.kotlin.psi.KtCallableDeclaration?), (org.jetbrains.kotlin.descriptors.CallableMemberDescriptor..org.jetbrains.kotlin.descriptors.CallableMemberDescriptor?)>

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.checkers.CallChecker defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4d4d154d]
T: CallChecker

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.MutableResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@2a594688]
D: D

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.MutableResolvedCall<D>.candidateDescriptor: D[MyPropertyDescriptor@3bcd93cb]
D: D

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.MutableResolvedCall<D>.candidateDescriptor: D[MyPropertyDescriptor@3bcd93cb]
D: D

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.MutableResolvedCall<D>.candidateDescriptor: D[MyPropertyDescriptor@3bcd93cb]
D: D

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.MutableResolvedCall<D>.candidateDescriptor: D[MyPropertyDescriptor@3bcd93cb]
D: D

public final operator fun component2(): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@45204469]
B: TypeProjection

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.MutableResolvedCall<D>.candidateDescriptor: D[MyPropertyDescriptor@3bcd93cb]
D: D

val getArgumentMapping: (org.jetbrains.kotlin.psi.ValueArgument) -> org.jetbrains.kotlin.resolve.calls.model.ArgumentMapping defined in org.jetbrains.kotlin.resolve.calls.CallCompleter.completeArguments[LocalVariableDescriptor@2dded44b] +++|+++
R: ArgumentMapping

val getDataFlowInfoForArgument: (org.jetbrains.kotlin.psi.ValueArgument) -> org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowInfo defined in org.jetbrains.kotlin.resolve.calls.CallCompleter.completeArguments[LocalVariableDescriptor@29aaeb72] +++|+++
R: DataFlowInfo

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: KotlinTypeInfo

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: KotlinTypeInfo

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.results.OverloadResolutionResults<D>.resultingDescriptor: D[MyPropertyDescriptor@756a55b7]
D: VariableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.results.OverloadResolutionResults<D>.resultingDescriptor: D[MyPropertyDescriptor@756a55b7]
D: VariableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.results.OverloadResolutionResults<D>.resultingDescriptor: D[MyPropertyDescriptor@756a55b7]
D: VariableDescriptor

public final operator fun component1(): kotlin.Boolean defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@50449078]
A: Boolean

public final operator fun component1(): kotlin.Boolean defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@22a15ad]
A: Boolean

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public final operator fun component1(): kotlin.Boolean defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@601a317f]
A: Boolean

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: FunctionDescriptor

public final operator fun component1(): kotlin.Boolean defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4352925d]
A: Boolean

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.results.OverloadResolutionResults<D>.resultingDescriptor: D[MyPropertyDescriptor@756a55b7]
D: VariableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: DataFlowValue

@kotlin.jvm.JvmStatic public final fun <T, E : kotlin.Throwable> forceAllowTreeLoading(psiFile: com.intellij.psi.PsiFile, computable: com.intellij.openapi.util.ThrowableComputable<out T, E>): T defined in org.jetbrains.kotlin.util.AstLoadingFilter[DeserializedSimpleFunctionDescriptor@3babebbd]
T: ASTNode

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@f69d202]
R: KotlinTypeInfo

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5ad21df1]
T: CallExpressionElement

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.CallExpressionElement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3a5c52c6]
T: CallExpressionElement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@fb9f39]
T: TypeProjection

public abstract operator fun next(): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@20c1a3d3]
T: TypeProjection

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.MutableResolvedCall<D>.candidateDescriptor: D[MyPropertyDescriptor@3bcd93cb]
D: D

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.MutableResolvedCall<D>.candidateDescriptor: D[MyPropertyDescriptor@3bcd93cb]
D: D

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7896247b]
R: Unit

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@6a604e47]
T: MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)>

@org.jetbrains.annotations.NotNull public open fun replaceDataFlowInfo(@org.jetbrains.annotations.NotNull newDataFlowInfo: org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowInfo): C defined in org.jetbrains.kotlin.resolve.calls.context.CallResolutionContext[JavaMethodDescriptor@543d4630]
Context: C

@org.jetbrains.annotations.NotNull public open fun replaceExpectedType(@org.jetbrains.annotations.Nullable newExpectedType: org.jetbrains.kotlin.types.KotlinType?): C defined in org.jetbrains.kotlin.resolve.calls.context.CallResolutionContext[JavaMethodDescriptor@19a0e437]
Context: C

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.MutableResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@2a594688]
D: D

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.MutableResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@2a594688]
D: D

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.MutableResolvedCall<D>.candidateDescriptor: D[MyPropertyDescriptor@3bcd93cb]
D: D

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3edb0dd5]
E: KotlinType

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.psi.KtTypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@73d682ee]
E: KtTypeProjection

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@68375020]
E: TypeProjection

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@68375020]
E: TypeProjection




@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: SimpleDiagnostic<(E..E?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: SimpleDiagnostic<(E..E?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ParametrizedDiagnostic<(E..E?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ParametrizedDiagnostic<(E..E?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ParametrizedDiagnostic<(E..E?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ParametrizedDiagnostic<(E..E?)>

val factory: org.jetbrains.kotlin.resolve.calls.model.KotlinCallDiagnostic.(com.intellij.psi.PsiElement) -> org.jetbrains.kotlin.diagnostics.ParametrizedDiagnostic<*> defined in org.jetbrains.kotlin.resolve.calls.CallDiagnosticToDiagnostic.toDiagnostic[LocalVariableDescriptor@137cac7b] +++|+++
R: ParametrizedDiagnostic<*>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: List<FqName>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@f69d202]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@f69d202]
R: Boolean

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.MutableResolvedCall<D>.candidateDescriptor: D[MyPropertyDescriptor@3bcd93cb]
D: D

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@44ff1ce4]
T: MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)>

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@661b966d]
T: MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)>

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.MutableResolvedCall<D>.candidateDescriptor: D[MyPropertyDescriptor@3bcd93cb]
D: D

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.MutableResolvedCall<D>.candidateDescriptor: D[MyPropertyDescriptor@3bcd93cb]
D: D

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@6af75d1]
T: MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)>



public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@4366d43e]
T: MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)>

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.candidateDescriptor: D[MyPropertyDescriptor@6cceb2b]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

@org.jetbrains.annotations.NotNull public abstract fun getResultingDescriptor(): org.jetbrains.kotlin.descriptors.CallableDescriptor defined in org.jetbrains.kotlin.resolve.calls.model.ResolvedCall[JavaMethodDescriptor@1002b203]
D: CallableDescriptor

public abstract fun next(): org.jetbrains.kotlin.resolve.deprecation.Deprecation defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@7168e6c4]
T: Deprecation

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.resolve.scopes.receivers.ReceiverValue defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@532d4d7e]
T: ReceiverValue

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@fb9f39]
T: TypeProjection

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@8599df4]
T: MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)>

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: VariableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@f8b007f]
V: CallChecker

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: KtExpression

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.ExpressionValueArgument defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@610fc0e1]
T: ExpressionValueArgument

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.ResolvedCallArgument defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@769210ae]
T: ResolvedCallArgument

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.KotlinCallArgument defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6a687d12]
T: KotlinCallArgument

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: VariableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: FunctionDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.candidateDescriptor: D[MyPropertyDescriptor@6cceb2b]
D: FunctionDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.candidateDescriptor: D[MyPropertyDescriptor@6cceb2b]
D: VariableDescriptor

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.descriptors.TypeParameterDescriptor..org.jetbrains.kotlin.descriptors.TypeParameterDescriptor?), (org.jetbrains.kotlin.types.KotlinType..org.jetbrains.kotlin.types.KotlinType?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@42d343d6]
T: MutableEntry<(org.jetbrains.kotlin.descriptors.TypeParameterDescriptor..org.jetbrains.kotlin.descriptors.TypeParameterDescriptor?), (org.jetbrains.kotlin.types.KotlinType..org.jetbrains.kotlin.types.KotlinType?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.resolve.scopes.receivers.ReceiverValue defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1e0f05d2]
T: ReceiverValue

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7040e082]
T: TypeParameterDescriptor

public final operator fun component1(): org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7c4953eb]
A: TypeParameterDescriptor

public final operator fun component2(): org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@41e1dca8]
B: TypeParameterDescriptor

public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.descriptors.TypeParameterDescriptor, org.jetbrains.kotlin.resolve.calls.inference.TypeVariable> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1fa88235]
T: Pair<TypeParameterDescriptor, TypeVariable>

public final operator fun component1(): org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5e46f0eb]
A: TypeParameterDescriptor

public final operator fun component2(): org.jetbrains.kotlin.resolve.calls.inference.TypeVariable defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@19c76433]
B: TypeVariable

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<org.jetbrains.kotlin.resolve.calls.inference.TypeVariable, org.jetbrains.kotlin.resolve.calls.inference.TypeBoundsImpl> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@5b5b1b9f]
T: MutableEntry<TypeVariable, TypeBoundsImpl>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: TypeVariable

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: TypeBoundsImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.inference.TypeVariable defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@71d95dfc]
T: TypeVariable

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@f8b007f]
V: MutableList<Bound>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.resolve.calls.inference.TypeVariable> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7561ce1c]
A: List<TypeVariable>

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.resolve.calls.inference.TypeVariable> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7f503dfb]
B: List<TypeVariable>

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.resolve.calls.inference.TypeVariable, org.jetbrains.kotlin.resolve.calls.inference.TypeBoundsImpl> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@53c65c1f]
T: Entry<TypeVariable, TypeBoundsImpl>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: TypeVariable

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: TypeBoundsImpl


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: KotlinType

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.resolve.calls.inference.TypeVariable, org.jetbrains.kotlin.resolve.calls.inference.TypeBoundsImpl> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5e8f42d8]
T: Entry<TypeVariable, TypeBoundsImpl>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: TypeVariable

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: TypeBoundsImpl

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: TypeVariable

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: MutableList<Bound>




public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.resolve.calls.inference.model.NewTypeVariable, org.jetbrains.kotlin.types.StubType> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@11872aa0]
T: Entry<NewTypeVariable, StubType>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: NewTypeVariable

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: StubType

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.inference.model.InitialConstraint defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3b939126]
T: InitialConstraint

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7896247b]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7896247b]
R: Unit

public abstract fun next(): org.jetbrains.kotlin.resolve.calls.tower.PSICompletedCallInfo defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@283fa2da]
T: PSICompletedCallInfo

public abstract fun next(): org.jetbrains.kotlin.resolve.calls.model.KotlinCallDiagnostic defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@24650427]
T: KotlinCallDiagnostic

public abstract val value: org.jetbrains.kotlin.types.UnwrappedType defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@31712991]
V: UnwrappedType

public abstract fun next(): org.jetbrains.kotlin.resolve.calls.tower.PSICompletedCallInfo defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@42a4c617]
T: PSICompletedCallInfo

public abstract val key: org.jetbrains.kotlin.types.model.TypeConstructorMarker defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@21974066]
K: TypeConstructorMarker

public abstract val value: org.jetbrains.kotlin.types.model.KotlinTypeMarker defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@2075f431]
V: KotlinTypeMarker

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.ResolvedAtom defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@45e005ef]
T: ResolvedAtom

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@f8b007f]
V: TypeTemplate

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<org.jetbrains.kotlin.resolve.calls.inference.TypeVariable, org.jetbrains.kotlin.resolve.calls.inference.TypeTemplate> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@237e8b1f]
T: MutableEntry<TypeVariable, TypeTemplate>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: TypeVariable

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7896247b]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7896247b]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7896247b]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.inference.TypeBounds.Bound defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3c29c2bb]
T: Bound


public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.types.KotlinType> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4732d00b]
A: List<KotlinType>

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.types.KotlinType> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6f5843a4]
B: List<KotlinType>

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7040e082]
T: KotlinType

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.inference.TypeBounds.Bound defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@68a758ab]
T: Bound

public abstract operator fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3d8268d8]
T: KotlinType

public open fun get(index: kotlin.Int): org.jetbrains.kotlin.resolve.calls.inference.TypeBounds.Bound defined in java.util.ArrayList[JavaMethodDescriptor@7395df67]
E: Bound

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.resolve.calls.inference.TypeBounds.Bound defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@fc058ac]
E: Bound

public open fun get(index: kotlin.Int): org.jetbrains.kotlin.resolve.calls.inference.TypeBounds.Bound defined in java.util.ArrayList[JavaMethodDescriptor@7395df67]
E: Bound

public final val upper: org.jetbrains.kotlin.types.KotlinType defined in org.jetbrains.kotlin.types.typesApproximation.ApproximationBounds[DeserializedPropertyDescriptor@47337bd5]
T: KotlinType

public final val upper: org.jetbrains.kotlin.types.KotlinType defined in org.jetbrains.kotlin.types.typesApproximation.ApproximationBounds[DeserializedPropertyDescriptor@47337bd5]
T: KotlinType

public final val lower: org.jetbrains.kotlin.types.KotlinType defined in org.jetbrains.kotlin.types.typesApproximation.ApproximationBounds[DeserializedPropertyDescriptor@5cf51231]
T: KotlinType

public final val lower: org.jetbrains.kotlin.types.KotlinType defined in org.jetbrains.kotlin.types.typesApproximation.ApproximationBounds[DeserializedPropertyDescriptor@5cf51231]
T: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: DataFlowValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: DataFlowValue

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@5a70261c]
T: MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)>

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: D

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: DataFlowValue

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: Nullability

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73181360]
R: Map<DataFlowValue, Nullability>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract operator fun next(): javaslang.Tuple2<org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowValue, out kotlin.collections.Iterable<org.jetbrains.kotlin.types.KotlinType>> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@43d5a6f8]
T: Tuple2<DataFlowValue, out Iterable<KotlinType>>

public operator fun <T> javaslang.Tuple2<T, *>.component1(): T defined in org.jetbrains.kotlin.util.javaslang in file javaslangAdapters.kt[SimpleFunctionDescriptorImpl@4eac96ce]
T: DataFlowValue

public operator fun <T> javaslang.Tuple2<*, T>.component2(): T defined in org.jetbrains.kotlin.util.javaslang in file javaslangAdapters.kt[SimpleFunctionDescriptorImpl@13a23e89]
T: Iterable<KotlinType>

public abstract operator fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@62683429]
T: KotlinType


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6e13eab7]
T: KotlinType


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ImplicitSmartCasts

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ImplicitSmartCasts


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ExplicitSmartCasts

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ExplicitSmartCasts

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.candidateDescriptor: D[MyPropertyDescriptor@6cceb2b]
D: D

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: DynamicType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: BasicCallResolutionContext

public final operator fun component1(): org.jetbrains.kotlin.psi.KtReturnExpression defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6082b5c8]
A: KtReturnExpression

public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@32017891]
T: ConstraintSystemForOverloadResolutionMode

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.ResolvedAtom defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@500851d4]
T: ResolvedAtom

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.checkers.CallChecker defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6a996a4f]
T: CallChecker

public final operator fun component1(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6243e5c6]
A: KotlinType

public final operator fun component2(): org.jetbrains.kotlin.resolve.calls.context.CallPosition defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@17007ff2]
B: CallPosition

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4ed6616]
T: ArrayList<KtExpression>

public abstract fun next(): org.jetbrains.kotlin.psi.KtExpression defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@16081628]
T: KtExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.KotlinCallDiagnostic defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3fd01252]
T: KotlinCallDiagnostic

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.descriptors.ValueParameterDescriptor, org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7d60a756]
T: Entry<ValueParameterDescriptor, ResolvedValueArgument>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: ValueParameterDescriptor

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: ResolvedValueArgument

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.descriptors.ValueParameterDescriptor, org.jetbrains.kotlin.resolve.calls.model.ResolvedCallArgument> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@323ca757]
T: Entry<ValueParameterDescriptor, ResolvedCallArgument>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: ValueParameterDescriptor

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: ResolvedCallArgument

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d38e21]
T: VarargValueArgument

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d38e21]
T: VarargValueArgument

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4ed6616]
T: LinkedHashMap<ValueParameterDescriptor, ResolvedValueArgument>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@f69d202]
R: CallableDescriptor

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.resolve.calls.model.KotlinCallArgument, org.jetbrains.kotlin.resolve.calls.model.SamConversionDescription> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@ef2dfb2]
T: Entry<KotlinCallArgument, SamConversionDescription>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: KotlinCallArgument

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: SamConversionDescription

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ArgumentMatchStatus

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ArgumentMatchStatus

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d38e21]
T: ArgumentMatchImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4ed6616]
T: LinkedHashMap<ValueArgument, ArgumentMatchImpl>

public final val first: org.jetbrains.kotlin.psi.ValueArgument defined in kotlin.Pair[DeserializedPropertyDescriptor@295aa1b4]
A: ValueArgument

public final val second: org.jetbrains.kotlin.resolve.calls.model.KotlinCallDiagnostic defined in kotlin.Pair[DeserializedPropertyDescriptor@4f6596db]
B: KotlinCallDiagnostic

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d38e21]
T: NewConstraintSystemImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.tasks.ResolutionCandidate<D>.descriptor: D[MyPropertyDescriptor@7f66c44f]
D: D

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.KotlinCallDiagnostic defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@50d53d07]
T: KotlinCallDiagnostic

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@f8b007f]
V: ReceiverValueWithSmartCastInfo

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ReceiverValueWithSmartCastInfo

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d38e21]
T: MutableList<ResolutionDiagnostic>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4ed6616]
T: OverloadResolutionResults<D>

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.tasks.ResolutionCandidate<D>.descriptor: D[MyPropertyDescriptor@7f66c44f]
D: D

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ReceiverValueWithSmartCastInfo

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ReceiverValueWithSmartCastInfo

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4ed6616]
T: OverloadResolutionResults<D>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4ed6616]
T: ResolvedCall<D>

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.tower.ErrorCandidate<*> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@56960126]
T: ErrorCandidate<*>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@f8b007f]
V: ReceiverValueWithSmartCastInfo

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@fb9f39]
T: KotlinCallArgument

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: PSIKotlinCallArgument

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: SimpleTypeArgumentImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: SimpleTypeArgumentImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4ed6616]
T: PSIKotlinCallArgument

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Expression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Expression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: KtExpression

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7896247b]
R: LexicalWritableScope

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.ResolvedAtom defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1bfae74e]
T: ResolvedAtom

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.candidateDescriptor: D[MyPropertyDescriptor@6cceb2b]
D: CallableDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.KotlinCallArgument defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@bae2373]
T: KotlinCallArgument

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: UnwrappedType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: UnwrappedType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: UnwrappedType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: UnwrappedType

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: D

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: D

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ArgumentMapping

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: VariableDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.ClassifierDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5c5df30d]
T: ClassifierDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.resolve.checkers.ClassifierUsageChecker defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4b1d946d]
T: ClassifierUsageChecker

public abstract operator fun next(): com.intellij.psi.PsiElement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2f963ad]
T: PsiElement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtSuperTypeListEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5b5d5e19]
T: KtSuperTypeListEntry

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.descriptors.CallableMemberDescriptor, org.jetbrains.kotlin.descriptors.CallableMemberDescriptor> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@40260b33]
T: Entry<CallableMemberDescriptor, CallableMemberDescriptor>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: CallableMemberDescriptor

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: CallableMemberDescriptor

@org.jetbrains.annotations.NotNull public open fun <D : (org.jetbrains.kotlin.descriptors.CallableMemberDescriptor..org.jetbrains.kotlin.descriptors.CallableMemberDescriptor?)> unwrapFakeOverride(@org.jetbrains.annotations.NotNull p0: D): D defined in org.jetbrains.kotlin.resolve.DescriptorUtils[JavaMethodDescriptor@5c791653]
D: CallableMemberDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.resolve.deprecation.Deprecation defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6e16dd1c]
T: Deprecation

public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@32017891]
T: Boolean

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@fb9f39]
T: ModuleDescriptor

public abstract val value: kotlin.collections.List<org.jetbrains.kotlin.resolve.ModulePath> defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@4cfe92d3]
V: List<ModulePath>

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.descriptors.ModuleDescriptor, kotlin.collections.Set<org.jetbrains.kotlin.descriptors.ModuleDescriptor>> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@43f464ba]
T: Entry<ModuleDescriptor, Set<ModuleDescriptor>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: ModuleDescriptor

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: Set<ModuleDescriptor>

public abstract operator fun next(): org.jetbrains.kotlin.resolve.ModulePath defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@c6e7704]
T: ModulePath

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d38e21]
T: LinkedHashMap<Compatibility, List<MemberDescriptor>>

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73181360]
R: LinkedHashMap<Compatibility, List<MemberDescriptor>>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: Compatibility

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: List<MemberDescriptor>

public abstract val value: kotlin.collections.List<org.jetbrains.kotlin.descriptors.MemberDescriptor> defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@c2e8492]
V: List<MemberDescriptor>

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.MemberDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@938d4fa]
T: MemberDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@f69d202]
R: File

public final operator fun component1(): org.jetbrains.kotlin.descriptors.MemberDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6434f16]
A: MemberDescriptor

public final operator fun component2(): kotlin.collections.Map<org.jetbrains.kotlin.resolve.multiplatform.ExpectedActualResolver.Compatibility.Incompatible, kotlin.collections.Collection<org.jetbrains.kotlin.descriptors.MemberDescriptor>> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1e057579]
B: Map<Incompatible, Collection<MemberDescriptor>>

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5ad21df1]
T: MemberDescriptor

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: Compatibility

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: List<MemberDescriptor>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: Compatibility

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: List<MemberDescriptor>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: String

public abstract operator fun next(): org.jetbrains.kotlin.resolve.checkers.ExpectedActualDeclarationChecker.ActualAnnotationArgumentExtractor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@75238aea]
T: ActualAnnotationArgumentExtractor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7896247b]
R: Nothing

public abstract operator fun next(): kotlin.collections.Map.Entry<K, kotlin.collections.List<V>> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@706097fc]
T: Entry<K, List<V>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4503a766]
V: List<V>

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtAnnotationEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@43702326]
T: KtAnnotationEntry

public abstract operator fun next(): org.jetbrains.kotlin.resolve.constants.ConstantValue<*> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@184690ca]
T: ConstantValue<*>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: KtAnnotationEntry

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: KtAnnotationEntry

public abstract operator fun next(): org.jetbrains.kotlin.resolve.checkers.ExperimentalUsageChecker.Experimentality defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@63902759]
T: Experimentality

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@16d31047]
T: AnnotationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.name.ClassId defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@b139db]
T: ClassId

public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@32017891]
T: List<String>

public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@32017891]
T: List<String>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean




public abstract operator fun next(): org.jetbrains.kotlin.resolve.deprecation.Deprecation defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@764089d2]
T: Deprecation

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: String

val report: (kotlin.String) -> kotlin.Unit defined in org.jetbrains.kotlin.resolve.checkers.ExperimentalUsageChecker.Companion.checkCompilerArguments.checkAnnotation[LocalVariableDescriptor@3681325a] +++|+++
R: Unit

public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@32017891]
T: List<String>

public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@32017891]
T: List<String>

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@475cbf58]
T: String


public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@32017891]
T: List<String>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.resolve.checkers.ExperimentalUsageChecker.Experimentality, (org.jetbrains.kotlin.descriptors.CallableMemberDescriptor..org.jetbrains.kotlin.descriptors.CallableMemberDescriptor?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@12859df7]
T: Entry<Experimentality, (org.jetbrains.kotlin.descriptors.CallableMemberDescriptor..org.jetbrains.kotlin.descriptors.CallableMemberDescriptor?)>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@724cbbba]
K: Experimentality

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtAnonymousInitializer defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1c0ff3bb]
T: KtAnonymousInitializer

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtSuperTypeListEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@73d38bb4]
T: KtSuperTypeListEntry

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@68375020]
E: TypeProjection

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.diagnostics.Diagnostic defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6f79dc2b]
T: Diagnostic

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3345e3dd]
T: TypeParameterDescriptor

public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@32017891]
T: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@297d7fdb]
T: MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)>

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@653f756f]
T: ConstantValue<Any?>

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtExpression defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@18081c7a]
T: KtExpression

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@20631859]
T: MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)>

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7896247b]
R: Unit

public open val value: kotlin.String defined in org.jetbrains.kotlin.resolve.constants.ConstantValue[DeserializedPropertyDescriptor@5ef6e889]
T: String

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7040e082]
T: MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)>

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.psi.ValueArgument defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7906c9f3]
T: ValueArgument

public final operator fun component1(): (kotlin.Any?) -> kotlin.Any defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2097464e]
A: Function1<Any?, Any>

public final operator fun component2(): (kotlin.Long) -> kotlin.Long defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2bd3a860]
B: Function1<Long, Long>

val function: (kotlin.Any?) -> kotlin.Any defined in org.jetbrains.kotlin.resolve.constants.evaluate.evaluateUnaryAndCheck[LocalVariableDescriptor@12256fd4] +++|+++
R: Any


public final operator fun component1(): (kotlin.Any?, kotlin.Any?) -> kotlin.Any defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5d958c3c]
A: Function2<Any?, Any?, Any>

public final operator fun component2(): (java.math.BigInteger, java.math.BigInteger) -> java.math.BigInteger defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5079a3f5]
B: Function2<BigInteger, BigInteger, BigInteger>

val function: (kotlin.Any?, kotlin.Any?) -> kotlin.Any defined in org.jetbrains.kotlin.resolve.constants.evaluate.evaluateBinaryAndCheck[LocalVariableDescriptor@7251e933] +++|+++
R: Any

public final val second: (java.math.BigInteger, java.math.BigInteger) -> java.math.BigInteger defined in kotlin.Pair[DeserializedPropertyDescriptor@319fe684]
B: Function2<BigInteger, BigInteger, BigInteger>

val refinedChecker: (java.math.BigInteger, java.math.BigInteger) -> java.math.BigInteger defined in org.jetbrains.kotlin.resolve.constants.evaluate.evaluateBinaryAndCheck[LocalVariableDescriptor@fb9e017] +++|+++
R: BigInteger


@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7896247b]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4ed6616]
T: SmartList<Deprecation>

public abstract operator fun next(): org.jetbrains.kotlin.resolve.deprecation.DeprecatedByVersionRequirement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@582c6f6a]
T: DeprecatedByVersionRequirement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.resolve.diagnostics.DiagnosticSuppressor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@341a6be7]
T: DiagnosticSuppressor

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@71c281eb]
T: String

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1971379c]
T: AnnotationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.resolve.constants.ConstantValue<*> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@27124a9c]
T: ConstantValue<*>

public abstract operator fun next(): org.jetbrains.kotlin.resolve.constants.ConstantValue<*> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@d859a36]
T: ConstantValue<*>

internal inline fun <T : kotlin.Any, R> withLinkageErrorLogger(receiver: T, block: T.() -> R): R defined in org.jetbrains.kotlin.resolve.extensions in file extensionsUtil.kt[SimpleFunctionDescriptorImpl@26150b81]
R: Collection<KtImportInfo>

internal inline fun <T : kotlin.Any, R> withLinkageErrorLogger(receiver: T, block: T.() -> R): R defined in org.jetbrains.kotlin.resolve.extensions in file extensionsUtil.kt[SimpleFunctionDescriptorImpl@26150b81]
R: Collection<KtImportInfo>

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@653f756f]
T: SyntheticResolveExtension

internal inline fun <T : kotlin.Any, R> withLinkageErrorLogger(receiver: T, block: T.() -> R): R defined in org.jetbrains.kotlin.resolve.extensions in file extensionsUtil.kt[SimpleFunctionDescriptorImpl@26150b81]
R: Unit

internal inline fun <T : kotlin.Any, R> withLinkageErrorLogger(receiver: T, block: T.() -> R): R defined in org.jetbrains.kotlin.resolve.extensions in file extensionsUtil.kt[SimpleFunctionDescriptorImpl@26150b81]
R: Unit

internal inline fun <T : kotlin.Any, R> withLinkageErrorLogger(receiver: T, block: T.() -> R): R defined in org.jetbrains.kotlin.resolve.extensions in file extensionsUtil.kt[SimpleFunctionDescriptorImpl@26150b81]
R: Unit

internal inline fun <T : kotlin.Any, R> withLinkageErrorLogger(receiver: T, block: T.() -> R): R defined in org.jetbrains.kotlin.resolve.extensions in file extensionsUtil.kt[SimpleFunctionDescriptorImpl@26150b81]
R: Unit

internal inline fun <T : kotlin.Any, R> withLinkageErrorLogger(receiver: T, block: T.() -> R): R defined in org.jetbrains.kotlin.resolve.extensions in file extensionsUtil.kt[SimpleFunctionDescriptorImpl@26150b81]
R: Unit

internal inline fun <T : kotlin.Any, R> withLinkageErrorLogger(receiver: T, block: T.() -> R): R defined in org.jetbrains.kotlin.resolve.extensions in file extensionsUtil.kt[SimpleFunctionDescriptorImpl@26150b81]
R: List<Name>

internal inline fun <T : kotlin.Any, R> withLinkageErrorLogger(receiver: T, block: T.() -> R): R defined in org.jetbrains.kotlin.resolve.extensions in file extensionsUtil.kt[SimpleFunctionDescriptorImpl@26150b81]
R: List<Name>

internal inline fun <T : kotlin.Any, R> withLinkageErrorLogger(receiver: T, block: T.() -> R): R defined in org.jetbrains.kotlin.resolve.extensions in file extensionsUtil.kt[SimpleFunctionDescriptorImpl@26150b81]
R: List<Name>

internal inline fun <T : kotlin.Any, R> withLinkageErrorLogger(receiver: T, block: T.() -> R): R defined in org.jetbrains.kotlin.resolve.extensions in file extensionsUtil.kt[SimpleFunctionDescriptorImpl@26150b81]
R: List<Name>

internal inline fun <T : kotlin.Any, R> withLinkageErrorLogger(receiver: T, block: T.() -> R): R defined in org.jetbrains.kotlin.resolve.extensions in file extensionsUtil.kt[SimpleFunctionDescriptorImpl@26150b81]
R: Unit


public abstract operator fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3d50fcfe]
T: KotlinType



@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4ed6616]
T: List<DefaultImportImpl>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: THashSet<Name>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: THashSet<Name>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: THashSet<Name>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: THashSet<Name>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean


public abstract operator fun next(): I defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6e62d621]
T: I


public abstract fun <T> compute(computable: () -> T): T defined in org.jetbrains.kotlin.storage.StorageManager[DeserializedSimpleFunctionDescriptor@f35ac5]
T: Collection<D>

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtImportInfo defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3fb886b9]
T: KtImportInfo

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtImportInfo defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@730b7319]
T: KtImportInfo


public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6d8b90a8]
T: DeclarationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtImportInfo defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3ea06fa3]
T: KtImportInfo

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@fe1fbd2]
T: DeclarationDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract fun <T> compute(computable: () -> T): T defined in org.jetbrains.kotlin.storage.StorageManager[DeserializedSimpleFunctionDescriptor@f35ac5]
T: LinkedHashSet<DeclarationDescriptor>

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3fc7f31]
T: KtFile

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7974032c]
T: KtDeclaration

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.ClassDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@a6a9c2e]
T: ClassDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.TypeAliasDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7c4fc2e4]
T: TypeAliasDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtNamedFunction defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@20653405]
T: KtNamedFunction

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtProperty defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6ed77fa8]
T: KtProperty

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDestructuringDeclarationEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@50c20f72]
T: KtDestructuringDeclarationEntry

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@64deb5a5]
T: KtDeclaration







public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73181360]
R: LexicalScope

public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.psi.KtParameter, (org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5a6d4b8a]
T: Pair<KtParameter, (org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?)>

public final operator fun component1(): org.jetbrains.kotlin.psi.KtParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@508bda9a]
A: KtParameter

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3053932d]
T: AnnotationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@37b2a337]
T: KotlinType

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@614b9012]
T: DeclarationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6fa58607]
T: KotlinType

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.psi.KtParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@175fc3c3]
E: KtParameter

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.PropertyDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@35dc7a80]
T: PropertyDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.CallableMemberDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@73cd97c1]
T: CallableMemberDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4b0a76ec]
T: KotlinType

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.psi.KtParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@175fc3c3]
E: KtParameter

public inline fun <reified T> kotlin.sequences.Sequence<*>.firstIsInstance(): T defined in org.jetbrains.kotlin.utils.addToStdlib[DeserializedSimpleFunctionDescriptor@7ff491bb]
T: ImportingScope

public abstract operator fun next(): @kotlin.jvm.JvmWildcard org.jetbrains.kotlin.descriptors.FunctionDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4478fc81]
T: [@kotlin.jvm.JvmWildcard] FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: PsiSourceFile

public abstract fun <T> compute(computable: () -> T): T defined in org.jetbrains.kotlin.storage.StorageManager[DeserializedSimpleFunctionDescriptor@f35ac5]
T: Diagnostics

public abstract fun <T> compute(computable: () -> T): T defined in org.jetbrains.kotlin.storage.StorageManager[DeserializedSimpleFunctionDescriptor@f35ac5]
T: Unit

public abstract fun <T> compute(computable: () -> T): T defined in org.jetbrains.kotlin.storage.StorageManager[DeserializedSimpleFunctionDescriptor@f35ac5]
T: Unit

public abstract fun <T> compute(computable: () -> T): T defined in org.jetbrains.kotlin.storage.StorageManager[DeserializedSimpleFunctionDescriptor@f35ac5]
T: Unit

public abstract fun <T> compute(computable: () -> T): T defined in org.jetbrains.kotlin.storage.StorageManager[DeserializedSimpleFunctionDescriptor@f35ac5]
T: Unit

public abstract fun <T> compute(computable: () -> T): T defined in org.jetbrains.kotlin.storage.StorageManager[DeserializedSimpleFunctionDescriptor@f35ac5]
T: (kotlin.collections.MutableCollection<(K..K?)>..kotlin.collections.Collection<(K..K?)>)

public abstract fun <T> compute(computable: () -> T): T defined in org.jetbrains.kotlin.storage.StorageManager[DeserializedSimpleFunctionDescriptor@f35ac5]
T: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

public abstract operator fun next(): kotlin.collections.IndexedValue<(org.jetbrains.kotlin.psi.KtDestructuringDeclarationEntry..org.jetbrains.kotlin.psi.KtDestructuringDeclarationEntry?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@545fd421]
T: IndexedValue<(org.jetbrains.kotlin.psi.KtDestructuringDeclarationEntry..org.jetbrains.kotlin.psi.KtDestructuringDeclarationEntry?)>

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.results.OverloadResolutionResults<D>.resultingDescriptor: D[MyPropertyDescriptor@756a55b7]
D: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: KotlinType

public abstract operator fun next(): org.jetbrains.kotlin.types.expressions.ClassLiteralChecker defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@318b8fef]
T: ClassLiteralChecker

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public final operator fun component1(): kotlin.Boolean defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@66dca58]
A: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Type

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Type


public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: CallableDescriptor

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@fb9f39]
T: TypeProjection

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.results.OverloadResolutionResults<D>.resultingDescriptor: D[MyPropertyDescriptor@756a55b7]
D: CallableDescriptor

public final val commitTrace: () -> kotlin.Unit defined in org.jetbrains.kotlin.types.expressions.DoubleColonExpressionResolver.ResolutionResultsAndTraceCommitCallback[PropertyDescriptorImpl@41f9c138] +++|+++
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d38e21]
T: ResolutionResultsAndTraceCommitCallback

public abstract operator fun next(): org.jetbrains.kotlin.types.expressions.DoubleColonExpressionResolver.ResolutionResultsAndTraceCommitCallback defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3fd8d8c7]
T: ResolutionResultsAndTraceCommitCallback

public final val commitTrace: () -> kotlin.Unit defined in org.jetbrains.kotlin.types.expressions.DoubleColonExpressionResolver.ResolutionResultsAndTraceCommitCallback[PropertyDescriptorImpl@41f9c138] +++|+++
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: OverloadResolutionResults<CallableDescriptor>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: TransientReceiver

public final val second: org.jetbrains.kotlin.resolve.calls.results.OverloadResolutionResults<org.jetbrains.kotlin.descriptors.FunctionDescriptor> defined in kotlin.Pair[DeserializedPropertyDescriptor@31595ea5]
B: OverloadResolutionResults<FunctionDescriptor>


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtReturnExpression defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@71db3c3]
T: KtReturnExpression

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtReturnExpression defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@14791d29]
T: KtReturnExpression

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtReturnExpression defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@367d2623]
T: KtReturnExpression

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7040e082]
T: KtElement

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4ed6616]
T: KtElement

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@17234fbe]
T: DeclarationDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ValueArgument

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@f69d202]
R: ExpressionTypingContext

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ExpressionTypingContext

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ExpressionTypingContext

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: DataFlowValue

public final operator fun component1(): org.jetbrains.kotlin.types.expressions.KotlinTypeInfo defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@17faf60d]
A: KotlinTypeInfo

public final operator fun component2(): org.jetbrains.kotlin.descriptors.VariableDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2ad143a5]
B: VariableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3c230498]
D: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: KtBlockExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: KtBlockExpression

public abstract operator fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@11bfd07b]
T: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ConditionalDataFlowInfo

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ConditionalDataFlowInfo

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: ConditionalDataFlowInfo

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@39d38e21]
T: THashSet<DataFlowValue>

public abstract fun next(): org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowValue defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@25869f21]
T: DataFlowValue

public final operator fun component2(): kotlin.Boolean defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@f15e3db]
B: Boolean

public final operator fun component2(): kotlin.Boolean defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2bdb189b]
B: Boolean


public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.descriptors.ValueParameterDescriptor, org.jetbrains.kotlin.psi.KtParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@593d1892]
T: Pair<ValueParameterDescriptor, KtParameter>

public final operator fun component1(): org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1ad6530f]
A: ValueParameterDescriptor

public final operator fun component2(): org.jetbrains.kotlin.psi.KtParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3c78c518]
B: KtParameter

@kotlin.internal.InlineOnly public inline fun <K, V> kotlin.collections.Map<K, V>.getOrElse(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@459a8189]
V: Int

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@17234fbe]
T: KotlinType

public abstract operator fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6304094e]
T: KotlinType


public final operator fun component1(): com.intellij.openapi.application.Application defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5891678e]
A: Application

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@79936ebb]
R: Pair<(com.intellij.openapi.application.Application..com.intellij.openapi.application.Application?), R>

@kotlin.internal.InlineOnly public inline fun <R> synchronized(lock: kotlin.Any, block: () -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@76222bd]
R: Array<PerformanceCounter>

@kotlin.internal.InlineOnly public inline fun <R> synchronized(lock: kotlin.Any, block: () -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@76222bd]
R: Unit



internal final inline fun <T> getOrPut(threadLocal: java.lang.ThreadLocal<T>, default: () -> T): T defined in org.jetbrains.kotlin.util.PerformanceCounter.Companion[SimpleFunctionDescriptorImpl@38aff425]
T: MutableSet<ReenterableCounter>


public abstract operator fun next(): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6520a474]
T: TypeProjection

public abstract operator fun next(): kotlin.collections.Map.Entry<kotlin.String, kotlin.collections.List<kotlin.String>> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1666df3d]
T: Entry<String, List<String>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@79f4d08e]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@253e7d58]
V: List<String>

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@641c65c0]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@372d34be]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4d506623]
R: JavaClassCacheManager

public abstract operator fun next(): kotlin.collections.Map.Entry<kotlin.String, kotlin.String> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3541a96a]
T: Entry<String, String>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5b5c0aa0]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3a0b7bed]
V: String

public abstract operator fun next(): kotlin.collections.Map.Entry<kotlin.String, kotlin.String> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@42c56014]
T: Entry<String, String>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5b5c0aa0]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3a0b7bed]
V: String

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@427606fa]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@344ab1b8]
T: LinkedHashSet<File>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4d506623]
R: DeclaredProcType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4d506623]
R: GeneratedTypesTaskListener

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5ee07eaf]
T: GeneratedTypesTaskListener

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4d506623]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4d506623]
R: Unit



public final operator fun component1(): kotlin.Long defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@70cee4da]
A: Long

public final operator fun component2(): kotlin.Boolean defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@71144241]
B: Boolean

public final operator fun component1(): kotlin.Long defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4d5eb827]
A: Long

public final operator fun component1(): kotlin.Long defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@419a0ec9]
A: Long

public final operator fun component1(): kotlin.Long defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2d894157]
A: Long

public abstract val value: org.jetbrains.kotlin.kapt3.base.incremental.AnnotationProcessorDependencyCollector defined in kotlin.Lazy[DeserializedPropertyDescriptor@511b4361]
T: AnnotationProcessorDependencyCollector

public abstract fun next(): org.jetbrains.kotlin.kapt3.base.incremental.IncrementalProcessor defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@5c3a91f6]
T: IncrementalProcessor

public abstract val key: java.io.File defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@50713f04]
K: File

public abstract val key: java.io.File defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@50713f04]
K: File

public abstract val value: java.io.File defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@74a53b7d]
V: File

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@427606fa]
R: IncrementalAptCache

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@427606fa]
R: JavaClassCache

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@427606fa]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5e090c73]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@427606fa]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5e090c73]
R: Unit

public abstract fun next(): org.jetbrains.kotlin.kapt3.base.incremental.SourceFileStructure defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@2fcbcde0]
T: SourceFileStructure

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@10d26ddf]
T: String

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@228ebd79]
T: String

public abstract fun next(): org.jetbrains.kotlin.kapt3.base.incremental.SourceFileStructure defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@2fcbcde0]
T: SourceFileStructure

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4a156f66]
T: String

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4c1ff177]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4d506623]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4d506623]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4d506623]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4d506623]
R: Boolean

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<java.net.URI, org.jetbrains.kotlin.kapt3.base.incremental.SourceFileStructure> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@15c3fde3]
T: MutableEntry<URI, SourceFileStructure>

public abstract val value: org.jetbrains.kotlin.kapt3.base.incremental.SourceFileStructure defined in kotlin.collections.MutableMap.MutableEntry[DeserializedPropertyDescriptor@59862d49]
V: SourceFileStructure

public abstract val key: java.net.URI defined in kotlin.collections.MutableMap.MutableEntry[DeserializedPropertyDescriptor@5f794320]
K: URI

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4d506623]
R: Boolean

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@136b5b93]
V: MutableSet<String>

public abstract val key: kotlin.String defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@1d9a1a95]
K: String

public abstract val key: kotlin.String defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@50391924]
K: String

public abstract val value: org.jetbrains.kotlin.kapt3.base.incremental.DeclaredProcType defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@5de1e9a4]
V: DeclaredProcType

public abstract val key: kotlin.String defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@50391924]
K: String

public abstract val value: org.jetbrains.kotlin.kapt3.base.incremental.DeclaredProcType defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@5de1e9a4]
V: DeclaredProcType

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@427606fa]
R: List<String>

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@79cf4c4b]
T: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@23324045]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@23324045]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@23324045]
E: String

public abstract val value: org.jetbrains.kotlin.kapt3.base.incremental.AnnotationProcessorDependencyCollector defined in kotlin.Lazy[DeserializedPropertyDescriptor@511b4361]
T: AnnotationProcessorDependencyCollector

public abstract val value: org.jetbrains.kotlin.kapt3.base.incremental.AnnotationProcessorDependencyCollector defined in kotlin.Lazy[DeserializedPropertyDescriptor@511b4361]
T: AnnotationProcessorDependencyCollector

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4996a900]
T: File

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4996a900]
T: File

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4d506623]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4d506623]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4d506623]
R: String

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@74e021b3]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4d506623]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4d506623]
R: Unit

public abstract operator fun get(index: kotlin.Int): kotlin.Any defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@244b7b8a]
E: Any

public abstract operator fun get(index: kotlin.Int): kotlin.Any defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@244b7b8a]
E: Any

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4d506623]
R: Unit

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@136b5b93]
V: FileInfo

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@136b5b93]
V: List<JCTree>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4d506623]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4d506623]
R: Nothing


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4d506623]
R: JCTree

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrTypeParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@454eb787]
E: IrTypeParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.types.IrType defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@6d860007]
E: IrType

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: Set<IrType>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: T

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrElement[SimpleFunctionDescriptorImpl@349fc4b3]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: String

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrValueParameter

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: IrValueParameter

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrValueParameter

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: IrValueParameter

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: IrValueParameter

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: ArrayList<IrDeclaration>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: ArrayList<IrDeclaration>

public final operator fun getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.ir.declarations.lazy.UnsafeLazyVar[SimpleFunctionDescriptorImpl@1a397e6c]
T: ArrayList<IrDeclaration>

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: ArrayList<IrDeclaration>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: ArrayList<IrDeclaration>

public final operator fun getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): kotlin.collections.ArrayList<org.jetbrains.kotlin.ir.declarations.IrDeclaration> /* = java.util.ArrayList<org.jetbrains.kotlin.ir.declarations.IrDeclaration> */ defined in org.jetbrains.kotlin.ir.declarations.lazy.UnsafeLazyVar[SimpleFunctionDescriptorImpl@2083877c]
T: ArrayList<IrDeclaration>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72d59d6d]
T: ArrayList<IrTypeParameter>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72d59d6d]
T: ArrayList<IrTypeParameter>

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: ArrayList<IrType>

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: ArrayList<IrType>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72d59d6d]
T: ArrayList<IrType>

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: ArrayList<IrType>

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: ArrayList<IrType>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72d59d6d]
T: ArrayList<IrType>

public inline fun <T, D : org.jetbrains.kotlin.descriptors.DeclarationDescriptor> org.jetbrains.kotlin.ir.util.SymbolTable.withScope(owner: D, block: org.jetbrains.kotlin.ir.util.SymbolTable.(D) -> T): T defined in org.jetbrains.kotlin.ir.util in file SymbolTable.kt[SimpleFunctionDescriptorImpl@26aa0dfe]
T: ArrayList<IrTypeParameter>

public inline fun <T, D : org.jetbrains.kotlin.descriptors.DeclarationDescriptor> org.jetbrains.kotlin.ir.util.SymbolTable.withScope(owner: D, block: org.jetbrains.kotlin.ir.util.SymbolTable.(D) -> T): T defined in org.jetbrains.kotlin.ir.util in file SymbolTable.kt[SimpleFunctionDescriptorImpl@26aa0dfe]
T: ArrayList<IrTypeParameter>

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: ArrayList<IrTypeParameter>

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: ArrayList<IrTypeParameter>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72d59d6d]
T: ArrayList<IrTypeParameter>

public inline fun <T, D : org.jetbrains.kotlin.descriptors.DeclarationDescriptor> org.jetbrains.kotlin.ir.util.SymbolTable.withScope(owner: D, block: org.jetbrains.kotlin.ir.util.SymbolTable.(D) -> T): T defined in org.jetbrains.kotlin.ir.util in file SymbolTable.kt[SimpleFunctionDescriptorImpl@26aa0dfe]
T: ArrayList<IrTypeParameter>

public inline fun <T, D : org.jetbrains.kotlin.descriptors.DeclarationDescriptor> org.jetbrains.kotlin.ir.util.SymbolTable.withScope(owner: D, block: org.jetbrains.kotlin.ir.util.SymbolTable.(D) -> T): T defined in org.jetbrains.kotlin.ir.util in file SymbolTable.kt[SimpleFunctionDescriptorImpl@26aa0dfe]
T: ArrayList<IrTypeParameter>

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: ArrayList<IrTypeParameter>

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: ArrayList<IrTypeParameter>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72d59d6d]
T: ArrayList<IrTypeParameter>

public final operator fun getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.ir.declarations.lazy.UnsafeLazyVar[SimpleFunctionDescriptorImpl@51eea9f5]
T: IrDeclarationParent

public final operator fun getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): org.jetbrains.kotlin.ir.declarations.IrDeclarationParent defined in org.jetbrains.kotlin.ir.declarations.lazy.UnsafeLazyVar[SimpleFunctionDescriptorImpl@429f7719]
T: IrDeclarationParent

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72d59d6d]
T: MutableList<IrConstructorCall>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72d59d6d]
T: MutableList<IrConstructorCall>

public final operator fun getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.ir.declarations.lazy.UnsafeLazyVar[SimpleFunctionDescriptorImpl@4e240697]
T: IrType

public final operator fun getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): org.jetbrains.kotlin.ir.types.IrType defined in org.jetbrains.kotlin.ir.declarations.lazy.UnsafeLazyVar[SimpleFunctionDescriptorImpl@71a28d13]
T: IrType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IrExpressionBodyImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IrExpressionBodyImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IrExpressionBodyImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IrExpressionBodyImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrTypeParameter

public inline fun <T, D : org.jetbrains.kotlin.descriptors.DeclarationDescriptor> org.jetbrains.kotlin.ir.util.SymbolTable.withScope(owner: D, block: org.jetbrains.kotlin.ir.util.SymbolTable.(D) -> T): T defined in org.jetbrains.kotlin.ir.util in file SymbolTable.kt[SimpleFunctionDescriptorImpl@26aa0dfe]
T: ArrayList<IrTypeParameter>

public inline fun <T, D : org.jetbrains.kotlin.descriptors.DeclarationDescriptor> org.jetbrains.kotlin.ir.util.SymbolTable.withScope(owner: D, block: org.jetbrains.kotlin.ir.util.SymbolTable.(D) -> T): T defined in org.jetbrains.kotlin.ir.util in file SymbolTable.kt[SimpleFunctionDescriptorImpl@26aa0dfe]
T: ArrayList<IrTypeParameter>

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: ArrayList<IrTypeParameter>

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: ArrayList<IrTypeParameter>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72d59d6d]
T: ArrayList<IrTypeParameter>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrTypeParameter

public inline fun <T, D : org.jetbrains.kotlin.descriptors.DeclarationDescriptor> org.jetbrains.kotlin.ir.util.SymbolTable.withScope(owner: D, block: org.jetbrains.kotlin.ir.util.SymbolTable.(D) -> T): T defined in org.jetbrains.kotlin.ir.util in file SymbolTable.kt[SimpleFunctionDescriptorImpl@26aa0dfe]
T: ArrayList<IrTypeParameter>

public inline fun <T, D : org.jetbrains.kotlin.descriptors.DeclarationDescriptor> org.jetbrains.kotlin.ir.util.SymbolTable.withScope(owner: D, block: org.jetbrains.kotlin.ir.util.SymbolTable.(D) -> T): T defined in org.jetbrains.kotlin.ir.util in file SymbolTable.kt[SimpleFunctionDescriptorImpl@26aa0dfe]
T: ArrayList<IrTypeParameter>

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: ArrayList<IrTypeParameter>

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: ArrayList<IrTypeParameter>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72d59d6d]
T: ArrayList<IrTypeParameter>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72d59d6d]
T: ArrayList<IrSimpleFunctionSymbol>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72d59d6d]
T: ArrayList<IrSimpleFunctionSymbol>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrValueParameter

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: ArrayList<IrValueParameter>

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: ArrayList<IrValueParameter>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72d59d6d]
T: ArrayList<IrValueParameter>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrValueParameter

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: ArrayList<IrValueParameter>

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: ArrayList<IrValueParameter>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72d59d6d]
T: ArrayList<IrValueParameter>

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: IrType

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: IrType

public final operator fun getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.ir.declarations.lazy.UnsafeLazyVar[SimpleFunctionDescriptorImpl@7933abe]
T: IrType

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: IrType

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: IrType

public final operator fun getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): org.jetbrains.kotlin.ir.types.IrType defined in org.jetbrains.kotlin.ir.declarations.lazy.UnsafeLazyVar[SimpleFunctionDescriptorImpl@789deed1]
T: IrType

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrField

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrField

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72d59d6d]
T: ArrayList<IrTypeParameter>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72d59d6d]
T: ArrayList<IrTypeParameter>

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: IrType

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: IrType

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72d59d6d]
T: IrType

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: IrType

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: IrType

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72d59d6d]
T: IrType

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: ArrayList<IrType>

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: ArrayList<IrType>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72d59d6d]
T: ArrayList<IrType>

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: ArrayList<IrType>

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[SimpleFunctionDescriptorImpl@269956d]
T: ArrayList<IrType>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72d59d6d]
T: ArrayList<IrType>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72d59d6d]
T: List<IrType>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72d59d6d]
T: List<IrType>

public abstract val value: org.jetbrains.kotlin.ir.types.IrType defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@1ae116c3]
V: IrType

public abstract val key: org.jetbrains.kotlin.ir.symbols.IrClassSymbol defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@37dacb4]
K: IrClassSymbol

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@11fa3b55]
T: [@kotlin.jvm.JvmWildcard] SimpleFunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3f2c35cb]
R: IrSimpleTypeImpl

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@7357ba86]
E: IrExpression

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.expressions.IrExpression): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@66cd0a96]
E: IrExpression

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.expressions.IrExpression): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@66cd0a96]
E: IrExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: FileEntry

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IntArray

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IrFile

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrElement[SimpleFunctionDescriptorImpl@349fc4b3]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrElement[SimpleFunctionDescriptorImpl@349fc4b3]
R: IrElement



@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrIfThenElseImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrIfThenElseImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrConstructorCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrFunctionAccessExpression






@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: T

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrIfThenElseImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrIfThenElseImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrVariableImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrVariable

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrVariableImpl

public inline fun <reified T> org.jetbrains.kotlin.ir.builders.Scope.assertCastOwner(): T defined in org.jetbrains.kotlin.ir.builders in file ScopeHelpers.kt[SimpleFunctionDescriptorImpl@a76d571]
T: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: ClassDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: D

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrDeclaration[SimpleFunctionDescriptorImpl@472ad34f]
R: IrElement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrFile[SimpleFunctionDescriptorImpl@20b832ee]
R: IrElement

@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.getOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> T): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@e283f2e]
T: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrValueParameter

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrModuleFragment[SimpleFunctionDescriptorImpl@5399d60c]
R: IrElement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrBlockBody[SimpleFunctionDescriptorImpl@1e6ee8e1]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrValueParameter[SimpleFunctionDescriptorImpl@3d6e9bf6]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrTypeParameter[SimpleFunctionDescriptorImpl@58b4caef]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrDeclaration[SimpleFunctionDescriptorImpl@472ad34f]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrClass[SimpleFunctionDescriptorImpl@23def2f1]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrDeclaration[SimpleFunctionDescriptorImpl@472ad34f]
R: Unit

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.declarations.IrDeclaration): org.jetbrains.kotlin.ir.declarations.IrDeclaration defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@6ae37f6e]
E: IrDeclaration

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.declarations.IrDeclaration): org.jetbrains.kotlin.ir.declarations.IrDeclaration defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@6ae37f6e]
E: IrDeclaration

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpressionBody[SimpleFunctionDescriptorImpl@6b281409]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrDeclaration[SimpleFunctionDescriptorImpl@472ad34f]
R: Unit

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.declarations.IrDeclaration): org.jetbrains.kotlin.ir.declarations.IrDeclaration defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@55376fa1]
E: IrDeclaration

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.declarations.IrDeclaration): org.jetbrains.kotlin.ir.declarations.IrDeclaration defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@55376fa1]
E: IrDeclaration

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrTypeParameter[SimpleFunctionDescriptorImpl@58b4caef]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrValueParameter[SimpleFunctionDescriptorImpl@3d6e9bf6]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrValueParameter[SimpleFunctionDescriptorImpl@3d6e9bf6]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrValueParameter[SimpleFunctionDescriptorImpl@3d6e9bf6]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrBody[SimpleFunctionDescriptorImpl@2761d56a]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrVariable[SimpleFunctionDescriptorImpl@2b676827]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrFunction[SimpleFunctionDescriptorImpl@38211c2e]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrFunction[SimpleFunctionDescriptorImpl@38211c2e]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrFile[SimpleFunctionDescriptorImpl@20b832ee]
R: Unit

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.declarations.IrFile): org.jetbrains.kotlin.ir.declarations.IrFile defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@5aee4bc0]
E: IrFile

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.declarations.IrFile): org.jetbrains.kotlin.ir.declarations.IrFile defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@5aee4bc0]
E: IrFile

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrField[SimpleFunctionDescriptorImpl@686a4d44]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrSimpleFunction[SimpleFunctionDescriptorImpl@674990d5]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrSimpleFunction[SimpleFunctionDescriptorImpl@674990d5]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: IrSimpleFunction

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrTypeParameter[SimpleFunctionDescriptorImpl@58b4caef]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpressionBody[SimpleFunctionDescriptorImpl@6b281409]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrValueParameter[SimpleFunctionDescriptorImpl@3d6e9bf6]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrTypeParameter[SimpleFunctionDescriptorImpl@58b4caef]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrDeclaration[SimpleFunctionDescriptorImpl@472ad34f]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: PropertyAccessorDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: PropertyAccessorDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: {IrDeclarationContainer & IrSymbolOwner}

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: {IrDeclarationContainer & IrSymbolOwner}

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrClass[SimpleFunctionDescriptorImpl@23def2f1]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpressionBody[SimpleFunctionDescriptorImpl@6b281409]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrTypeParameter[SimpleFunctionDescriptorImpl@58b4caef]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrValueParameter[SimpleFunctionDescriptorImpl@3d6e9bf6]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrValueParameter[SimpleFunctionDescriptorImpl@3d6e9bf6]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrValueParameter[SimpleFunctionDescriptorImpl@3d6e9bf6]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrBody[SimpleFunctionDescriptorImpl@2761d56a]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrField[SimpleFunctionDescriptorImpl@686a4d44]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrSimpleFunction[SimpleFunctionDescriptorImpl@674990d5]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrSimpleFunction[SimpleFunctionDescriptorImpl@674990d5]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: IrSimpleFunction

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrClassSymbol

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrConstructorSymbol

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrEnumEntrySymbol

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrTypeParameterSymbol

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrTypeParameter[SimpleFunctionDescriptorImpl@58b4caef]
R: Unit

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.types.KotlinType> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3394dedf]
T: IndexedValue<KotlinType>

public final operator fun component2(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@676a6e58]
T: KotlinType

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IrType

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: SimpleFunctionDescriptorImpl

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrBody[SimpleFunctionDescriptorImpl@2761d56a]
R: IrElement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpressionBody[SimpleFunctionDescriptorImpl@6b281409]
R: IrElement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: IrElement

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.descriptors.TypeParameterDescriptor, org.jetbrains.kotlin.types.KotlinType> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@50970a1e]
T: Entry<TypeParameterDescriptor, KotlinType>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@33b807cd]
K: TypeParameterDescriptor

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@476aeb9d]
V: KotlinType



@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: T

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: T

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: T

public final operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.expressions.IrStatementOrigin.COMPONENT_N defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@3665662c]
T: COMPONENT_N

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrSpreadElement[SimpleFunctionDescriptorImpl@1da31958]
R: IrElement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrStatement[SimpleFunctionDescriptorImpl@592a92e0]
R: Unit

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.IrStatement): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@ef7868d]
E: IrStatement

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.IrStatement): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@ef7868d]
E: IrStatement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrStatement[SimpleFunctionDescriptorImpl@592a92e0]
R: Unit

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.IrStatement): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@7f3b7fff]
E: IrStatement

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.IrStatement): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@7f3b7fff]
E: IrStatement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrStatement[SimpleFunctionDescriptorImpl@592a92e0]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun next(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@3f3d1b65]
T: IrExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@1583fa3b]
E: IrExpression

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.expressions.IrExpression): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@5851be1a]
E: IrExpression

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.expressions.IrExpression): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@5851be1a]
E: IrExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.expressions.IrExpression): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@64f57f8e]
E: IrExpression

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.expressions.IrExpression): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@64f57f8e]
E: IrExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrSimpleFunction[SimpleFunctionDescriptorImpl@674990d5]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.expressions.IrExpression): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@54d58810]
E: IrExpression

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.expressions.IrExpression): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@54d58810]
E: IrExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrVariable[SimpleFunctionDescriptorImpl@2b676827]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrCatch[SimpleFunctionDescriptorImpl@4b4534aa]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.expressions.IrCatch): org.jetbrains.kotlin.ir.expressions.IrCatch defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@9546a5c]
E: IrCatch

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.expressions.IrCatch): org.jetbrains.kotlin.ir.expressions.IrCatch defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@9546a5c]
E: IrCatch

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrVariable[SimpleFunctionDescriptorImpl@2b676827]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.expressions.IrVarargElement): org.jetbrains.kotlin.ir.expressions.IrVarargElement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@48fa6cbe]
E: IrVarargElement

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.expressions.IrVarargElement): org.jetbrains.kotlin.ir.expressions.IrVarargElement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@48fa6cbe]
E: IrVarargElement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrVarargElement[SimpleFunctionDescriptorImpl@34679ae8]
R: Unit

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.expressions.IrVarargElement): org.jetbrains.kotlin.ir.expressions.IrVarargElement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@48fa6cbe]
E: IrVarargElement

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.expressions.IrVarargElement): org.jetbrains.kotlin.ir.expressions.IrVarargElement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@48fa6cbe]
E: IrVarargElement

public open fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrBranch[SimpleFunctionDescriptorImpl@460b958d]
R: Unit

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.expressions.IrBranch): org.jetbrains.kotlin.ir.expressions.IrBranch defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@2554a67e]
E: IrBranch

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.expressions.IrBranch): org.jetbrains.kotlin.ir.expressions.IrBranch defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@2554a67e]
E: IrBranch

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: IrType

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: IrType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IrType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IrType

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrSimpleTypeBuilder

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3f2c35cb]
R: IrSimpleTypeImpl

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3f2c35cb]
R: IrSimpleTypeImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: IrSimpleTypeImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: IrSimpleTypeImpl

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.types.IrTypeArgument defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3a2cd0fa]
E: IrTypeArgument

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: Boolean

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.types.IrTypeArgument defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3a2cd0fa]
E: IrTypeArgument

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrTypeParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@76c056bf]
E: IrTypeParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: Boolean

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@24a6537b]
T: IrType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IrType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: MutableSet<IrClassifierSymbol>

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@c1ca605]
R: List<IrClassifierSymbol>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: IrType

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrSimpleTypeBuilder

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrSimpleTypeBuilder

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrSimpleTypeBuilder

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5b9be229]
T: IrType

public inline fun <T> kotlin.collections.Iterable<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4a4c82f9]
T: IrType

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3f2c35cb]
R: IrType

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrTypeAbbreviationBuilder

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.ir.util.IrProvider defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@284642d7]
T: IrProvider

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: Nothing

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrClass

public abstract operator fun invoke(p1: org.jetbrains.kotlin.descriptors.DeclarationDescriptor): org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin defined in kotlin.Function1[FunctionInvokeDescriptor@34a47be7]
R: IrDeclarationOrigin

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrValueParameterImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: PatchDeclarationParentsVisitor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: PatchDeclarationParentsVisitor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: T

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrExternalPackageFragmentImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrFileImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrClassImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrConstructorImpl

public inline fun <T> org.jetbrains.kotlin.ir.util.TypeRemapper.withinScope(irTypeParametersContainer: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, fn: () -> T): T defined in org.jetbrains.kotlin.ir.util in file TypeRemapper.kt[SimpleFunctionDescriptorImpl@6ea745f]
T: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: T

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrPropertyImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrFieldImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrLocalDelegatedPropertyImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrEnumEntryImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrAnonymousInitializerImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrVariableImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrTypeParameterImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrTypeParameterImpl

public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.ir.declarations.IrTypeParameter, org.jetbrains.kotlin.ir.declarations.IrTypeParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@233ad1e0]
T: Pair<IrTypeParameter, IrTypeParameter>

public final operator fun component1(): org.jetbrains.kotlin.ir.declarations.IrTypeParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5eb894ce]
A: IrTypeParameter

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrTypeParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@27f55170]
B: IrTypeParameter

public inline fun <T> org.jetbrains.kotlin.ir.util.TypeRemapper.withinScope(irTypeParametersContainer: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, fn: () -> T): T defined in org.jetbrains.kotlin.ir.util in file TypeRemapper.kt[SimpleFunctionDescriptorImpl@6ea745f]
T: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrValueParameterImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrTypeAliasImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrConstructorCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: T

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrDelegatingConstructorCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrEnumConstructorCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrFunctionReferenceImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IrFieldSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IrFieldSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrPropertyReferenceImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <K, V> kotlin.collections.Map<K, V>.getOrElse(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3f1f1edd]
V: IrLoop

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrWhileLoopImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrDoWhileLoopImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrBreakImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrContinueImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrDynamicOperatorExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrErrorCallExpressionImpl


@kotlin.internal.InlineOnly public inline fun <K, V> kotlin.collections.Map<K, V>.getOrElse(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3f1f1edd]
V: T

@kotlin.internal.InlineOnly public inline fun <K, V> kotlin.collections.Map<K, V>.getOrElse(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3f1f1edd]
V: T

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: IrClassSymbol

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrElement[SimpleFunctionDescriptorImpl@349fc4b3]
R: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: StringBuilder

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrFile[SimpleFunctionDescriptorImpl@20b832ee]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrValueParameter[SimpleFunctionDescriptorImpl@3d6e9bf6]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrSymbolOwner[SimpleFunctionDescriptorImpl@1b610e61]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: String

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrValueParameter[SimpleFunctionDescriptorImpl@3d6e9bf6]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrValueParameter[SimpleFunctionDescriptorImpl@3d6e9bf6]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrBody[SimpleFunctionDescriptorImpl@2761d56a]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrValueParameter[SimpleFunctionDescriptorImpl@3d6e9bf6]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrBody[SimpleFunctionDescriptorImpl@2761d56a]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrField[SimpleFunctionDescriptorImpl@686a4d44]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrSimpleFunction[SimpleFunctionDescriptorImpl@674990d5]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrSimpleFunction[SimpleFunctionDescriptorImpl@674990d5]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpressionBody[SimpleFunctionDescriptorImpl@6b281409]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrElement[SimpleFunctionDescriptorImpl@349fc4b3]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrClass[SimpleFunctionDescriptorImpl@23def2f1]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@f493d37]
E: String

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3cfa007f]
E: String

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4b0969fc]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1da94def]
E: String

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrTypeParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5ccd4574]
E: IrTypeParameter

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.ir.expressions.IrExpression> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6d2a90af]
T: IndexedValue<IrExpression>

public final operator fun component2(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@30be655b]
T: IrExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[SimpleFunctionDescriptorImpl@19ecded2]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrElement[SimpleFunctionDescriptorImpl@349fc4b3]
R: String


public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrElement[SimpleFunctionDescriptorImpl@349fc4b3]
R: String

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrElement[SimpleFunctionDescriptorImpl@349fc4b3]
R: String


public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrElement[SimpleFunctionDescriptorImpl@349fc4b3]
R: Unit

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@29951c68]
E: IrValueParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@29951c68]
E: IrValueParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@29951c68]
E: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrExpressionBody

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3f2c35cb]
R: MemberDescriptor

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@29951c68]
E: IrValueParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@29951c68]
E: IrValueParameter

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@24a6537b]
T: IrType

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrDeclaration defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@1c1a42aa]
T: IrDeclaration

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@29951c68]
E: IrValueParameter

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrDeclaration defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@2225d44b]
T: IrDeclaration

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: Boolean



public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@29951c68]
E: IrValueParameter

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5fcdecf1]
T: IrStatement

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrConstructorCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: IrConstructorCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: StringBuilder

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@492d2327]
E: String

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrElement[SimpleFunctionDescriptorImpl@349fc4b3]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: String

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: ArrayList<String>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d2f5e11]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: String


@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: StringBuilder

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: StringBuilder

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: StringBuilder





@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: StringBuilder


@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: S


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrClassImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrConstructorImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrFieldImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrField

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@18bc747]
V: IrProperty

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrPropertyImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrVariable

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrSimpleTypeBuilder

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7e4b29ad]
R: TypeAliasDescriptor

public final val upper: org.jetbrains.kotlin.types.KotlinType defined in org.jetbrains.kotlin.types.typesApproximation.ApproximationBounds[DeserializedPropertyDescriptor@75fc9368]
T: KotlinType

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrSimpleFunction

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrField



public abstract operator fun set(index: kotlin.Int, element: T): T defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@74bce7db]
E: T

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrElement

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrModuleFragment

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrFile

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrExternalPackageFragment

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrDeclaration

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrBody

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrExpression

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrSpreadElement

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrBranch

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrElseBranch

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1023dd3c]
T: IrCatch

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4f45b8f0]
T: IrCatch


public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrElement[SimpleFunctionDescriptorImpl@349fc4b3]
R: Unit

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1a5558f6]
T: List<DescriptorBasedFunctionHandle>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1a5558f6]
T: List<DescriptorBasedFunctionHandle>

@org.jetbrains.annotations.NotNull public open fun <K : (kotlin.Any..kotlin.Any?), V : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.resolve.BindingContext, @org.jetbrains.annotations.NotNull p1: org.jetbrains.kotlin.util.slicedMap.ReadOnlySlice<(K..K?), (V..V?)>, @org.jetbrains.annotations.NotNull p2: K): V defined in org.jetbrains.kotlin.resolve.BindingContextUtils[JavaMethodDescriptor@f6c3056]
V: ClassDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@439ae44]
D: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b51ba11]
R: Boolean



@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@400eceed]
R: List<MemberDescriptor>

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4c86d58a]
T: ValueParameterDescriptor


public abstract operator fun next(): Function defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5ab62a]
T: Function

public abstract fun next(): Function defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@5d84fd28]
T: Function

public abstract operator fun get(index: kotlin.Int): Function defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@19f7aff7]
E: Function

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: JavaPackageImpl

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35cebaa3]
T: Result

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35cebaa3]
T: Result

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35cebaa3]
T: Map<FqName?, JavaAnnotation>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35cebaa3]
T: Map<FqName?, JavaAnnotation>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35cebaa3]
T: Map<FqName?, JavaAnnotation>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35cebaa3]
T: Map<FqName?, JavaAnnotation>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35cebaa3]
T: Map<FqName?, JavaAnnotation>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35cebaa3]
T: Map<FqName?, JavaAnnotation>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35cebaa3]
T: Map<FqName?, JavaAnnotation>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35cebaa3]
T: Map<FqName?, JavaAnnotation>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35cebaa3]
T: Result

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35cebaa3]
T: Result

public final operator fun component1(): org.jetbrains.kotlin.metadata.jvm.deserialization.JvmNameResolver defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@9240ef0]
A: JvmNameResolver

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.Package defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1cc613a8]
B: Package

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: DeserializedPackageMemberScope

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: DeserializedPackageMemberScope

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35cebaa3]
T: Int

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35cebaa3]
T: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Name

public abstract operator fun next(): com.intellij.psi.PsiTypeParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@15c43489]
T: PsiTypeParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: JavaTypeImpl<out (com.intellij.psi.PsiType..com.intellij.psi.PsiType?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: JavaTypeImpl<out (com.intellij.psi.PsiType..com.intellij.psi.PsiType?)>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35cebaa3]
T: Map<FqName?, JavaAnnotation>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35cebaa3]
T: Map<FqName?, JavaAnnotation>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Name

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Name

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35cebaa3]
T: DataFlowValue

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35cebaa3]
T: DataFlowValue

public final val first: org.jetbrains.kotlin.descriptors.ClassDescriptor defined in kotlin.Pair[DeserializedPropertyDescriptor@69719b7]
A: ClassDescriptor

public final val second: org.jetbrains.kotlin.name.Name defined in kotlin.Pair[DeserializedPropertyDescriptor@7908640c]
B: Name

public abstract operator fun getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@e49652e]
T: FunctionDescriptor

public abstract operator fun getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): org.jetbrains.kotlin.descriptors.FunctionDescriptor defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@2d6aae72]
T: FunctionDescriptor

public final operator fun component1(): org.jetbrains.kotlin.descriptors.ClassConstructorDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3162cac]
A: ClassConstructorDescriptor

public final operator fun component2(): org.jetbrains.kotlin.descriptors.TypeAliasDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5ee46a22]
B: TypeAliasDescriptor

public abstract operator fun getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@59adc3d5]
T: FunctionDescriptor

public abstract operator fun getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): org.jetbrains.kotlin.descriptors.FunctionDescriptor defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@43affb62]
T: FunctionDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35cebaa3]
T: Map<TypeParameterDescriptor, (org.jetbrains.kotlin.descriptors.TypeParameterDescriptor..org.jetbrains.kotlin.descriptors.TypeParameterDescriptor?)>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35cebaa3]
T: Map<TypeParameterDescriptor, (org.jetbrains.kotlin.descriptors.TypeParameterDescriptor..org.jetbrains.kotlin.descriptors.TypeParameterDescriptor?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: FqName

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5ecce3c0]
T: StorageComponentContainer


public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@4cc83d13]
T: Jsr305State

public final operator fun component1(): org.jetbrains.kotlin.metadata.jvm.deserialization.JvmNameResolver defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@725221df]
A: JvmNameResolver

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.Class defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@59ea06f4]
B: Class

public final operator fun component1(): org.jetbrains.kotlin.metadata.jvm.deserialization.JvmNameResolver defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1d231e25]
A: JvmNameResolver

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.Package defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2905b732]
B: Package

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@79cf448d]
E: TypeProjection

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@79cf448d]
E: TypeProjection

public abstract operator fun invoke(p1: org.jetbrains.kotlin.descriptors.CallableMemberDescriptor): kotlin.Unit defined in kotlin.Function1[FunctionInvokeDescriptor@17aa7c12]
R: Unit

public final operator fun component1(): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1917e567]
A: TypeProjection

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: JavaClassImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: JavaClassifierImpl<out (com.intellij.psi.PsiClass..com.intellij.psi.PsiClass?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: JavaClassifierImpl<out (com.intellij.psi.PsiClass..com.intellij.psi.PsiClass?)>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5ecce3c0]
T: ResolutionResult

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@23d11f2f]
R: ResolutionResult

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@23d11f2f]
R: ResolutionResult

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: List<(com.intellij.psi.PsiTypeParameter..com.intellij.psi.PsiTypeParameter?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: List<(com.intellij.psi.PsiTypeParameter..com.intellij.psi.PsiTypeParameter?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Name


public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.load.java.structure.impl.classFiles.BinaryJavaValueParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3c78ae3a]
E: BinaryJavaValueParameter

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.load.java.structure.impl.classFiles.BinaryJavaValueParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3c78ae3a]
E: BinaryJavaValueParameter

public final operator fun component1(): org.jetbrains.kotlin.load.java.structure.JavaAnnotation defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@56666b1f]
A: JavaAnnotation

public final operator fun component2(): org.jetbrains.org.objectweb.asm.AnnotationVisitor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2d6519a3]
B: AnnotationVisitor

public final operator fun component1(): org.jetbrains.kotlin.load.java.structure.JavaAnnotation defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@bb0dc5e]
A: JavaAnnotation

public final operator fun component2(): org.jetbrains.org.objectweb.asm.AnnotationVisitor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7e637635]
B: AnnotationVisitor

private final val sink: (org.jetbrains.kotlin.load.java.structure.JavaAnnotationArgument) -> kotlin.Unit defined in org.jetbrains.kotlin.load.java.structure.impl.classFiles.BinaryJavaAnnotationVisitor[PropertyDescriptorImpl@64ef5db9] +++|+++
R: Unit

public final operator fun component1(): org.jetbrains.kotlin.load.java.structure.JavaAnnotation defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5ba9c6cc]
A: JavaAnnotation

public final operator fun component2(): org.jetbrains.org.objectweb.asm.AnnotationVisitor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@45564acb]
B: AnnotationVisitor

private final val sink: (org.jetbrains.kotlin.load.java.structure.JavaAnnotationArgument) -> kotlin.Unit defined in org.jetbrains.kotlin.load.java.structure.impl.classFiles.BinaryJavaAnnotationVisitor[PropertyDescriptorImpl@64ef5db9] +++|+++
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: PlainJavaArrayAnnotationArgument

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: PlainJavaArrayAnnotationArgument

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3802b230]
R: JavaType

public final operator fun component1(): org.jetbrains.kotlin.load.java.structure.JavaMember defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@46641309]
A: JavaMember

public final operator fun component2(): org.jetbrains.org.objectweb.asm.MethodVisitor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@53e7f23a]
B: MethodVisitor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5ecce3c0]
T: MutableList<JavaClassifierType>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@55f0eeeb]
T: List<JavaTypeParameter>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@23d11f2f]
R: <no name provided>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: BinaryJavaClass

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3802b230]
R: Map<String, JavaTypeParameter>

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@18e3b4b4]
E: String

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@55f0eeeb]
T: MethodInfo

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: MethodInfo

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: MethodInfo

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.load.java.structure.JavaType defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@108875bf]
E: JavaType

public abstract operator fun next(): kotlin.collections.IndexedValue<kotlin.Char> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7195fdee]
T: IndexedValue<Char>

public final operator fun component2(): kotlin.Char defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@642bd18e]
T: Char

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: KotlinClass

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: File

@org.jetbrains.annotations.NotNull public open fun <D : (org.jetbrains.kotlin.descriptors.CallableMemberDescriptor..org.jetbrains.kotlin.descriptors.CallableMemberDescriptor?)> unwrapFakeOverride(@org.jetbrains.annotations.NotNull p0: D): D defined in org.jetbrains.kotlin.resolve.DescriptorUtils[JavaMethodDescriptor@360f979a]
D: CallableMemberDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptorNonRoot defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3bfcc070]
T: DeclarationDescriptorNonRoot

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptorNonRoot defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7efb3ba8]
T: DeclarationDescriptorNonRoot

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@23d11f2f]
R: ResolverForModule

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@23d11f2f]
R: ResolverForModule

public final val packagePartProviderFactory: (org.jetbrains.kotlin.analyzer.ModuleContent<*>) -> org.jetbrains.kotlin.load.kotlin.PackagePartProvider defined in org.jetbrains.kotlin.resolve.jvm.JvmPlatformParameters[PropertyDescriptorImpl@7a8c6d62] +++|+++
R: PackagePartProvider

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54cbda51]
R: Boolean

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.candidateDescriptor: D[MyPropertyDescriptor@389dac27]
D: VariableDescriptor

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@17cd3156]
T: MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)>

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtAnnotationEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2ed593c1]
T: KtAnnotationEntry

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Nothing

@org.jetbrains.annotations.NotNull public open fun <D : (org.jetbrains.kotlin.descriptors.CallableMemberDescriptor..org.jetbrains.kotlin.descriptors.CallableMemberDescriptor?)> unwrapFakeOverride(@org.jetbrains.annotations.NotNull p0: D): D defined in org.jetbrains.kotlin.resolve.DescriptorUtils[JavaMethodDescriptor@360f979a]
D: CallableMemberDescriptor

public inline fun <T, R> kotlin.sequences.Sequence<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@fe0a4f2]
R: PsiElement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: FqName

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: FqName

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Unit

public abstract val value: org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@4848170a]
V: ResolvedValueArgument

public abstract val key: org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@6ab0149c]
K: ValueParameterDescriptor



@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35cebaa3]
T: DataFlowValue

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35cebaa3]
T: DataFlowValue



public abstract operator fun next(): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@50aaac65]
T: TypeProjection

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@74088f80]
D: CallableDescriptor

public abstract operator fun next(): com.intellij.psi.PsiElement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7baf54a]
T: PsiElement

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@74088f80]
D: CallableDescriptor

public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@4cc83d13]
T: JvmDefaultMode

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@32fcb9cc]
T: DeclarationDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Unit

public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@4cc83d13]
T: Boolean

public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@4cc83d13]
T: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Unit

public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@4cc83d13]
T: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtAnnotationEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@306c1595]
T: KtAnnotationEntry

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5e4a6f62]
V: MutableList<AnnotationUseSiteTarget?>

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtAnnotationEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4782e904]
T: KtAnnotationEntry

public final val second: org.jetbrains.kotlin.descriptors.ClassDescriptor defined in kotlin.Pair[DeserializedPropertyDescriptor@379f852d]
B: ClassDescriptor

public abstract fun next(): kotlin.Pair<org.jetbrains.kotlin.psi.KtAnnotationEntry, org.jetbrains.kotlin.descriptors.ClassDescriptor> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@29fa0139]
T: Pair<KtAnnotationEntry, ClassDescriptor>

public final operator fun component1(): org.jetbrains.kotlin.psi.KtAnnotationEntry defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@47b33059]
A: KtAnnotationEntry

public final operator fun component2(): org.jetbrains.kotlin.descriptors.ClassDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2b2190f0]
B: ClassDescriptor

public abstract fun next(): kotlin.Pair<org.jetbrains.kotlin.psi.KtAnnotationEntry, org.jetbrains.kotlin.descriptors.ClassDescriptor> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@5a20af7c]
T: Pair<KtAnnotationEntry, ClassDescriptor>

public final operator fun component1(): org.jetbrains.kotlin.psi.KtAnnotationEntry defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4483841d]
A: KtAnnotationEntry

public final operator fun component2(): org.jetbrains.kotlin.descriptors.ClassDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@39c6e4fc]
B: ClassDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@20ce23fb]
T: KtFile


public abstract operator fun next(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@326998cb]
T: KtFile

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@74088f80]
D: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Requires

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Requires

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Exports

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Exports

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: EnumValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: EnumValue

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@79cf448d]
E: TypeProjection

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@79cf448d]
E: TypeProjection

public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@4cc83d13]
T: JvmDefaultMode

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3ba99624]
T: DeclarationDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Int


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6fc0d7b1]
T: KotlinType

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@752544f6]
T: DeclarationDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5ecce3c0]
T: MyPropertyDescriptor

public abstract operator fun next(): kotlin.Pair<(org.jetbrains.kotlin.descriptors.TypeParameterDescriptor..org.jetbrains.kotlin.descriptors.TypeParameterDescriptor?), (org.jetbrains.kotlin.descriptors.TypeParameterDescriptor..org.jetbrains.kotlin.descriptors.TypeParameterDescriptor?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6cdc2bb2]
T: Pair<(org.jetbrains.kotlin.descriptors.TypeParameterDescriptor..org.jetbrains.kotlin.descriptors.TypeParameterDescriptor?), (org.jetbrains.kotlin.descriptors.TypeParameterDescriptor..org.jetbrains.kotlin.descriptors.TypeParameterDescriptor?)>

public abstract operator fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6cce5c8b]
T: KotlinType

public abstract operator fun next(): @kotlin.jvm.JvmWildcard org.jetbrains.kotlin.descriptors.SimpleFunctionDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4adc3b7c]
T: [@kotlin.jvm.JvmWildcard] SimpleFunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1c5ae2bb]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5ecce3c0]
T: ArrayList<FunctionDescriptor>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5ecce3c0]
T: SamAdapterExtensionFunctionDescriptorImpl

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@74088f80]
D: D

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@74088f80]
D: D

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@74088f80]
D: D

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6e6e9909]
T: AnnotationSerializer

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6e6e9909]
T: AnnotationSerializer

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.name.Name, org.jetbrains.kotlin.resolve.constants.ConstantValue<*>> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@a5192fb]
T: Entry<Name, ConstantValue<*>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6db93757]
K: Name

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1e6a72c]
V: ConstantValue<*>

public abstract operator fun next(): org.jetbrains.kotlin.resolve.constants.ConstantValue<*> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6db2b0f0]
T: ConstantValue<*>

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@38a238ca]
T: TypeProjection

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.descriptors.annotations.AnnotationArgumentVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.resolve.constants.ConstantValue[DeserializedSimpleFunctionDescriptor@27ab8ce7]
R: Unit

public open fun <R, D> accept(contractDescriptionVisitor: org.jetbrains.kotlin.contracts.description.ContractDescriptionVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.contracts.description.BooleanExpression[DeserializedSimpleFunctionDescriptor@3a6493b0]
R: Builder

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@70012d9]
T: Builder

public open fun <R, D> accept(contractDescriptionVisitor: org.jetbrains.kotlin.contracts.description.ContractDescriptionVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.contracts.description.BooleanExpression[DeserializedSimpleFunctionDescriptor@3a6493b0]
R: Builder

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@70012d9]
T: Builder

public open fun <R, D> accept(contractDescriptionVisitor: org.jetbrains.kotlin.contracts.description.ContractDescriptionVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.contracts.description.BooleanExpression[DeserializedSimpleFunctionDescriptor@3a6493b0]
R: Builder

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@70012d9]
T: Builder

public abstract fun <R, D> accept(contractDescriptionVisitor: org.jetbrains.kotlin.contracts.description.ContractDescriptionVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.contracts.description.ContractDescriptionElement[DeserializedSimpleFunctionDescriptor@6d3f9342]
R: Builder

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.CallableMemberDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@589ae711]
T: CallableMemberDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6bad48ca]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6bad48ca]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6bad48ca]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2985444a]
T: AnnotationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@23ce0e3f]
T: TypeProjection

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2f34bd79]
T: DeclarationDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@70012d9]
T: ArrayList<T>

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@50ce5e45]
T: AnnotationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@612e4045]
T: AnnotationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@218bef95]
T: AnnotationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6bb966ec]
T: AnnotationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7fb01571]
T: AnnotationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3a4f1db6]
T: AnnotationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@715f1a6]
T: AnnotationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@39b345b8]
T: AnnotationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@55f5bc9a]
T: AnnotationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7d754b98]
T: AnnotationDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@352fa12d]
R: Int

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@855af6e]
T: String

public abstract operator fun next(): org.jetbrains.kotlin.serialization.StringTableImpl.FqNameProto defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@18aafd00]
T: FqNameProto

public abstract operator fun getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@483c78c8]
T: Boolean

public abstract operator fun getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@7cd1f493]
T: Boolean

public abstract operator fun getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): org.jetbrains.kotlin.codegen.context.CodegenContext<*> defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@44dfbb31]
T: CodegenContext<*>

public abstract operator fun getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): org.jetbrains.kotlin.codegen.context.CodegenContext<*> defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@4cb6278b]
T: CodegenContext<*>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c7bc919]
T: ExpressionCodegen

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: NameGenerator

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: NameGenerator

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: NameGenerator

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: NameGenerator

private final val frameFactory: (kotlin.Int, kotlin.Int) -> org.jetbrains.org.objectweb.asm.tree.analysis.Frame<V> defined in org.jetbrains.kotlin.codegen.optimization.common.CustomFramesMethodAnalyzer[PropertyDescriptorImpl@486fa6ab] +++|+++
R: Frame<V>

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Boolean

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: Diagnostics

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: Diagnostics

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Boolean

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: String

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: String

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: Method

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: Method

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: List<ClassDescriptor>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: List<ClassDescriptor>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: List<ClassDescriptor>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: List<ClassDescriptor>

public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@67139d5e]
T: Boolean

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@14d7d096]
T: KtFile

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: List<String>

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1b0f9017]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1b0f9017]
E: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: HashMap<String, String>

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6d11f0c1]
T: String

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: MethodVisitor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: ClassBuilder

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2bfcacf4]
T: [@kotlin.jvm.JvmWildcard] SimpleFunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: MutableClosure

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: (kotlin.collections.MutableList<(org.jetbrains.kotlin.codegen.FieldInfo..org.jetbrains.kotlin.codegen.FieldInfo?)>..kotlin.collections.List<(org.jetbrains.kotlin.codegen.FieldInfo..org.jetbrains.kotlin.codegen.FieldInfo?)>)

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: MethodNode

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Type

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Type

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: SimpleType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: SimpleType

public final operator fun component2(): kotlin.Pair<kotlin.String, org.jetbrains.kotlin.types.KotlinType> defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@1f110925]
T: Pair<String, KotlinType>

public final val first: kotlin.String defined in kotlin.Pair[DeserializedPropertyDescriptor@2710980a]
A: String

public final val second: org.jetbrains.kotlin.types.KotlinType defined in kotlin.Pair[DeserializedPropertyDescriptor@4ef1e591]
B: KotlinType

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: SimpleFunctionDescriptorImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: JVMConstructorCallNormalizationMode

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: JVMConstructorCallNormalizationMode

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: FunctionDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: FunctionDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: SimpleFunctionDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: SimpleFunctionDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: Field

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: Field

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassBuilder

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassBuilder

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c7bc919]
T: ClassBuilder

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassBuilder

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c7bc919]
T: ClassBuilder

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassBuilder

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassBuilder

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ClassBuilder

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Type

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: ArrayList<CapturedParamDesc>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ArrayList<CapturedParamDesc>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Type

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: ArrayList<CapturedParamDesc>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: ArrayList<CapturedParamDesc>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: List<[@kotlin.internal.NoInfer] CapturedParamInfo>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: List<[@kotlin.internal.NoInfer] CapturedParamInfo>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: Int

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: Int

public abstract fun next(): org.jetbrains.kotlin.codegen.inline.RangeMapping defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@5c4b2e18]
T: RangeMapping

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: FileMapping

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70cafa78]
T: FileMapping

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: String

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: InsnNode

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: Array<out Frame<SourceValue>?>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: Array<out Frame<SourceValue>?>

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2f6f9532]
R: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: IntrinsicMethods

@org.jetbrains.annotations.NotNull public open operator fun <T : (kotlin.Any..kotlin.Any?)> get(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>, @org.jetbrains.annotations.NotNull p1: T): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@6f55911e]
T: JVMAssertionsMode

public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@67139d5e]
T: JvmDefaultMode

@org.jetbrains.annotations.NotNull public open operator fun <T : (kotlin.Any..kotlin.Any?)> get(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>, @org.jetbrains.annotations.NotNull p1: T): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@6f55911e]
T: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: BufferedWriter

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: BufferedWriter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: BufferedWriter

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e883efd]
T: BufferedWriter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: HashMap<String, Type>

@java.lang.SuppressWarnings @org.jetbrains.annotations.NotNull public open fun <D : (org.jetbrains.kotlin.descriptors.CallableMemberDescriptor..org.jetbrains.kotlin.descriptors.CallableMemberDescriptor?)> accessibleDescriptor(@org.jetbrains.annotations.NotNull descriptor: D, @org.jetbrains.annotations.Nullable superCallTarget: org.jetbrains.kotlin.descriptors.ClassDescriptor?): D defined in org.jetbrains.kotlin.codegen.context.FieldOwnerContext[JavaMethodDescriptor@6b2e5ef1]
D: CallableMemberDescriptor

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodParameterSignature defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@633eb795]
E: JvmMethodParameterSignature

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodParameterSignature defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@633eb795]
E: JvmMethodParameterSignature

public abstract operator fun next(): org.jetbrains.kotlin.resolve.jvm.JvmPrimitiveType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@56c1f110]
T: JvmPrimitiveType

public final operator fun component1(): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2bf6821]
A: AbstractInsnNode

public final operator fun component2(): kotlin.collections.List<org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3554369]
B: List<AbstractInsnNode>

public final val first: org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.Pair[DeserializedPropertyDescriptor@7def118b]
A: AbstractInsnNode

public abstract operator fun next(): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@43119cc3]
T: AbstractInsnNode

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.codegen.inline.ParameterInfo defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@54b48eed]
T: ParameterInfo

public final val value: org.jetbrains.kotlin.codegen.inline.ParameterInfo defined in kotlin.collections.IndexedValue[DeserializedPropertyDescriptor@2fea0350]
T: ParameterInfo

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70cafa78]
T: RangeMapping

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode, org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4e79e0ef]
T: Entry<AbstractInsnNode, AbstractInsnNode>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4153fc2c]
K: AbstractInsnNode

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7e7cbb18]
V: AbstractInsnNode

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64187c1e]
V: MutableList<AbstractInsnNode>

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2bfcacf4]
T: [@kotlin.jvm.JvmWildcard] PropertyDescriptor

@org.jetbrains.annotations.NotNull public open fun <K : (kotlin.Any..kotlin.Any?), V : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.resolve.BindingContext, @org.jetbrains.annotations.NotNull p1: org.jetbrains.kotlin.util.slicedMap.ReadOnlySlice<(K..K?), (V..V?)>, @org.jetbrains.annotations.NotNull p2: K, @org.jetbrains.annotations.NotNull p3: kotlin.String): V defined in org.jetbrains.kotlin.resolve.BindingContextUtils[JavaMethodDescriptor@28fd804f]
V: ResolvedCall<(org.jetbrains.kotlin.descriptors.FunctionDescriptor..org.jetbrains.kotlin.descriptors.FunctionDescriptor?)>

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: FunctionDescriptor

@org.jetbrains.annotations.NotNull public open fun <K : (kotlin.Any..kotlin.Any?), V : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.resolve.BindingContext, @org.jetbrains.annotations.NotNull p1: org.jetbrains.kotlin.util.slicedMap.ReadOnlySlice<(K..K?), (V..V?)>, @org.jetbrains.annotations.NotNull p2: K, @org.jetbrains.annotations.NotNull p3: kotlin.String): V defined in org.jetbrains.kotlin.resolve.BindingContextUtils[JavaMethodDescriptor@28fd804f]
V: ResolvedCall<(org.jetbrains.kotlin.descriptors.FunctionDescriptor..org.jetbrains.kotlin.descriptors.FunctionDescriptor?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: TargetId

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: TargetId

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: BuilderFactoryForDuplicateSignatureDiagnostics

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: SignatureDumpingBuilderFactory

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: SignatureDumpingBuilderFactory

public final val value: org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument defined in kotlin.collections.IndexedValue[DeserializedPropertyDescriptor@577f000e]
T: ResolvedValueArgument

public final val value: org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument defined in kotlin.collections.IndexedValue[DeserializedPropertyDescriptor@577f000e]
T: ResolvedValueArgument

@kotlin.Suppress public fun <D : org.jetbrains.kotlin.descriptors.CallableDescriptor?> D.unwrapInitialDescriptorForSuspendFunction(): D defined in org.jetbrains.kotlin.codegen.coroutines in file coroutineCodegenUtil.kt[SimpleFunctionDescriptorImpl@49f63d64]
D: D

public abstract fun next(): org.jetbrains.kotlin.codegen.ArgumentAndDeclIndex defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@418fe34]
T: ArgumentAndDeclIndex

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: D

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: D



@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: BranchedValue

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@36c21667]
E: ValueParameterDescriptor

public abstract operator fun get(index: kotlin.Int): org.jetbrains.org.objectweb.asm.Type defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2d73b2ef]
E: Type

public abstract operator fun next(): kotlin.collections.IndexedValue<(org.jetbrains.kotlin.psi.ValueArgument..org.jetbrains.kotlin.psi.ValueArgument?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1724c1a3]
T: IndexedValue<(org.jetbrains.kotlin.psi.ValueArgument..org.jetbrains.kotlin.psi.ValueArgument?)>

public abstract operator fun get(index: kotlin.Int): org.jetbrains.org.objectweb.asm.Type defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2d73b2ef]
E: Type

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@36c21667]
E: ValueParameterDescriptor

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@36c21667]
E: ValueParameterDescriptor

public abstract operator fun get(index: kotlin.Int): org.jetbrains.org.objectweb.asm.Type defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2d73b2ef]
E: Type

public abstract operator fun get(index: kotlin.Int): org.jetbrains.org.objectweb.asm.Type defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2d73b2ef]
E: Type

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@36c21667]
E: ValueParameterDescriptor

public final val value: org.jetbrains.kotlin.codegen.ArgumentAndDeclIndex defined in kotlin.collections.IndexedValue[DeserializedPropertyDescriptor@56d2eb0b]
T: ArgumentAndDeclIndex

public final val value: org.jetbrains.kotlin.codegen.ArgumentAndDeclIndex defined in kotlin.collections.IndexedValue[DeserializedPropertyDescriptor@fecc04f]
T: ArgumentAndDeclIndex

public abstract operator fun get(index: kotlin.Int): org.jetbrains.org.objectweb.asm.Type defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@388e0b59]
E: Type

public final val first: kotlin.Int defined in kotlin.Pair[DeserializedPropertyDescriptor@6a08913]
A: Int

public final val second: org.jetbrains.kotlin.codegen.StackValue.Local defined in kotlin.Pair[DeserializedPropertyDescriptor@18d52128]
B: Local

public final val first: kotlin.Int defined in kotlin.Pair[DeserializedPropertyDescriptor@7cd2b1e4]
A: Int

public abstract operator fun get(index: kotlin.Int): org.jetbrains.org.objectweb.asm.Type defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@388e0b59]
E: Type

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Nothing

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.codegen.CodeFragmentCodegenInfo.IParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@54773b0f]
E: IParameter

public abstract operator fun next(): org.jetbrains.kotlin.codegen.CalculatedCodeFragmentCodegenInfo.CalculatedParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@421e1e95]
T: CalculatedParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@65046b44]
T: KtFile

public abstract operator fun next(): org.jetbrains.kotlin.codegen.CollectionStubMethodGenerator.CollectionClassPair defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5366fdd0]
T: CollectionClassPair

public final operator fun component1(): org.jetbrains.kotlin.descriptors.impl.MutableClassDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7a4ed734]
A: MutableClassDescriptor

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.descriptors.TypeParameterDescriptor> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2631896d]
B: List<TypeParameterDescriptor>

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.FunctionDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3654dae9]
T: FunctionDescriptor

public final operator fun component1(): org.jetbrains.org.objectweb.asm.commons.Method defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2e6f44ee]
A: Method

public final operator fun component2(): (kotlin.collections.MutableList<(org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodParameterSignature..org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodParameterSignature?)>..kotlin.collections.List<(org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodParameterSignature..org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodParameterSignature?)>) defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@40a42ae9]
B: (kotlin.collections.MutableList<(org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodParameterSignature..org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodParameterSignature?)>..kotlin.collections.List<(org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodParameterSignature..org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodParameterSignature?)>)

public abstract operator fun next(): org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodGenericSignature defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@122550d9]
T: JvmMethodGenericSignature

public abstract operator fun next(): org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodGenericSignature defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4affd4a0]
T: JvmMethodGenericSignature

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.FunctionDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@62fddd49]
T: FunctionDescriptor

public final operator fun component1(): org.jetbrains.kotlin.descriptors.ClassDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@681de655]
A: ClassDescriptor

public final operator fun component2(): org.jetbrains.kotlin.descriptors.ClassDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1127d67d]
B: ClassDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: List<CollectionClassPair>

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70cafa78]
T: KotlinType

public inline fun <T> kotlin.collections.Iterable<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4416bc20]
T: KotlinType

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.name.Name, kotlin.collections.List<org.jetbrains.kotlin.descriptors.CallableMemberDescriptor>> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@77ad84e0]
T: Entry<Name, List<CallableMemberDescriptor>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4153fc2c]
K: Name

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7e7cbb18]
V: List<CallableMemberDescriptor>

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@527016d8]
T: Int

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3804ffbd]
T: ValueParameterDescriptor

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4f592a38]
T: Int

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.ClassConstructorDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@42a44f52]
T: ClassConstructorDescriptor

public abstract fun next(): T defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@67af67ee]
T: T

public abstract val key: com.intellij.psi.PsiElement defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@f8aa979]
K: PsiElement

public abstract val key: com.intellij.psi.PsiElement defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@5d3884a7]
K: PsiElement

public abstract val value: org.jetbrains.kotlin.descriptors.CallableDescriptor defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@3e9094ab]
V: CallableDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@9c7a936]
T: DeclarationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodParameterSignature defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5e2910db]
T: JvmMethodParameterSignature

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: MutableClassDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: MutableList<KotlinType>

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.ClassDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@d18beba]
E: ClassDescriptor

@java.lang.SuppressWarnings @org.jetbrains.annotations.NotNull public open fun <D : (org.jetbrains.kotlin.descriptors.CallableMemberDescriptor..org.jetbrains.kotlin.descriptors.CallableMemberDescriptor?)> accessibleDescriptor(@org.jetbrains.annotations.NotNull descriptor: D, @org.jetbrains.annotations.Nullable superCallTarget: org.jetbrains.kotlin.descriptors.ClassDescriptor?): D defined in org.jetbrains.kotlin.codegen.context.MethodContext[JavaMethodDescriptor@70bb8d26]
D: FunctionDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1a61f2ca]
T: KtFile

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.MemberDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4f8c2638]
T: MemberDescriptor

public abstract operator fun invoke(): kotlin.Unit defined in kotlin.Function0[FunctionInvokeDescriptor@1dc464ee]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2de7b53a]
T: KtDeclaration

public abstract operator fun next(): org.jetbrains.kotlin.serialization.deserialization.descriptors.DeserializedCallableMemberDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6673cfc6]
T: [@kotlin.internal.NoInfer] DeserializedCallableMemberDescriptor

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@49b244e8]
T: String

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: MethodVisitor

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3f6c5508]
T: KtDeclaration

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodParameterSignature defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@633eb795]
E: JvmMethodParameterSignature

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodParameterSignature defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@633eb795]
E: JvmMethodParameterSignature

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5f575ec9]
E: ValueParameterDescriptor

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodParameterSignature defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@633eb795]
E: JvmMethodParameterSignature

public open fun computeIfAbsent(p0: org.jetbrains.kotlin.name.FqName, p1: java.util.function.Function<in org.jetbrains.kotlin.name.FqName, out org.jetbrains.kotlin.metadata.jvm.deserialization.PackageParts>): org.jetbrains.kotlin.metadata.jvm.deserialization.PackageParts defined in kotlin.collections.MutableMap[JavaMethodDescriptor@6b7f16b2]
V: PackageParts

public final operator fun component1(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@fb63061]
A: Int

public final operator fun component2(): org.jetbrains.kotlin.codegen.FieldInfo defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@33c9549b]
B: FieldInfo

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2bfcacf4]
T: [@kotlin.jvm.JvmWildcard] SimpleFunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: PropertyGetterDescriptorImpl

@org.jetbrains.annotations.NotNull public open fun <D : (org.jetbrains.kotlin.descriptors.CallableMemberDescriptor..org.jetbrains.kotlin.descriptors.CallableMemberDescriptor?)> unwrapFakeOverride(@org.jetbrains.annotations.NotNull p0: D): D defined in org.jetbrains.kotlin.resolve.DescriptorUtils[JavaMethodDescriptor@67755159]
D: FunctionDescriptor

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64187c1e]
V: Type

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: FieldVisitor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.ScriptDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@43670e7a]
T: ScriptDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: InstructionAdapter

public final val shouldGenerate: (org.jetbrains.kotlin.resolve.jvm.diagnostics.JvmDeclarationOrigin) -> kotlin.Boolean defined in org.jetbrains.kotlin.codegen.SignatureCollectingClassBuilderFactory[PropertyDescriptorImpl@18de679c] +++|+++
R: Boolean

public final val shouldGenerate: (org.jetbrains.kotlin.resolve.jvm.diagnostics.JvmDeclarationOrigin) -> kotlin.Boolean defined in org.jetbrains.kotlin.codegen.SignatureCollectingClassBuilderFactory[PropertyDescriptorImpl@18de679c] +++|+++
R: Boolean

public final val leaveTasks: (org.jetbrains.kotlin.codegen.StackValue) -> kotlin.Unit defined in org.jetbrains.kotlin.codegen.StackValueWithLeaveTask[PropertyDescriptorImpl@5f0e2989] +++|+++
R: Unit

public final val lambda: (v: org.jetbrains.org.objectweb.asm.commons.InstructionAdapter) -> kotlin.Unit defined in org.jetbrains.kotlin.codegen.OperationStackValue[PropertyDescriptorImpl@5cbcac66] +++|+++
R: Unit




public abstract operator fun next(): org.jetbrains.kotlin.descriptors.FunctionDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@907e9c4]
T: FunctionDescriptor




public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.candidateDescriptor: D[MyPropertyDescriptor@4f184204]
D: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: SimpleType

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: SimpleType

public abstract operator fun next(): org.jetbrains.kotlin.codegen.FieldInfo defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@62cedba8]
T: FieldInfo

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Pair<Int, FieldInfo>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4153fc2c]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7e7cbb18]
V: List<PackageParts>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: PackageParts

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70cafa78]
T: KtClassOrObject

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtClassOrObject defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@23aee23b]
T: KtClassOrObject




public abstract operator fun next(): org.jetbrains.org.objectweb.asm.Type defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3e81f441]
T: Type

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: MutableList<Pair<Int, Type>>

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6d6f41]
T: ValueParameterDescriptor

public abstract operator fun next(): kotlin.Pair<kotlin.Int, org.jetbrains.kotlin.descriptors.VariableDescriptor> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@730cc5f6]
T: Pair<Int, VariableDescriptor>

public final operator fun component1(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@61e96c95]
A: Int

public final operator fun component2(): org.jetbrains.kotlin.descriptors.VariableDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@63e77a89]
B: VariableDescriptor


public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@38aa4272]
E: TypeProjection

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: Local


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Nothing

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: CallableDescriptor

@kotlin.Suppress public fun <D : org.jetbrains.kotlin.descriptors.CallableDescriptor?> D.unwrapInitialDescriptorForSuspendFunction(): D defined in org.jetbrains.kotlin.codegen.coroutines in file coroutineCodegenUtil.kt[SimpleFunctionDescriptorImpl@49f63d64]
D: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: MethodVisitor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: MethodVisitor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: MethodVisitor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: LinkedHashMap<Pair<CallableMemberDescriptor, ClassDescriptor?>, (org.jetbrains.kotlin.codegen.AccessorForCallableDescriptor<*>..org.jetbrains.kotlin.codegen.AccessorForCallableDescriptor<*>?)>

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Field

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Field

public abstract operator fun next(): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3ff7cf6d]
T: AbstractInsnNode

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c7bc919]
T: SimpleFunctionDescriptorImpl

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.ParameterDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6ece9888]
T: ParameterDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

public final operator fun component1(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6f9feb40]
A: Int

public final operator fun component2(): org.jetbrains.org.objectweb.asm.Type defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@33186388]
B: Type

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.ParameterDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1861c611]
T: ParameterDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.ParameterDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4b06365]
T: ParameterDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: List<ReceiverParameterDescriptor>

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.descriptors.DeclarationDescriptor..org.jetbrains.kotlin.descriptors.DeclarationDescriptor?), (org.jetbrains.kotlin.codegen.context.EnclosedValueDescriptor..org.jetbrains.kotlin.codegen.context.EnclosedValueDescriptor?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@78dec210]
T: MutableEntry<(org.jetbrains.kotlin.descriptors.DeclarationDescriptor..org.jetbrains.kotlin.descriptors.DeclarationDescriptor?), (org.jetbrains.kotlin.codegen.context.EnclosedValueDescriptor..org.jetbrains.kotlin.codegen.context.EnclosedValueDescriptor?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Type

public abstract operator fun next(): org.jetbrains.kotlin.codegen.coroutines.SuspensionPoint defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1347abcb]
T: SuspensionPoint

public final val value: org.jetbrains.kotlin.codegen.coroutines.SuspensionPoint defined in kotlin.collections.IndexedValue[DeserializedPropertyDescriptor@17a0a82b]
T: SuspensionPoint

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: InsnList

public inline fun <T, R> kotlin.Array<out T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@e6468af]
R: Int

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c7bc919]
T: LabelNode

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: LabelNode

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c7bc919]
T: LabelNode

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: LabelNode

public abstract operator fun next(): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@21aa5a06]
T: AbstractInsnNode

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1b8873d0]
T: Int

public abstract operator fun next(): org.jetbrains.kotlin.codegen.coroutines.SuspensionPoint defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1e11cf43]
T: SuspensionPoint

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Boolean

public inline fun <T, R> kotlin.Array<out T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@e6468af]
R: Int

public inline fun <T, R> kotlin.Array<out T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@e6468af]
R: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Unit

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.codegen.coroutines.CoroutineTransformerMethodVisitor.SpilledVariableDescriptor> defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@6b2406f]
T: List<SpilledVariableDescriptor>

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@11894e1d]
T: Int

public abstract operator fun next(): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7c8694fd]
T: AbstractInsnNode

public abstract operator fun next(): org.jetbrains.kotlin.codegen.coroutines.SuspensionPoint defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@368e4c6e]
T: SuspensionPoint

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.codegen.optimization.common.VariableLivenessFrame defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@74d688a9]
E: VariableLivenessFrame

public final operator fun component1(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@49125e0d]
A: Int

public abstract operator fun next(): kotlin.Pair<kotlin.Int, (org.jetbrains.org.objectweb.asm.tree.analysis.BasicValue..org.jetbrains.org.objectweb.asm.tree.analysis.BasicValue?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1427925c]
T: Pair<Int, (org.jetbrains.org.objectweb.asm.tree.analysis.BasicValue..org.jetbrains.org.objectweb.asm.tree.analysis.BasicValue?)>

public final operator fun component1(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4202898c]
A: Int

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

public abstract val key: org.jetbrains.org.objectweb.asm.Type defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@57f11215]
K: Type

public abstract val key: org.jetbrains.org.objectweb.asm.Type defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@57f11215]
K: Type

public abstract val value: kotlin.Int defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@571c2283]
V: Int

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4153fc2c]
K: Type

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7e7cbb18]
V: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64187c1e]
V: List<AbstractInsnNode>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64187c1e]
V: List<AbstractInsnNode>

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7b4f42a0]
T: Int

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@37e9caf4]
T: Int

public abstract fun next(): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@18ff0b67]
T: AbstractInsnNode

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Int

public abstract operator fun next(): kotlin.Pair<org.jetbrains.org.objectweb.asm.Type, kotlin.Int> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7b606c8c]
T: Pair<Type, Int>

public final operator fun component1(): org.jetbrains.org.objectweb.asm.Type defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@41813326]
A: Type

public final operator fun component2(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3ec15bc7]
B: Int

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: InstructionAdapter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: MutableList<Pair<Type, Int>>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Int

public abstract operator fun next(): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@73f487dd]
T: AbstractInsnNode

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode, org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@647a1a17]
T: Entry<AbstractInsnNode, AbstractInsnNode>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4153fc2c]
K: AbstractInsnNode

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7e7cbb18]
V: AbstractInsnNode

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode, org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6f4e2d2d]
T: Entry<AbstractInsnNode, AbstractInsnNode>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4153fc2c]
K: AbstractInsnNode

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7e7cbb18]
V: AbstractInsnNode


public abstract operator fun next(): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3ef13cad]
T: AbstractInsnNode

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode, org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@23e09104]
T: Entry<AbstractInsnNode, AbstractInsnNode>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4153fc2c]
K: AbstractInsnNode

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7e7cbb18]
V: AbstractInsnNode


public abstract operator fun next(): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@60c9cf57]
T: AbstractInsnNode

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Type

private final val newMethod: (org.jetbrains.kotlin.resolve.jvm.diagnostics.JvmDeclarationOrigin, kotlin.Int, kotlin.String, kotlin.String) -> org.jetbrains.org.objectweb.asm.MethodVisitor defined in org.jetbrains.kotlin.codegen.coroutines.MethodNodeCopyingMethodVisitor[PropertyDescriptorImpl@25d19c9f] +++|+++
R: MethodVisitor

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@163e8336]
E: ValueParameterDescriptor

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@163e8336]
E: ValueParameterDescriptor

public abstract operator fun next(): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@157247ab]
T: AbstractInsnNode

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: VariableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Boolean

@kotlin.Suppress public fun <D : org.jetbrains.kotlin.descriptors.CallableDescriptor?> D.unwrapInitialDescriptorForSuspendFunction(): D defined in org.jetbrains.kotlin.codegen.coroutines in file coroutineCodegenUtil.kt[SimpleFunctionDescriptorImpl@49f63d64]
D: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Nothing


@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

@kotlin.Suppress public fun <D : org.jetbrains.kotlin.descriptors.CallableDescriptor?> D.unwrapInitialDescriptorForSuspendFunction(): D defined in org.jetbrains.kotlin.codegen.coroutines in file coroutineCodegenUtil.kt[SimpleFunctionDescriptorImpl@49f63d64]
D: FunctionDescriptor

public abstract operator fun next(): kotlin.collections.IndexedValue<(org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode..org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@f5604ce]
T: IndexedValue<(org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode..org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Unit

public abstract operator fun next(): org.jetbrains.org.objectweb.asm.Type defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@22c2490c]
T: Type

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64187c1e]
V: MutableSet<AbstractInsnNode>

public abstract operator fun next(): org.jetbrains.org.objectweb.asm.tree.analysis.BasicValue defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@288333a7]
T: BasicValue

public final val first: org.jetbrains.org.objectweb.asm.Type defined in kotlin.Pair[DeserializedPropertyDescriptor@6f24af28]
A: Type

public final val second: kotlin.collections.List<org.jetbrains.org.objectweb.asm.tree.analysis.SourceValue> defined in kotlin.Pair[DeserializedPropertyDescriptor@6e30fa66]
B: List<SourceValue>

public abstract operator fun next(): kotlin.collections.IndexedValue<(org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode..org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@510ffa6e]
T: IndexedValue<(org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode..org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode?)>

public final operator fun component1(): org.jetbrains.org.objectweb.asm.Type defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2922f09c]
A: Type

public final operator fun component2(): kotlin.collections.List<org.jetbrains.org.objectweb.asm.tree.analysis.SourceValue> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@25a2088c]
B: List<SourceValue>

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.codegen.coroutines.VarExpectedTypeFrame defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4b7fa598]
E: VarExpectedTypeFrame

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.org.objectweb.asm.Type?> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@fc925dd]
T: IndexedValue<Type?>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: PropertyGetterDescriptorImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: PropertySetterDescriptorImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: PropertyGetterDescriptorImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: PropertyGetterDescriptorImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: PropertySetterDescriptorImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: PropertySetterDescriptorImpl

public abstract operator fun next(): kotlin.collections.IndexedValue<(org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodParameterSignature..org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodParameterSignature?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3874c0e]
T: IndexedValue<(org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodParameterSignature..org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodParameterSignature?)>

public abstract fun next(): org.jetbrains.org.objectweb.asm.tree.MethodNode defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@62680038]
T: MethodNode

public abstract val key: kotlin.String defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@e4981f3]
K: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Pair<MessageLite, JvmStringTable>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Pair<MessageLite, JvmStringTable>

public final operator fun component1(): org.jetbrains.kotlin.protobuf.MessageLite defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@424fc705]
A: MessageLite

public final operator fun component2(): org.jetbrains.kotlin.metadata.jvm.serialization.JvmStringTable defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@72282693]
B: JvmStringTable

public final operator fun component1(): org.jetbrains.kotlin.metadata.jvm.deserialization.JvmNameResolver defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@640e413b]
A: JvmNameResolver

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.Class defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7fc46404]
B: Class

public final operator fun component1(): org.jetbrains.kotlin.metadata.jvm.deserialization.JvmNameResolver defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3a477fff]
A: JvmNameResolver

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.Function defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4e492cc9]
B: Function

public abstract operator fun next(): org.jetbrains.kotlin.codegen.inline.ParameterInfo defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6b855ea5]
T: ParameterInfo

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.codegen.inline.NewJavaField defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5e52c633]
E: NewJavaField

public abstract operator fun next(): org.jetbrains.kotlin.codegen.inline.CapturedParamInfo defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7dcf3a94]
T: CapturedParamInfo

public abstract operator fun next(): org.jetbrains.kotlin.codegen.inline.CapturedParamInfo defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@689e34f1]
T: CapturedParamInfo

public abstract fun next(): org.jetbrains.kotlin.codegen.inline.LambdaInfo defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@670129b6]
T: LambdaInfo

public abstract operator fun next(): org.jetbrains.kotlin.codegen.inline.CapturedParamDesc defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@d968a48]
T: CapturedParamDesc

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64187c1e]
V: MutableList<String>

public abstract operator fun next(): org.jetbrains.kotlin.codegen.inline.TryCatchBlockNodeInfo defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6bf549e9]
T: TryCatchBlockNodeInfo

public abstract operator fun next(): org.jetbrains.kotlin.codegen.inline.LocalVarNodeWrapper defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3e4a226a]
T: LocalVarNodeWrapper

public final val first: org.jetbrains.org.objectweb.asm.tree.LabelNode defined in kotlin.Pair[DeserializedPropertyDescriptor@4985e217]
A: LabelNode

public final val second: org.jetbrains.org.objectweb.asm.tree.LabelNode defined in kotlin.Pair[DeserializedPropertyDescriptor@3b7cb6c2]
B: LabelNode

private final val resultNode: () -> org.jetbrains.org.objectweb.asm.MethodVisitor defined in org.jetbrains.kotlin.codegen.inline.DeferredMethodVisitor[PropertyDescriptorImpl@57007ef6] +++|+++
R: MethodVisitor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: FictitiousArrayConstructor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Nothing

public abstract operator fun get(index: kotlin.Int): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@55b3dfb6]
E: AbstractInsnNode

public abstract operator fun get(index: kotlin.Int): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@55b3dfb6]
E: AbstractInsnNode

public abstract operator fun get(index: kotlin.Int): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@55b3dfb6]
E: AbstractInsnNode

public abstract operator fun next(): org.jetbrains.kotlin.codegen.inline.CapturedParamInfo defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2ac3d609]
T: CapturedParamInfo

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c7bc919]
T: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.codegen.inline.DefaultLambda defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@798679f7]
T: DefaultLambda

public abstract operator fun next(): org.jetbrains.kotlin.codegen.inline.MethodInliner.PointForExternalFinallyBlocks defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3b7b28b1]
T: PointForExternalFinallyBlocks

public abstract fun next(): org.jetbrains.kotlin.codegen.inline.LocalVarNodeWrapper defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@373fce0]
T: LocalVarNodeWrapper

public abstract fun next(): org.jetbrains.kotlin.codegen.inline.FunctionalArgument defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@6b7e0f66]
T: FunctionalArgument

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.codegen.inline.CapturedParamDesc defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6def0dfa]
E: CapturedParamDesc

public final operator fun get(index: kotlin.Int): org.jetbrains.kotlin.codegen.inline.ParameterInfo defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@132d7610]
T: ParameterInfo

public final operator fun get(index: kotlin.Int): org.jetbrains.kotlin.codegen.inline.ParameterInfo defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@400475b5]
T: ParameterInfo

public final operator fun get(index: kotlin.Int): org.jetbrains.kotlin.codegen.inline.ParameterInfo defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@1e463475]
T: ParameterInfo

val possibleLazyTask: () -> kotlin.Unit defined in org.jetbrains.kotlin.codegen.inline.InlineCodegen.recordParameterValueInLocalVal[LocalVariableDescriptor@21e53809] +++|+++
R: Unit

public abstract fun next(): org.jetbrains.kotlin.codegen.inline.FunctionalArgument defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@2e70f986]
T: FunctionalArgument

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.codegen.inline.CapturedParamDesc> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2dbdfd39]
T: IndexedValue<CapturedParamDesc>

public final operator fun component2(): org.jetbrains.kotlin.codegen.inline.CapturedParamDesc defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@35487eb3]
T: CapturedParamDesc

public inline fun <K, V> com.intellij.util.containers.SLRUMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in org.jetbrains.kotlin.codegen.inline in file InlineCache.kt[SimpleFunctionDescriptorImpl@b0f658b]
V: SMAPAndMethodNode

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c7bc919]
T: MethodNode

public inline fun <K, V> com.intellij.util.containers.SLRUMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in org.jetbrains.kotlin.codegen.inline in file InlineCache.kt[SimpleFunctionDescriptorImpl@b0f658b]
V: ByteArray

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Boolean

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c7bc919]
T: PsiExpressionLambda

public abstract operator fun invoke(): kotlin.Unit defined in kotlin.Function0[FunctionInvokeDescriptor@1a619d8e]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.codegen.inline.CapturedParamDesc defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@15d915]
T: CapturedParamDesc

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2bfcacf4]
T: [@kotlin.jvm.JvmWildcard] SimpleFunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: SimpleFunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: List<CapturedParamDesc>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: List<CapturedParamDesc>

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c7bc919]
T: MethodNode

public abstract fun next(): org.jetbrains.kotlin.codegen.inline.TransformationInfo defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@778c9f5c]
T: TransformationInfo

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Boolean

public abstract operator fun next(): org.jetbrains.kotlin.codegen.inline.CapturedParamDesc defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1cf3b41e]
T: CapturedParamDesc

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Pair<MethodInsnNode, AbstractInsnNode>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Pair<MethodInsnNode, AbstractInsnNode>

public final operator fun component1(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7f890ef6]
A: Int

public final operator fun component2(): org.jetbrains.kotlin.codegen.inline.CapturedParamDesc defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@227fe34a]
B: CapturedParamDesc

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Unit

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@160b96ec]
T: Int

public abstract operator fun next(): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@24d9fa64]
T: AbstractInsnNode

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Boolean

public abstract operator fun next(): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4e428cf5]
T: AbstractInsnNode

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Boolean

public abstract operator fun next(): kotlin.collections.IndexedValue<(org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode..org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@51519535]
T: IndexedValue<(org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode..org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode?)>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c7bc919]
T: CapturedParamDesc

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: MutableList<AbstractInsnNode>

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6d11f0c1]
T: AbstractInsnNode

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c7bc919]
T: AbstractInsnNode

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: MutableList<AbstractInsnNode>

public abstract operator fun get(index: kotlin.Int): org.jetbrains.org.objectweb.asm.Type defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@305fff30]
E: Type

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.ParameterDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@406d0ada]
E: ParameterDescriptor

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@19e8632]
E: ValueParameterDescriptor

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c7bc919]
T: FunctionalArgument

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Nothing

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodParameterSignature defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6e1e895d]
E: JvmMethodParameterSignature

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodParameterSignature defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6e1e895d]
E: JvmMethodParameterSignature

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c7bc919]
T: Int

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: MethodNode

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70cafa78]
T: MethodNode

public inline fun <T> kotlin.sequences.Sequence<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@14d01618]
T: AbstractInsnNode

public inline fun <T> kotlin.sequences.Sequence<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@14d01618]
T: AbstractInsnNode

public inline fun <T> kotlin.sequences.Sequence<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@14d01618]
T: AbstractInsnNode

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.codegen.inline.ParameterInfo defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@7d7419d1]
E: ParameterInfo

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c7bc919]
T: CapturedParamInfo


public final operator fun component2(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@d3453d0]
B: KotlinType



public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70cafa78]
T: RangeMapping

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.codegen.inline.RangeMapping defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2dfceea7]
E: RangeMapping

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64187c1e]
V: RawFileMapping

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6d11f0c1]
T: RangeMapping

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.codegen.inline.RangeMapping defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@307c1459]
E: RangeMapping

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: FileMapping

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4a7d360d]
T: String

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4a7d360d]
T: String

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5dfae60e]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Type

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: JvmKotlinType

public final val first: org.jetbrains.org.objectweb.asm.tree.LabelNode defined in kotlin.Pair[DeserializedPropertyDescriptor@62eb11b2]
A: LabelNode

public final val second: org.jetbrains.org.objectweb.asm.tree.LabelNode defined in kotlin.Pair[DeserializedPropertyDescriptor@312b5a67]
B: LabelNode

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64187c1e]
V: TryBlockCluster<T>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: TypeRemapper

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: HashMap<String, (kotlin.String..kotlin.String?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Unit

public abstract operator fun next(): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@58fbd451]
T: AbstractInsnNode

private final val isCapturedSuspendLambda: (org.jetbrains.org.objectweb.asm.tree.FieldInsnNode) -> kotlin.Boolean defined in org.jetbrains.kotlin.codegen.inline.coroutines.SurroundSuspendLambdaCallsWithSuspendMarkersMethodVisitor[PropertyDescriptorImpl@34845b64] +++|+++
R: Boolean

public abstract operator fun next(): kotlin.Pair<org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode, org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5ff2b31e]
T: Pair<AbstractInsnNode, AbstractInsnNode>

public final operator fun component1(): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6ca16666]
A: AbstractInsnNode

public final operator fun component2(): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3c9ca569]
B: AbstractInsnNode

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Boolean

public final operator fun get(index: kotlin.Int): kotlin.Int defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@45d261a]
T: Int

public abstract operator fun get(index: kotlin.Int): kotlin.Int defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3e20c901]
E: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Unit

public final operator fun component1(): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@130e6f41]
A: AbstractInsnNode

public final operator fun component2(): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6abf2aa5]
B: AbstractInsnNode

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@10410953]
T: AbstractInsnNode

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: MutableCollection<AbstractInsnNode>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Boolean

public final operator fun component3(): kotlin.Boolean defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@bfffdf7]
C: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Nothing

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c7bc919]
T: <no name provided>

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2bfcacf4]
T: TypeParameterDescriptor

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2bfcacf4]
T: TypeParameterDescriptor

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@38aa4272]
E: TypeProjection

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.resolve.jvm.jvmSignature.JvmMethodParameterSignature defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@92bc53d]
E: JvmMethodParameterSignature

public fun <T> kotlin.Array<out T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@59730176]
T: Type

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.psi.KtExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2acd46f]
E: KtExpression

private final val invoke: org.jetbrains.kotlin.codegen.intrinsics.IntrinsicCallable.(v: org.jetbrains.org.objectweb.asm.commons.InstructionAdapter) -> kotlin.Unit defined in org.jetbrains.kotlin.codegen.intrinsics.IntrinsicCallable[PropertyDescriptorImpl@4b8f57cb] +++|+++
R: Unit


public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: ProperTrackedReferenceValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: ProperTrackedReferenceValue

public abstract operator fun next(): org.jetbrains.kotlin.codegen.optimization.common.ReferenceValueDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6c71dfe]
T: ReferenceValueDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Boolean

public abstract fun next(): org.jetbrains.kotlin.codegen.optimization.CapturedVarsOptimizationMethodTransformer.CapturedVarDescriptor defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@42772087]
T: CapturedVarDescriptor

public abstract fun next(): org.jetbrains.kotlin.codegen.optimization.CapturedVarsOptimizationMethodTransformer.CapturedVarDescriptor defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@58b337bc]
T: CapturedVarDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Unit


@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c7bc919]
T: ArrayList<Function0<Unit>>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Unit

public final operator fun get(index: kotlin.Int): org.jetbrains.kotlin.codegen.optimization.ConstantConditionEliminationMethodTransformer.IConstValue defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@5b3518a6]
T: IConstValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Unit

public abstract fun next(): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@c2f29a6]
T: AbstractInsnNode

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: HashSet<LabelNode>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: List<(org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode..org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode?)>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c7bc919]
T: TaintedBoxedValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Nothing

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64187c1e]
V: BoxedBasicValue

public abstract operator fun get(index: kotlin.Int): org.jetbrains.org.objectweb.asm.tree.analysis.BasicValue defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5500641]
E: BasicValue

public abstract operator fun get(index: kotlin.Int): org.jetbrains.org.objectweb.asm.tree.analysis.BasicValue defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5500641]
E: BasicValue

public abstract operator fun get(index: kotlin.Int): org.jetbrains.org.objectweb.asm.tree.analysis.BasicValue defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5500641]
E: BasicValue

public abstract operator fun get(index: kotlin.Int): org.jetbrains.org.objectweb.asm.tree.analysis.BasicValue defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5500641]
E: BasicValue

public abstract operator fun next(): org.jetbrains.org.objectweb.asm.tree.analysis.BasicValue defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7949b1af]
T: BasicValue


@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component1(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1bb89901]
T: BasicValue

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component2(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@15ce9b3d]
T: BasicValue


public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode, org.jetbrains.kotlin.codegen.optimization.boxing.PopBackwardPropagationTransformer.Transformer.Transformation> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@60445aa0]
T: MutableEntry<AbstractInsnNode, Transformation>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4153fc2c]
K: AbstractInsnNode

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7e7cbb18]
V: Transformation

public abstract fun next(): org.jetbrains.org.objectweb.asm.tree.analysis.SourceValue defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@797cb3d3]
T: SourceValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Unit

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70cafa78]
T: [@kotlin.internal.NoInfer] BoxedBasicValue

public abstract operator fun next(): org.jetbrains.kotlin.codegen.optimization.boxing.BoxedBasicValue defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@62407b05]
T: [@kotlin.internal.NoInfer] BoxedBasicValue

public abstract operator fun next(): org.jetbrains.org.objectweb.asm.tree.analysis.BasicValue defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@10c01272]
T: BasicValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Boolean

public abstract fun next(): kotlin.Int defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@2cde5ed3]
T: Int

public abstract operator fun next(): com.intellij.openapi.util.Pair<org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode, org.jetbrains.org.objectweb.asm.Type> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6eab4cd9]
T: Pair<AbstractInsnNode, Type>

public abstract operator fun next(): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@43017c97]
T: AbstractInsnNode

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Unit


public final operator fun get(index: kotlin.Int): kotlin.collections.MutableList<kotlin.Int> defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@78ffa78c]
T: MutableList<Int>

public final operator fun get(index: kotlin.Int): kotlin.collections.MutableList<kotlin.Int> defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@36b5ff6d]
T: MutableList<Int>

public final operator fun get(index: kotlin.Int): kotlin.collections.MutableList<kotlin.Int> defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@78ffa78c]
T: MutableList<Int>

public final operator fun get(index: kotlin.Int): kotlin.collections.MutableList<kotlin.Int> defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@36b5ff6d]
T: MutableList<Int>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c7bc919]
T: Set<ReferenceValueDescriptor>




public abstract operator fun next(): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3027baf0]
T: AbstractInsnNode

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7f94b0e6]
T: Int

public abstract fun get(index: kotlin.Int): F defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@3169e2c7]
E: F

public abstract fun get(index: kotlin.Int): F defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@3169e2c7]
E: F

public abstract operator fun set(index: kotlin.Int, element: F): F defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4135bd38]
E: F

public abstract operator fun set(index: kotlin.Int, element: F): F defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4135bd38]
E: F

public final operator fun get(index: kotlin.Int): java.util.BitSet defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@52b35be5]
T: BitSet

public final operator fun get(index: kotlin.Int): java.util.BitSet defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@776f2ee1]
T: BitSet

public abstract operator fun next(): org.jetbrains.kotlin.codegen.optimization.fixStack.DecompiledTryDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@60035782]
T: DecompiledTryDescriptor

public abstract fun next(): org.jetbrains.org.objectweb.asm.tree.LabelNode defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@2a5d0d75]
T: LabelNode

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64187c1e]
V: DecompiledTryDescriptor

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64187c1e]
V: DecompiledTryDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

public abstract fun next(): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@11a315d2]
T: AbstractInsnNode

@kotlin.internal.InlineOnly public inline fun <K, V> kotlin.collections.Map<K, V>.getOrElse(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@e358bc7]
V: List<BasicValue>



public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6d11f0c1]
T: BasicValue

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2f6f9532]
R: Int

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

public abstract operator fun next(): org.jetbrains.org.objectweb.asm.tree.analysis.BasicValue defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@25d0176b]
T: BasicValue

public abstract operator fun next(): org.jetbrains.org.objectweb.asm.tree.analysis.BasicValue defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1950d103]
T: BasicValue

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

public abstract operator fun next(): org.jetbrains.org.objectweb.asm.tree.analysis.BasicValue defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@77b32f32]
T: BasicValue

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Boolean

public abstract operator fun get(index: kotlin.Int): org.jetbrains.org.objectweb.asm.tree.analysis.BasicValue defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5b0ef8b4]
E: BasicValue

public abstract operator fun get(index: kotlin.Int): org.jetbrains.org.objectweb.asm.tree.analysis.BasicValue defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5b0ef8b4]
E: BasicValue

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode, org.jetbrains.kotlin.codegen.optimization.common.StrictBasicValue> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1dca9a97]
T: Entry<AbstractInsnNode, StrictBasicValue>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4153fc2c]
K: AbstractInsnNode

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7e7cbb18]
V: StrictBasicValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Unit

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64187c1e]
V: MutableList<AbstractInsnNode>

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<kotlin.Int, kotlin.collections.MutableList<org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode>> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@73b92aba]
T: MutableEntry<Int, MutableList<AbstractInsnNode>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4153fc2c]
K: Int

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7e7cbb18]
V: MutableList<AbstractInsnNode>

public abstract fun next(): org.jetbrains.org.objectweb.asm.tree.AbstractInsnNode defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@3e19af54]
T: AbstractInsnNode

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Unit

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<org.jetbrains.org.objectweb.asm.tree.JumpInsnNode, org.jetbrains.org.objectweb.asm.tree.LabelNode> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@26b19555]
T: MutableEntry<JumpInsnNode, LabelNode>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4153fc2c]
K: JumpInsnNode

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7e7cbb18]
V: LabelNode


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: ArrayList<MethodTransformer>

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: FunctionDescriptor


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Boolean

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: CallableDescriptor

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c7bc919]
T: Local

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.VariableDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5925dab2]
T: VariableDescriptor

public abstract fun next(): java.lang.Runnable defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@7ea87698]
T: Runnable

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: FunctionDescriptor

public abstract fun next(): () -> kotlin.Unit defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@42fc24f7]
T: Function0<Unit>

val task: () -> kotlin.Unit defined in org.jetbrains.kotlin.codegen.range.forLoop.AbstractWithIndexForLoopGenerator.afterLoop[LocalVariableDescriptor@3857edc2] +++|+++
R: Unit

@org.jetbrains.annotations.NotNull public open fun <K : (kotlin.Any..kotlin.Any?), V : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.resolve.BindingContext, @org.jetbrains.annotations.NotNull p1: org.jetbrains.kotlin.util.slicedMap.ReadOnlySlice<(K..K?), (V..V?)>, @org.jetbrains.annotations.NotNull p2: K, @org.jetbrains.annotations.NotNull p3: kotlin.String): V defined in org.jetbrains.kotlin.resolve.BindingContextUtils[JavaMethodDescriptor@28fd804f]
V: ResolvedCall<(org.jetbrains.kotlin.descriptors.FunctionDescriptor..org.jetbrains.kotlin.descriptors.FunctionDescriptor?)>

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: FunctionDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: BranchedValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: BranchedValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: BranchedValue

public final operator fun component1(): org.jetbrains.kotlin.codegen.StackValue defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@72ddaa9d]
A: StackValue

public final operator fun component1(): org.jetbrains.kotlin.codegen.StackValue defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7c79c6d6]
A: StackValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: BranchedValue

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2fe7e49b]
T: AnnotationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3fb2edbc]
T: AnnotationDescriptor


public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64187c1e]
V: JvmDeclarationOrigin


public abstract operator fun next(): org.jetbrains.kotlin.resolve.jvm.diagnostics.JvmDeclarationOrigin defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@45eed7e3]
T: JvmDeclarationOrigin

public abstract fun next(): com.intellij.psi.PsiElement defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@3e4a8c7a]
T: PsiElement

public abstract operator fun next(): org.jetbrains.kotlin.resolve.jvm.diagnostics.RawSignature defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@9a5b13a]
T: RawSignature

public abstract operator fun next(): org.jetbrains.kotlin.resolve.jvm.diagnostics.JvmDeclarationOrigin defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7fa1f864]
T: JvmDeclarationOrigin

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: RawSignature

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@216d4d77]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: Builder

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: Builder

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: Builder

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: Builder

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: Builder

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: Builder

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: Builder

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: Builder



public inline fun <T, R> kotlin.Array<out T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@e6468af]
R: ClassBuilderFactory

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2f6f9532]
R: ClassBuilderFactory

@kotlin.Suppress public fun <D : org.jetbrains.kotlin.descriptors.CallableDescriptor?> D.unwrapInitialDescriptorForSuspendFunction(): D defined in org.jetbrains.kotlin.codegen.coroutines in file coroutineCodegenUtil.kt[SimpleFunctionDescriptorImpl@49f63d64]
D: FunctionDescriptor

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.PossiblyInnerType defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2f80508e]
E: PossiblyInnerType

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.PossiblyInnerType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@52afcfd8]
T: PossiblyInnerType

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6d11f0c1]
T: TypeProjection

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: FunctionDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6acc15c]
T: KotlinType

public abstract operator fun next(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3ed95fac]
T: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Type

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Type

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@62774ae7]
T: TypeParameterDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: ConstructorDescriptor

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@1b3abdd1]
T: MutableEntry<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?), (org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)>

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@f20e7d1]
D: ConstructorDescriptor

public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.types.model.TypeParameterMarker, org.jetbrains.kotlin.types.model.TypeArgumentMarker> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@25de0775]
T: Pair<TypeParameterMarker, TypeArgumentMarker>

public final operator fun component1(): org.jetbrains.kotlin.types.model.TypeParameterMarker defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4baf3ce7]
A: TypeParameterMarker

public final operator fun component2(): org.jetbrains.kotlin.types.model.TypeArgumentMarker defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@69573ab0]
B: TypeArgumentMarker


@kotlin.Suppress public fun <D : org.jetbrains.kotlin.descriptors.CallableDescriptor?> D.unwrapInitialDescriptorForSuspendFunction(): D defined in org.jetbrains.kotlin.codegen.coroutines in file coroutineCodegenUtil.kt[SimpleFunctionDescriptorImpl@49f63d64]
D: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: DeclarationDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: DeclarationDescriptor

public final operator fun component1(): org.jetbrains.kotlin.resolve.jvm.diagnostics.RawSignature defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@66134074]
A: RawSignature

public inline fun <T> kotlin.sequences.Sequence<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@14d01618]
T: Int

public abstract val value: org.jetbrains.kotlin.descriptors.impl.TypeParameterDescriptorImpl defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@57e3941a]
V: TypeParameterDescriptorImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: TypeMappingMode

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbd5e7d]
R: Unit

public abstract fun get(index: kotlin.Int): org.jetbrains.org.objectweb.asm.Label defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@1f9bc331]
E: Label

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@51dda632]
R: Unit

public abstract fun next(): org.jetbrains.org.objectweb.asm.Label defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@4f0a8092]
T: Label

public abstract operator fun invoke(p1: org.jetbrains.kotlin.resolve.constants.ConstantValue<*>): kotlin.Boolean defined in kotlin.Function1[FunctionInvokeDescriptor@2c260802]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: ArrayList<ConstantValue<*>?>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc1deb6]
T: ArrayList<ConstantValue<*>?>

public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@67139d5e]
T: Boolean


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrClassSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: D

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: D

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: Annotations

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: Annotations

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: ReceiverParameterDescriptor

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: <no name provided>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: <no name provided>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: ReceiverParameterDescriptor

public final val parametersBuilder: () -> kotlin.collections.List<org.jetbrains.kotlin.descriptors.TypeParameterDescriptor> defined in org.jetbrains.kotlin.backend.common.descriptors.LazyTypeConstructor[PropertyDescriptorImpl@262e0fec] +++|+++
R: List<TypeParameterDescriptor>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: List<TypeParameterDescriptor>

public final val parametersBuilder: () -> kotlin.collections.List<org.jetbrains.kotlin.descriptors.TypeParameterDescriptor> defined in org.jetbrains.kotlin.backend.common.descriptors.LazyTypeConstructor[PropertyDescriptorImpl@262e0fec] +++|+++
R: List<TypeParameterDescriptor>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: List<TypeParameterDescriptor>

public final val superTypesBuilder: () -> kotlin.collections.List<org.jetbrains.kotlin.types.KotlinType> defined in org.jetbrains.kotlin.backend.common.descriptors.LazyTypeConstructor[PropertyDescriptorImpl@1a03f983] +++|+++
R: List<KotlinType>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: List<KotlinType>

public final val superTypesBuilder: () -> kotlin.collections.List<org.jetbrains.kotlin.types.KotlinType> defined in org.jetbrains.kotlin.backend.common.descriptors.LazyTypeConstructor[PropertyDescriptorImpl@1a03f983] +++|+++
R: List<KotlinType>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: List<KotlinType>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14be5e4e]
V: Name

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14be5e4e]
V: Name

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14be5e4e]
V: Name

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrElement[DeserializedSimpleFunctionDescriptor@275cf7d8]
R: IrElement

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: IrGetValueImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrDoWhileLoopImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrDoWhileLoopImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrIfThenElseImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrWhen

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrWhen

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: LoopReplacement

public inline fun <T> kotlin.sequences.Sequence<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@69aaac10]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: ProgressionHeaderInfo

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrCallMatcherContainer

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: Boolean

public final val restriction: (org.jetbrains.kotlin.ir.expressions.IrExpression?) -> kotlin.Boolean defined in org.jetbrains.kotlin.backend.common.lower.matchers.IrCallExtensionReceiverMatcher[PropertyDescriptorImpl@62d25173] +++|+++
R: Boolean

public final val restriction: (org.jetbrains.kotlin.ir.expressions.IrExpression?) -> kotlin.Boolean defined in org.jetbrains.kotlin.backend.common.lower.matchers.IrCallDispatchReceiverMatcher[PropertyDescriptorImpl@50306d2d] +++|+++
R: Boolean

public final val restriction: (org.jetbrains.kotlin.ir.expressions.IrStatementOrigin?) -> kotlin.Boolean defined in org.jetbrains.kotlin.backend.common.lower.matchers.IrCallOriginMatcher[PropertyDescriptorImpl@3347946] +++|+++
R: Boolean

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@292385bc]
T: CompilerPhase<Context, Any?, Any?>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Pair<UnsignedType, IrClassSymbol>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Pair<UnsignedType, IrClassSymbol>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: S

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: S

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.backend.common.ScopeWithIr defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@32637201]
E: ScopeWithIr

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.backend.common.ScopeWithIr defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@46cd6f0b]
E: ScopeWithIr

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Nothing

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: <no name provided>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: <no name provided>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: SimpleType

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: SimpleType

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: SimpleType

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: SimpleType

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: LazyTypeConstructor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: LazyTypeConstructor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: SimpleType

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: SimpleType

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: ClassTypeConstructorImpl

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: ClassTypeConstructorImpl

public final val first: org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.Pair[DeserializedPropertyDescriptor@533d6089]
A: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: List<IrValueParameter>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrTypeParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrClassImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrClassImpl

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@44b27716]
T: IrConstructor

public inline fun <T> kotlin.collections.Iterable<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1d38f479]
T: IrSimpleFunction

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@59765aed]
E: IrValueParameter

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14be5e4e]
V: IrSimpleFunctionSymbol

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@59765aed]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Nothing

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@59765aed]
E: IrValueParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@59765aed]
E: IrValueParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@59765aed]
E: IrValueParameter

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.ir.declarations.IrValueParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@27e43786]
T: IndexedValue<IrValueParameter>

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@7bdc882e]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrSimpleFunction

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14be5e4e]
V: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: IrSimpleFunction

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@59765aed]
E: IrValueParameter

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@44b27716]
T: IrConstructor

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@44b27716]
T: IrSimpleFunction

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6dd06ec3]
T: IrValueParameter

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@44b27716]
T: IrSimpleFunction

public abstract val key: org.jetbrains.kotlin.ir.symbols.IrTypeParameterSymbol defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@58386b22]
K: IrTypeParameterSymbol

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrTypeParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@42d333ad]
E: IrTypeParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: DeepCopyIrTreeWithSymbolsForInliner

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@2471abff]
E: IrStatement

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@2471abff]
E: IrStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Boolean

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: Boolean

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dce1bd1]
T: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionMatcherContainer

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Boolean


public final val reportError: org.jetbrains.kotlin.backend.common.ReportError /* = (element: org.jetbrains.kotlin.ir.IrElement, message: kotlin.String) -> kotlin.Unit */ defined in org.jetbrains.kotlin.backend.common.CheckIrElementVisitor[PropertyDescriptorImpl@4d251f60] +++|+++
R: Unit

public final val reportError: org.jetbrains.kotlin.backend.common.ReportError /* = (element: org.jetbrains.kotlin.ir.IrElement, message: kotlin.String) -> kotlin.Unit */ defined in org.jetbrains.kotlin.backend.common.CheckIrElementVisitor[PropertyDescriptorImpl@4d251f60] +++|+++
R: Unit

public final val reportError: org.jetbrains.kotlin.backend.common.ReportError /* = (element: org.jetbrains.kotlin.ir.IrElement, message: kotlin.String) -> kotlin.Unit */ defined in org.jetbrains.kotlin.backend.common.CheckIrElementVisitor[PropertyDescriptorImpl@4d251f60] +++|+++
R: Unit

public final val reportError: org.jetbrains.kotlin.backend.common.ReportError /* = (element: org.jetbrains.kotlin.ir.IrElement, message: kotlin.String) -> kotlin.Unit */ defined in org.jetbrains.kotlin.backend.common.CheckIrElementVisitor[PropertyDescriptorImpl@4d251f60] +++|+++
R: Unit

public final val reportError: org.jetbrains.kotlin.backend.common.ReportError /* = (element: org.jetbrains.kotlin.ir.IrElement, message: kotlin.String) -> kotlin.Unit */ defined in org.jetbrains.kotlin.backend.common.CheckIrElementVisitor[PropertyDescriptorImpl@4d251f60] +++|+++
R: Unit

public final val reportError: org.jetbrains.kotlin.backend.common.ReportError /* = (element: org.jetbrains.kotlin.ir.IrElement, message: kotlin.String) -> kotlin.Unit */ defined in org.jetbrains.kotlin.backend.common.CheckIrElementVisitor[PropertyDescriptorImpl@4d251f60] +++|+++
R: Unit

public final val reportError: org.jetbrains.kotlin.backend.common.ReportError /* = (element: org.jetbrains.kotlin.ir.IrElement, message: kotlin.String) -> kotlin.Unit */ defined in org.jetbrains.kotlin.backend.common.CheckIrElementVisitor[PropertyDescriptorImpl@4d251f60] +++|+++
R: Unit

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.ir.declarations.IrValueParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6f92c8ad]
T: IndexedValue<IrValueParameter>

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@69fbf239]
T: IrValueParameter

public final val reportError: org.jetbrains.kotlin.backend.common.ReportError /* = (element: org.jetbrains.kotlin.ir.IrElement, message: kotlin.String) -> kotlin.Unit */ defined in org.jetbrains.kotlin.backend.common.CheckIrElementVisitor[PropertyDescriptorImpl@4d251f60] +++|+++
R: Unit

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.ir.declarations.IrTypeParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@56a719d0]
T: IndexedValue<IrTypeParameter>

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrTypeParameter defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@4e3de8bf]
T: IrTypeParameter

public final val reportError: org.jetbrains.kotlin.backend.common.ReportError /* = (element: org.jetbrains.kotlin.ir.IrElement, message: kotlin.String) -> kotlin.Unit */ defined in org.jetbrains.kotlin.backend.common.CheckIrElementVisitor[PropertyDescriptorImpl@4d251f60] +++|+++
R: Unit

public abstract fun next(): org.jetbrains.kotlin.ir.symbols.IrSymbol defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@173ee4fb]
T: IrSymbol

public final val reportError: org.jetbrains.kotlin.backend.common.ReportError /* = (element: org.jetbrains.kotlin.ir.IrElement, message: kotlin.String) -> kotlin.Unit */ defined in org.jetbrains.kotlin.backend.common.CheckIrElementVisitor[PropertyDescriptorImpl@4d251f60] +++|+++
R: Unit

public final val reportError: org.jetbrains.kotlin.backend.common.ReportError /* = (element: org.jetbrains.kotlin.ir.IrElement, message: kotlin.String) -> kotlin.Unit */ defined in org.jetbrains.kotlin.backend.common.CheckIrElementVisitor[PropertyDescriptorImpl@4d251f60] +++|+++
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: T

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: String

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrConstructorCall[DeserializedSimpleFunctionDescriptor@44990005]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrDeclaration[DeserializedSimpleFunctionDescriptor@62bfba93]
R: Unit

public open fun visitBlock(expression: org.jetbrains.kotlin.ir.expressions.IrBlock, data: kotlin.String): kotlin.Unit defined in org.jetbrains.kotlin.ir.visitors.IrElementVisitor[DeserializedSimpleFunctionDescriptor@5c108b21]
R: Unit

public open fun visitBlock(expression: org.jetbrains.kotlin.ir.expressions.IrBlock, data: kotlin.String): kotlin.Unit defined in org.jetbrains.kotlin.ir.visitors.IrElementVisitor[DeserializedSimpleFunctionDescriptor@5c108b21]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@63fd4e80]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@63fd4e80]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpressionBody[DeserializedSimpleFunctionDescriptor@1e930284]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrBody[DeserializedSimpleFunctionDescriptor@2fca827f]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@63fd4e80]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrClass[DeserializedSimpleFunctionDescriptor@61b50199]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@63fd4e80]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@63fd4e80]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@63fd4e80]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@63fd4e80]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@63fd4e80]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@63fd4e80]
R: Unit

public open fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrBranch[DeserializedSimpleFunctionDescriptor@23286879]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@63fd4e80]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@63fd4e80]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@63fd4e80]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@63fd4e80]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@63fd4e80]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@63fd4e80]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@63fd4e80]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.ir.expressions.IrCatch defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3405575]
T: IrCatch

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrCatch[DeserializedSimpleFunctionDescriptor@690f53b0]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@63fd4e80]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrElement[DeserializedSimpleFunctionDescriptor@275cf7d8]
R: String

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrElement[DeserializedSimpleFunctionDescriptor@275cf7d8]
R: String


public fun <E> kotlin.collections.MutableList<E>.pop(): E defined in org.jetbrains.kotlin.backend.common in file Utils.kt[SimpleFunctionDescriptorImpl@6377d28a]
E: ScopeWithIr

public fun <E> kotlin.collections.MutableList<E>.pop(): E defined in org.jetbrains.kotlin.backend.common in file Utils.kt[SimpleFunctionDescriptorImpl@6377d28a]
E: ScopeWithIr

public fun <E> kotlin.collections.MutableList<E>.pop(): E defined in org.jetbrains.kotlin.backend.common in file Utils.kt[SimpleFunctionDescriptorImpl@6377d28a]
E: ScopeWithIr

public fun <E> kotlin.collections.MutableList<E>.pop(): E defined in org.jetbrains.kotlin.backend.common in file Utils.kt[SimpleFunctionDescriptorImpl@6377d28a]
E: ScopeWithIr

public fun <E> kotlin.collections.MutableList<E>.pop(): E defined in org.jetbrains.kotlin.backend.common in file Utils.kt[SimpleFunctionDescriptorImpl@6377d28a]
E: ScopeWithIr

public fun <E> kotlin.collections.MutableList<E>.pop(): E defined in org.jetbrains.kotlin.backend.common in file Utils.kt[SimpleFunctionDescriptorImpl@6377d28a]
E: ScopeWithIr

public fun <E> kotlin.collections.MutableList<E>.pop(): E defined in org.jetbrains.kotlin.backend.common in file Utils.kt[SimpleFunctionDescriptorImpl@6377d28a]
E: ScopeWithIr

public fun <E> kotlin.collections.MutableList<E>.pop(): E defined in org.jetbrains.kotlin.backend.common in file Utils.kt[SimpleFunctionDescriptorImpl@6377d28a]
E: ScopeWithIr

public fun <E> kotlin.collections.MutableList<E>.pop(): E defined in org.jetbrains.kotlin.backend.common in file Utils.kt[SimpleFunctionDescriptorImpl@6377d28a]
E: ScopeWithIr

public fun <E> kotlin.collections.MutableList<E>.pop(): E defined in org.jetbrains.kotlin.backend.common in file Utils.kt[SimpleFunctionDescriptorImpl@6377d28a]
E: ScopeWithIr

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrModuleFragment[DeserializedSimpleFunctionDescriptor@78f3d517]
R: Unit

public open fun visitDeclaration(declaration: org.jetbrains.kotlin.ir.declarations.IrDeclaration, data: org.jetbrains.kotlin.ir.declarations.IrDeclarationParent?): kotlin.Unit defined in org.jetbrains.kotlin.ir.visitors.IrElementVisitor[DeserializedSimpleFunctionDescriptor@77465c0a]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@63fd4e80]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrStatement[DeserializedSimpleFunctionDescriptor@4da5d7b5]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@63fd4e80]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@63fd4e80]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrStatement[DeserializedSimpleFunctionDescriptor@4da5d7b5]
R: Unit



public final operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.KotlinType defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@5e34fcef]
T: KotlinType

public final val first: org.jetbrains.kotlin.name.Name defined in kotlin.Pair[DeserializedPropertyDescriptor@5e3e2cd7]
A: Name

public inline fun <T> kotlin.collections.Iterable<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4936fda9]
T: SimpleFunctionDescriptor

public inline fun <T> kotlin.collections.Iterable<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4936fda9]
T: [@kotlin.jvm.JvmWildcard] SimpleFunctionDescriptor

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14be5e4e]
V: IrSimpleFunctionSymbol

public inline fun <T> kotlin.collections.Iterable<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4936fda9]
T: [@kotlin.jvm.JvmWildcard] SimpleFunctionDescriptor

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14be5e4e]
V: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Boolean

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component1(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@529cdc2f]
T: IrStatement

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component2(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@40d8519]
T: IrStatement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrElement[DeserializedSimpleFunctionDescriptor@275cf7d8]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrElement[DeserializedSimpleFunctionDescriptor@275cf7d8]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrDelegatingConstructorCallImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrConstructorImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrConstructorImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrValueParameterImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrTypeParameterImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrValueParameterImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrValueParameterImpl

public final operator fun component1(): org.jetbrains.kotlin.ir.declarations.IrTypeParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6032a7d1]
A: IrTypeParameter

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrTypeParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2031c355]
B: IrTypeParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Boolean

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@51d5d4f7]
T: IrValueParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrTypeParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@1f6dad28]
E: IrTypeParameter

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrDeclaration[DeserializedSimpleFunctionDescriptor@62bfba93]
R: Unit

public open fun visitDeclaration(declaration: org.jetbrains.kotlin.ir.declarations.IrDeclaration, data: org.jetbrains.kotlin.ir.declarations.IrDeclarationParent): kotlin.Unit defined in org.jetbrains.kotlin.ir.visitors.IrElementVisitor[DeserializedSimpleFunctionDescriptor@2d848526]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrVariable

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrValueParameterImpl

public abstract val value: kotlin.Boolean defined in org.jetbrains.kotlin.ir.expressions.IrConst[DeserializedPropertyDescriptor@338878c7]
T: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Boolean

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@59765aed]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrValueParameterImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrValueParameterImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrValueParameterImpl

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2eb0934b]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrFunctionImpl

public abstract val value: kotlin.collections.List<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction> defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@e8be1ad]
V: List<IrSimpleFunction>

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2eb0934b]
T: IrSimpleFunction

public abstract val value: kotlin.collections.List<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction> defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@e8be1ad]
V: List<IrSimpleFunction>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: Boolean

public final val second: org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Pair[DeserializedPropertyDescriptor@5627dd49]
B: IrExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrConstructorCall

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: Nothing

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2eb0934b]
T: IrStatement

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@292385bc]
T: IrStatement

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.IrStatement): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@3b428254]
E: IrStatement

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.IrStatement): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@3b428254]
E: IrStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrConstructorCall

public inline fun <T> kotlin.collections.Iterable<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1d38f479]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrDelegatingConstructorCall

@kotlin.SinceKotlin public fun <K, V> kotlin.collections.Map<K, V>.getValue(key: K): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2fd2950e]
V: IrField

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@68702efe]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrConstructorImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrConstructorImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrTypeParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Unit

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@68702efe]
E: IrValueParameter

@kotlin.SinceKotlin public fun <K, V> kotlin.collections.Map<K, V>.getValue(key: K): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2fd2950e]
V: IrField

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@68702efe]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrFunctionImpl

public inline fun <T> kotlin.collections.Iterable<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1d38f479]
T: IrSimpleFunction

public inline fun <T> kotlin.collections.Iterable<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1d38f479]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrTypeParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrFunctionImpl

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@59765aed]
E: IrValueParameter

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@292385bc]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrDelegatingConstructorCall

@kotlin.SinceKotlin public fun <K, V> kotlin.collections.Map<K, V>.getValue(key: K): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2fd2950e]
V: IrField

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@68702efe]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrConstructorImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrConstructorImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrTypeParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrFunctionImpl

public fun <E> kotlin.collections.MutableList<E>.pop(): E defined in org.jetbrains.kotlin.backend.common in file Utils.kt[SimpleFunctionDescriptorImpl@6377d28a]
E: MutableSet<IrVariable>

public fun <E> kotlin.collections.MutableList<E>.pop(): E defined in org.jetbrains.kotlin.backend.common in file Utils.kt[SimpleFunctionDescriptorImpl@6377d28a]
E: MutableSet<IrVariable>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrFieldImpl

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@59765aed]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: Unit

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.IrStatement): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@3b428254]
E: IrStatement

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.IrStatement): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@3b428254]
E: IrStatement

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.IrStatement): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@3b428254]
E: IrStatement

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.IrStatement): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@3b428254]
E: IrStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Unit

public abstract fun next(): org.jetbrains.kotlin.ir.expressions.IrBranch defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@625cddec]
T: IrBranch

public abstract operator fun next(): org.jetbrains.kotlin.ir.expressions.IrCatch defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@71fb1b42]
T: IrCatch

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Unit

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.ir.expressions.IrExpression> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@141077d8]
T: IndexedValue<IrExpression>

public final operator fun component2(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@bb7534f]
T: IrExpression

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.expressions.IrExpression): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@2086ee90]
E: IrExpression

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.expressions.IrExpression): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@2086ee90]
E: IrExpression

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@44b27716]
T: IrConstructorSymbol

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionAccessExpression

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@44b27716]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrCall

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@44b27716]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionAccessExpression

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@44b27716]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrWhileLoopImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrExpression

@kotlin.internal.InlineOnly public inline fun <K, V> kotlin.collections.Map<K, V>.getOrElse(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3ccea07a]
V: ClosureBuilder

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: MutableSet<IrValueSymbol>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Unit

public fun <E> kotlin.collections.MutableList<E>.pop(): E defined in org.jetbrains.kotlin.backend.common in file Utils.kt[SimpleFunctionDescriptorImpl@6377d28a]
E: ClosureBuilder

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Unit

public fun <E> kotlin.collections.MutableList<E>.pop(): E defined in org.jetbrains.kotlin.backend.common in file Utils.kt[SimpleFunctionDescriptorImpl@6377d28a]
E: ClosureBuilder

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Unit


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Unit

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@6c95324c]
T: IrValueParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@59765aed]
E: IrValueParameter

public inline fun <T> kotlin.collections.Iterable<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1d38f479]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrGetValueImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrDelegatingConstructorCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrGetValueImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrGetValueImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrCall

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@292385bc]
T: IrValueParameter

public inline fun <T> kotlin.collections.Iterable<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1d38f479]
T: IrValueParameter

public final operator fun component1(): org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@74ee1714]
A: IrFunctionSymbol

public final operator fun component2(): kotlin.collections.List<kotlin.Pair<org.jetbrains.kotlin.ir.declarations.IrValueParameter, org.jetbrains.kotlin.ir.expressions.IrExpression?>> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@37e70708]
B: List<Pair<IrValueParameter, IrExpression?>>



public final val first: org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.Pair[DeserializedPropertyDescriptor@6827c152]
A: IrValueParameter

public final val first: org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.Pair[DeserializedPropertyDescriptor@6827c152]
A: IrValueParameter

public final val first: org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.Pair[DeserializedPropertyDescriptor@6827c152]
A: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionAccessExpression

public abstract fun next(): org.jetbrains.kotlin.ir.symbols.IrSimpleFunctionSymbol defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@3527ef5d]
T: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Nothing

public final operator fun get(index: kotlin.Int): kotlin.Int defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@345c554b]
T: Int

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@59765aed]
E: IrValueParameter

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@292385bc]
T: IrValueParameter

public final val first: org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.Pair[DeserializedPropertyDescriptor@50553ca]
A: IrValueParameter

public final val first: org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.Pair[DeserializedPropertyDescriptor@50553ca]
A: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: Int

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@292385bc]
T: IrValueParameter

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@292385bc]
T: IrValueParameter

public abstract fun next(): org.jetbrains.kotlin.ir.symbols.IrSimpleFunctionSymbol defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@59488d59]
T: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrConstructorImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrFunctionImpl

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14be5e4e]
V: IrFunction

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrValueParameterImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrValueParameterImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: Int

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrCall

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@2471abff]
E: IrStatement

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrVariable

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrVariable

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrVariable

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@2471abff]
E: IrStatement

public fun <E> kotlin.collections.MutableList<E>.pop(): E defined in org.jetbrains.kotlin.backend.common in file Utils.kt[SimpleFunctionDescriptorImpl@6377d28a]
E: Pair<IrVariable, Lazy<IrVariable>>

public final operator fun component1(): org.jetbrains.kotlin.ir.declarations.IrVariable defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@506bb4e8]
A: IrVariable

public final operator fun component2(): kotlin.Lazy<org.jetbrains.kotlin.ir.declarations.IrVariable> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@67b19f21]
B: Lazy<IrVariable>

public abstract val value: org.jetbrains.kotlin.ir.declarations.IrVariable defined in kotlin.Lazy[DeserializedPropertyDescriptor@3b33b0d2]
T: IrVariable

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrCallImpl

public fun <E> kotlin.collections.MutableList<E>.pop(): E defined in org.jetbrains.kotlin.backend.common in file Utils.kt[SimpleFunctionDescriptorImpl@6377d28a]
E: Scope

private final inline fun <S : org.jetbrains.kotlin.backend.common.lower.FinallyBlocksLowering.Scope, R> using(scope: S, block: (S) -> R): R defined in org.jetbrains.kotlin.backend.common.lower.FinallyBlocksLowering[SimpleFunctionDescriptorImpl@167e9908]
R: Nothing

private final inline fun <S : org.jetbrains.kotlin.backend.common.lower.FinallyBlocksLowering.Scope, R> using(scope: S, block: (S) -> R): R defined in org.jetbrains.kotlin.backend.common.lower.FinallyBlocksLowering[SimpleFunctionDescriptorImpl@167e9908]
R: Nothing

private final inline fun <S : org.jetbrains.kotlin.backend.common.lower.FinallyBlocksLowering.Scope, R> using(scope: S, block: (S) -> R): R defined in org.jetbrains.kotlin.backend.common.lower.FinallyBlocksLowering[SimpleFunctionDescriptorImpl@167e9908]
R: Nothing


public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.backend.common.lower.FinallyBlocksLowering.TryScope defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@7d38ce56]
E: TryScope

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: Unit

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14be5e4e]
V: IrReturnTargetSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Nothing

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrVariableImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrCatchImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrTryImpl

public abstract operator fun next(): org.jetbrains.kotlin.ir.expressions.IrCatch defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6ece967b]
T: IrCatch

private final inline fun <S : org.jetbrains.kotlin.backend.common.lower.FinallyBlocksLowering.Scope, R> using(scope: S, block: (S) -> R): R defined in org.jetbrains.kotlin.backend.common.lower.FinallyBlocksLowering[SimpleFunctionDescriptorImpl@167e9908]
R: Nothing

private final inline fun <S : org.jetbrains.kotlin.backend.common.lower.FinallyBlocksLowering.Scope, R> using(scope: S, block: (S) -> R): R defined in org.jetbrains.kotlin.backend.common.lower.FinallyBlocksLowering[SimpleFunctionDescriptorImpl@167e9908]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrStringConcatenationImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrStringConcatenationImpl

public open fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.impl.IrFunctionImpl[DeserializedSimpleFunctionDescriptor@4fb85f8b]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionImpl

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@59765aed]
E: IrValueParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@59765aed]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: DeclarationIrBuilder

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrDelegatingConstructorCall

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: List<IrConstructor>

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@59765aed]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrDelegatingConstructorCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrFunctionReferenceImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: {IrDeclarationWithName & IrDeclarationWithVisibility & IrSymbolOwner}

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrCompositeImpl


@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrField

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrField

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrVariableImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrGetValueImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrGetValueImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrIfThenElseImpl

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: IrSetVariableImpl

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: IrGetFieldImpl

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: IrSetFieldImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrProperty

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: DeclarationIrBuilder

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrExpression

public abstract fun next(): kotlin.Pair<org.jetbrains.kotlin.ir.declarations.IrClass, org.jetbrains.kotlin.ir.declarations.IrDeclarationContainer> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@58399caf]
T: Pair<IrClass, IrDeclarationContainer>

public final operator fun component1(): org.jetbrains.kotlin.ir.declarations.IrClass defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5caa101d]
A: IrClass

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrDeclarationContainer defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@9cda936]
B: IrDeclarationContainer

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrConstructor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Nothing

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrCallImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrConstructorCallImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrDelegatingConstructorCallImpl

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@9cfc964]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: T

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrGetValueImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrGetValueImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrFunctionReferenceImpl

public abstract operator fun next(): org.jetbrains.kotlin.backend.common.lower.LocalDeclarationsLowering.LocalClassConstructorContext defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@37c0bb3c]
T: LocalClassConstructorContext

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@480950c6]
K: IrValueDeclaration

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@744c2b3a]
V: IrField

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrValueParameterImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: ArrayList<IrValueParameter>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: Nothing

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrFieldImpl

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@480950c6]
K: IrFunction

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@744c2b3a]
V: LocalFunctionContext

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@480950c6]
K: IrClass

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@744c2b3a]
V: LocalClassContext

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrGetValueImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrGetValueImpl

private final inline fun <T> withBuilder(symbol: org.jetbrains.kotlin.ir.symbols.IrSymbol, block: () -> T): T defined in org.jetbrains.kotlin.backend.common.lower.IrBuildingTransformer[SimpleFunctionDescriptorImpl@13deef2f]
T: Nothing

private final inline fun <T> withBuilder(symbol: org.jetbrains.kotlin.ir.symbols.IrSymbol, block: () -> T): T defined in org.jetbrains.kotlin.backend.common.lower.IrBuildingTransformer[SimpleFunctionDescriptorImpl@13deef2f]
T: Nothing

private final inline fun <T> withBuilder(symbol: org.jetbrains.kotlin.ir.symbols.IrSymbol, block: () -> T): T defined in org.jetbrains.kotlin.backend.common.lower.IrBuildingTransformer[SimpleFunctionDescriptorImpl@13deef2f]
T: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: Boolean

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrFile[DeserializedSimpleFunctionDescriptor@1dee793f]
R: IrElement

public abstract operator fun invoke(p1: org.jetbrains.kotlin.ir.declarations.IrProperty): kotlin.String defined in kotlin.Function1[FunctionInvokeDescriptor@1c9ace61]
R: String

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: ArrayList<IrDeclaration>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionImpl

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrFile[DeserializedSimpleFunctionDescriptor@1dee793f]
R: IrElement

public open fun visitDeclaration(declaration: org.jetbrains.kotlin.ir.declarations.IrDeclaration, data: org.jetbrains.kotlin.ir.declarations.IrDeclarationParent?): kotlin.Unit defined in org.jetbrains.kotlin.ir.visitors.IrElementVisitor[DeserializedSimpleFunctionDescriptor@75b1c089]
R: Unit

public open fun visitContainerExpression(expression: org.jetbrains.kotlin.ir.expressions.IrContainerExpression, data: org.jetbrains.kotlin.ir.declarations.IrDeclarationParent?): kotlin.Unit defined in org.jetbrains.kotlin.ir.visitors.IrElementVisitor[DeserializedSimpleFunctionDescriptor@751f7d1c]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrDeclaration[DeserializedSimpleFunctionDescriptor@62bfba93]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Unit

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@292385bc]
T: IrBuilderWithScope

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionAccessExpression

public abstract fun removeAt(index: kotlin.Int): org.jetbrains.kotlin.ir.builders.IrBuilderWithScope defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@31d012b4]
E: IrBuilderWithScope

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrWhileLoopImpl

public final operator fun component1(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@492721f8]
A: IrValueParameter

public final operator fun component2(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@d4a7e05]
B: IrExpression

public final operator fun component1(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@57ab0b57]
A: IrValueParameter

public final operator fun component2(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4ca1eeac]
B: IrExpression

public final operator fun component1(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@57ab0b57]
A: IrValueParameter

public final operator fun component2(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4ca1eeac]
B: IrExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrTypeProjection

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrTypeProjection

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrModuleFragment[DeserializedSimpleFunctionDescriptor@78f3d517]
R: IrElement


public abstract operator fun set(index: kotlin.Int, element: T): T defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@f4a9b3d]
E: T

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrReturnableBlockImpl

public final val first: org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.Pair[DeserializedPropertyDescriptor@25d8cbda]
A: IrValueParameter

public final val first: org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.Pair[DeserializedPropertyDescriptor@25d8cbda]
A: IrValueParameter

public final val second: org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Pair[DeserializedPropertyDescriptor@7148c27]
B: IrExpression

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: {IrCallWithIndexedArgumentsBase & IrFunctionAccessExpression}

public final val second: org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Pair[DeserializedPropertyDescriptor@4264c46e]
B: IrExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: {IrCallWithIndexedArgumentsBase & IrFunctionAccessExpression}

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@2471abff]
E: IrStatement

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@14ed1612]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: IrExpression

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: IrCompositeImpl

private final val scopeOwnerSymbol: () -> org.jetbrains.kotlin.ir.symbols.IrSymbol defined in org.jetbrains.kotlin.backend.common.lower.loops.HeaderInfoBuilder[PropertyDescriptorImpl@1e512399] +++|+++
R: IrSymbol

private final val scopeOwnerSymbol: () -> org.jetbrains.kotlin.ir.symbols.IrSymbol defined in org.jetbrains.kotlin.backend.common.lower.loops.HeaderInfoBuilder[PropertyDescriptorImpl@1e512399] +++|+++
R: IrSymbol

private final val scopeOwnerSymbol: () -> org.jetbrains.kotlin.ir.symbols.IrSymbol defined in org.jetbrains.kotlin.backend.common.lower.loops.HeaderInfoBuilder[PropertyDescriptorImpl@1e512399] +++|+++
R: IrSymbol

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@59765aed]
E: IrValueParameter

public inline fun <T> kotlin.sequences.Sequence<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@69aaac10]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: IrSetVariableImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: IrExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrWhileLoopImpl

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: LoopReplacement

private final val scopeOwnerSymbol: () -> org.jetbrains.kotlin.ir.symbols.IrSymbol defined in org.jetbrains.kotlin.backend.common.lower.loops.HeaderProcessor[PropertyDescriptorImpl@2900d7ef] +++|+++
R: IrSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: ProgressionHeaderInfo

public final operator fun component1(): kotlin.Long defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@423bd9ed]
A: Long

public final operator fun component2(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7421be07]
B: IrExpression

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: ProgressionHeaderInfo

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: Boolean

public inline fun <T> kotlin.sequences.Sequence<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@69aaac10]
T: IrProperty

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: ProgressionHeaderInfo

public inline fun <T> kotlin.sequences.Sequence<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@69aaac10]
T: IrProperty

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionAccessExpression

public inline fun <T> kotlin.sequences.Sequence<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@69aaac10]
T: IrProperty

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionAccessExpression

public inline fun <T> kotlin.sequences.Sequence<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@69aaac10]
T: IrProperty

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: ProgressionHeaderInfo

public inline fun <T> kotlin.sequences.Sequence<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@69aaac10]
T: IrProperty

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1612902]
R: ArrayHeaderInfo

public inline fun <T> kotlin.sequences.Sequence<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@69aaac10]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrCallImpl

public inline fun <T> kotlin.sequences.Sequence<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@69aaac10]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrCallImpl

public inline fun <T> kotlin.sequences.Sequence<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@69aaac10]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrCallImpl

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@59765aed]
E: IrValueParameter

public final val restriction: (org.jetbrains.kotlin.ir.declarations.IrValueParameter) -> kotlin.Boolean defined in org.jetbrains.kotlin.backend.common.lower.matchers.ParameterMatcher[PropertyDescriptorImpl@70c5ec78] +++|+++
R: Boolean

public final val restriction: (org.jetbrains.kotlin.ir.declarations.IrValueParameter?) -> kotlin.Boolean defined in org.jetbrains.kotlin.backend.common.lower.matchers.DispatchReceiverMatcher[PropertyDescriptorImpl@239d6d9c] +++|+++
R: Boolean

public final val restriction: (org.jetbrains.kotlin.ir.declarations.IrValueParameter?) -> kotlin.Boolean defined in org.jetbrains.kotlin.backend.common.lower.matchers.ExtensionReceiverMatcher[PropertyDescriptorImpl@24999d08] +++|+++
R: Boolean

public final val restriction: (kotlin.Int) -> kotlin.Boolean defined in org.jetbrains.kotlin.backend.common.lower.matchers.ParameterCountMatcher[PropertyDescriptorImpl@4b35174] +++|+++
R: Boolean

public final val restriction: (org.jetbrains.kotlin.name.FqName) -> kotlin.Boolean defined in org.jetbrains.kotlin.backend.common.lower.matchers.FqNameMatcher[PropertyDescriptorImpl@691d4347] +++|+++
R: Boolean

public abstract operator fun invoke(p1: org.jetbrains.kotlin.backend.common.phaser.ActionState, p2: Data, p3: Context): kotlin.Unit defined in kotlin.Function3[FunctionInvokeDescriptor@47bd6cfb]
R: Unit


public abstract operator fun next(): org.jetbrains.kotlin.backend.common.phaser.Action<Input, Context> /* = (org.jetbrains.kotlin.backend.common.phaser.ActionState, Input, Context) -> kotlin.Unit */ defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@62c3b67d]
T: Function3<ActionState, Input, Context, Unit>

val action: org.jetbrains.kotlin.backend.common.phaser.Action<Input, Context> /* = (org.jetbrains.kotlin.backend.common.phaser.ActionState, Input, Context) -> kotlin.Unit */ defined in org.jetbrains.kotlin.backend.common.phaser.AbstractNamedPhaseWrapper.runBefore[LocalVariableDescriptor@1e35c7f6] +++|+++
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.backend.common.phaser.Checker<Input> /* = (Input) -> kotlin.Unit */ defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@622b1f9e]
T: Function1<Input, Unit>

val pre: org.jetbrains.kotlin.backend.common.phaser.Checker<Input> /* = (Input) -> kotlin.Unit */ defined in org.jetbrains.kotlin.backend.common.phaser.AbstractNamedPhaseWrapper.runBefore[LocalVariableDescriptor@2d65cb94] +++|+++
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.backend.common.phaser.Action<Output, Context> /* = (org.jetbrains.kotlin.backend.common.phaser.ActionState, Output, Context) -> kotlin.Unit */ defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3f5eb9a8]
T: Function3<ActionState, Output, Context, Unit>

val action: org.jetbrains.kotlin.backend.common.phaser.Action<Output, Context> /* = (org.jetbrains.kotlin.backend.common.phaser.ActionState, Output, Context) -> kotlin.Unit */ defined in org.jetbrains.kotlin.backend.common.phaser.AbstractNamedPhaseWrapper.runAfter[LocalVariableDescriptor@2dcb11a9] +++|+++
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.backend.common.phaser.Checker<Output> /* = (Output) -> kotlin.Unit */ defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@34da3d6b]
T: Function1<Output, Unit>

val post: org.jetbrains.kotlin.backend.common.phaser.Checker<Output> /* = (Output) -> kotlin.Unit */ defined in org.jetbrains.kotlin.backend.common.phaser.AbstractNamedPhaseWrapper.runAfter[LocalVariableDescriptor@5fcefcc9] +++|+++
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.backend.common.phaser.Checker<Output> /* = (Output) -> kotlin.Unit */ defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1ae52583]
T: Function1<Output, Unit>

val post: org.jetbrains.kotlin.backend.common.phaser.Checker<Output> /* = (Output) -> kotlin.Unit */ defined in org.jetbrains.kotlin.backend.common.phaser.AbstractNamedPhaseWrapper.runAfter[LocalVariableDescriptor@534edc96] +++|+++
R: Unit

public abstract fun next(): org.jetbrains.kotlin.backend.common.phaser.Checker<Output> /* = (Output) -> kotlin.Unit */ defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@46f118ce]
T: Function1<Output, Unit>

val post: org.jetbrains.kotlin.backend.common.phaser.Checker<Output> /* = (Output) -> kotlin.Unit */ defined in org.jetbrains.kotlin.backend.common.phaser.AbstractNamedPhaseWrapper.runAfter[LocalVariableDescriptor@dee66a4] +++|+++
R: Unit




public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2eb0934b]
T: CompilerPhase<Context, Any?, Any?>

public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.backend.common.phaser.CompilerPhase<Context, kotlin.Any?, kotlin.Any?>, org.jetbrains.kotlin.backend.common.phaser.CompilerPhase<Context, kotlin.Any?, kotlin.Any?>> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@784ca50e]
T: Pair<CompilerPhase<Context, Any?, Any?>, CompilerPhase<Context, Any?, Any?>>

public final operator fun component1(): org.jetbrains.kotlin.backend.common.phaser.CompilerPhase<Context, kotlin.Any?, kotlin.Any?> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@42d5ccb9]
A: CompilerPhase<Context, Any?, Any?>

public final operator fun component2(): org.jetbrains.kotlin.backend.common.phaser.CompilerPhase<Context, kotlin.Any?, kotlin.Any?> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3ed2e032]
B: CompilerPhase<Context, Any?, Any?>


public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrFile defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@439a95f1]
T: IrFile

public abstract fun invoke(phaseConfig: org.jetbrains.kotlin.backend.common.phaser.PhaseConfig, phaserState: org.jetbrains.kotlin.backend.common.phaser.PhaserState<org.jetbrains.kotlin.ir.declarations.IrFile>, context: Context, input: org.jetbrains.kotlin.ir.declarations.IrFile): org.jetbrains.kotlin.ir.declarations.IrFile defined in org.jetbrains.kotlin.backend.common.phaser.CompilerPhase[SimpleFunctionDescriptorImpl@241e99b9]
Output: IrFile



public final operator fun component1(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@62ba74c5]
A: Int

public final operator fun component2(): org.jetbrains.kotlin.backend.common.phaser.AnyNamedPhase /* = org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase<*, *, *> */ defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7d200b08]
B: NamedCompilerPhase<*, *, *>

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@639406fd]
R: MutableMap<String, NamedCompilerPhase<*, *, *>>

public final operator fun component1(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@70226f4c]
A: Int

public final operator fun component2(): org.jetbrains.kotlin.backend.common.phaser.AnyNamedPhase /* = org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase<*, *, *> */ defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6657d185]
B: NamedCompilerPhase<*, *, *>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrVariableImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrClassImpl


@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrClass

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrFieldImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrField

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrPropertyImpl


@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrProperty

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrProperty


@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrFunctionImpl


@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrFunctionImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrFunctionImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrConstructorImpl


@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrFunctionImpl


@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrFunctionImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3758acb2]
T: IrSimpleFunction


@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrConstructor


@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrConstructor

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrValueParameterImpl


@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrValueParameter


@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrValueParameter


@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrValueParameter


@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrTypeParameterImpl


@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e91ded5]
T: IrTypeParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@36c5f3b4]
R: IrTypeParameter


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@28ba3b9f]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.ir.types.IrSimpleType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5deec571]
T: IrSimpleType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrVariable

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: VariableLValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrVariable

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: VariableLValue


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrCallImpl

public inline fun <T> kotlin.collections.Iterable<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7a3cdd37]
T: [@kotlin.jvm.JvmWildcard] SimpleFunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrFunctionSymbol

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@2154f538]
D: FunctionDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@2154f538]
D: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2d401784]
R: IrType

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrSimpleFunction

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@2154f538]
D: CallableDescriptor

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@774f1db1]
T: [@kotlin.jvm.JvmWildcard] SimpleFunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <K, V> kotlin.collections.Map<K, V>.getOrElse(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6a50583d]
V: PsiFileEntry

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IntermediateValue


@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@49618464]
T: IntermediateValue


@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@49618464]
T: IntermediateValue

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56e9a057]
T: IrTypeOperatorCallImpl


public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4d2f7adc]
R: Int

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4d2f7adc]
R: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54da2a9a]
R: IntermediateValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54da2a9a]
R: IntermediateValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: CallableDescriptor

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2e8f9106]
E: TypeProjection

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@2154f538]
D: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrDynamicOperatorExpressionImpl

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@2154f538]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@2154f538]
D: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrDynamicOperatorExpressionImpl

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@2154f538]
D: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrDynamicOperatorExpressionImpl

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@2154f538]
D: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2d401784]
R: IrType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrClassSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: List<IrType>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: CallBuilder

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: CallBuilder

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: MutableList<IrStatement>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: MutableList<IrStatement>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrEnumConstructorCallImpl

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.expressions.IrBranch defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5becf8c1]
E: IrBranch

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrWhen

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrWhen

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrDelegatingConstructorCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrClassSymbol

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54da2a9a]
R: IrExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrDynamicOperatorExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrDynamicOperatorExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrDynamicOperatorExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrClassSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrClassSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54da2a9a]
R: IrExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54da2a9a]
R: IrExpression

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.ir.expressions.IrExpression?> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@9326adc]
T: IndexedValue<IrExpression?>

public abstract operator fun next(): kotlin.collections.IndexedValue<(org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@625ae5c7]
T: IndexedValue<(org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument..org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument?)>

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4def395]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4def395]
E: String

public abstract operator fun get(index: kotlin.Int): T defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4462580b]
E: T

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.CallableMemberDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1f0ebd84]
T: CallableMemberDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrGetValueImpl

public abstract operator fun next(): kotlin.collections.IndexedValue<(org.jetbrains.kotlin.descriptors.TypeParameterDescriptor..org.jetbrains.kotlin.descriptors.TypeParameterDescriptor?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3c445bf8]
T: IndexedValue<(org.jetbrains.kotlin.descriptors.TypeParameterDescriptor..org.jetbrains.kotlin.descriptors.TypeParameterDescriptor?)>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56e9a057]
T: IrConstructor

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@16daa995]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: MutableList<IrDeclaration>


public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@16daa995]
E: IrValueParameter


public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@16daa995]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrConstructorCall

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.PropertyDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3bf91c91]
T: PropertyDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.PropertyDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@472eb48d]
T: PropertyDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrFunctionAccessExpression

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.PropertyDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@57092a10]
T: PropertyDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrCall


public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrTypeParameter defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@2afebbef]
T: IrTypeParameter


public inline fun <T, D : org.jetbrains.kotlin.descriptors.DeclarationDescriptor> org.jetbrains.kotlin.ir.util.SymbolTable.withScope(owner: D, block: org.jetbrains.kotlin.ir.util.SymbolTable.(D) -> T): T defined in org.jetbrains.kotlin.ir.util[DeserializedSimpleFunctionDescriptor@2a5475d3]
T: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56e9a057]
T: T

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrProperty


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrFieldImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56e9a057]
T: IrField

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: ExpressionValue

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrLocalDelegatedProperty


@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56e9a057]
T: IrVariable

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@2154f538]
D: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: CallBuilder

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2d401784]
R: IrBlockBody

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@16daa995]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2d401784]
R: IrBlockBody

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56e9a057]
T: IrSimpleFunction

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56e9a057]
T: IrSimpleFunction


@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54da2a9a]
R: IrExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrBody

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrSimpleFunction

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1ffd361e]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrExpressionBody

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56e9a057]
T: IrValueParameter


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrBlockImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrBreakImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrContinueImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56e9a057]
T: IrModuleFragment

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56e9a057]
T: IrModuleFragmentImpl

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtAnnotationEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@11b07ca4]
T: KtAnnotationEntry

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5403de6e]
T: KtDeclaration

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrFileImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrDynamicOperatorExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrDynamicOperatorExpressionImpl

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@2154f538]
D: CallableDescriptor


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrDynamicOperatorExpressionImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56e9a057]
T: IrProperty

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56e9a057]
T: IrField

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrExpressionBody

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrProperty

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@2154f538]
D: CallableDescriptor

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56e9a057]
T: IrCallableReference

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrPropertyReferenceImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrFunctionReferenceImpl

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.psi.KtVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.psi.KtElement[DeserializedSimpleFunctionDescriptor@b9721db]
R: IrStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: Nothing

public abstract operator fun next(): kotlin.collections.IndexedValue<(org.jetbrains.kotlin.psi.KtDestructuringDeclarationEntry..org.jetbrains.kotlin.psi.KtDestructuringDeclarationEntry?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4001cfd4]
T: IndexedValue<(org.jetbrains.kotlin.psi.KtDestructuringDeclarationEntry..org.jetbrains.kotlin.psi.KtDestructuringDeclarationEntry?)>

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@20b8ace5]
T: IrExpression

public abstract operator fun next(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@60d94786]
T: IrExpression

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56e9a057]
T: ArrayList<IrExpression>

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@2154f538]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@2154f538]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@2154f538]
D: FunctionDescriptor

public abstract fun <R : (kotlin.Any..kotlin.Any?), D : (kotlin.Any..kotlin.Any?)> accept(@org.jetbrains.annotations.NotNull visitor: org.jetbrains.kotlin.psi.KtVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.psi.KtExpression[JavaMethodDescriptor@73dae139]
R: IrStatement

public abstract fun <R : (kotlin.Any..kotlin.Any?), D : (kotlin.Any..kotlin.Any?)> accept(@org.jetbrains.annotations.NotNull visitor: org.jetbrains.kotlin.psi.KtVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.psi.KtExpression[JavaMethodDescriptor@73dae139]
R: IrStatement

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7d6a39b5]
V: PropertyGetterDescriptor

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7d6a39b5]
V: PropertySetterDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrCatchImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54da2a9a]
R: IrExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54da2a9a]
R: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54da2a9a]
R: KotlinType



public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.ir.expressions.IrExpression> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4342cc58]
T: IndexedValue<IrExpression>

public final operator fun component2(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@4ddc41df]
T: IrExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.psi.KtExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@275bff7e]
E: KtExpression


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2ec310]
R: Unit

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@2154f538]
D: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: CallBuilder



@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrCallImpl


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrDynamicOperatorExpressionImpl





@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60c0265c]
T: IrCallImpl






public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.IrStatement): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@32d02e18]
E: IrStatement

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.IrStatement): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@32d02e18]
E: IrStatement

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.IrStatement): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@32d02e18]
E: IrStatement

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.IrStatement): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@32d02e18]
E: IrStatement

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[DeserializedSimpleFunctionDescriptor@5814558b]
T: IrFunction

public final inline fun <T> buildWithScope(container: org.jetbrains.kotlin.ir.declarations.IrTypeParametersContainer, builder: () -> T): T defined in org.jetbrains.kotlin.ir.util.TypeTranslator[DeserializedSimpleFunctionDescriptor@5814558b]
T: IrStatement

public abstract fun next(): org.jetbrains.kotlin.ir.expressions.IrBranch defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@349634c9]
T: IrBranch

public abstract operator fun next(): org.jetbrains.kotlin.ir.expressions.IrCatch defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5bb30900]
T: IrCatch

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrStatement[DeserializedSimpleFunctionDescriptor@54b072d7]
R: PromisedValue

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: PromisedValue

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@777b811f]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: ExpressionCodegen

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrClass

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrClass

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: MaterialValue

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: MaterialValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: Unit

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5a308d]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@63c6da15]
V: IrTypeParameterMapping

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: TypeParameterMappings

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSimpleFunction

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunctionSymbol

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrConstructorSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: IrConstructorSymbol

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrConstructorSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: IrConstructorSymbol

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructor

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrTypeParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@1ab00c06]
E: IrTypeParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructor

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrField

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrProperty

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSimpleFunction

public abstract operator fun next(): kotlin.Boolean defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7a59573a]
T: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSimpleFunction

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunctionSymbol

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrProperty

public final operator fun component1(): org.jetbrains.kotlin.descriptors.ParameterDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@798cbdaa]
A: ParameterDescriptor

public final operator fun component2(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@9ab7364]
B: IrExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: ArrayList<CapturedParamDesc>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Method

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrTypeParameterImpl

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrTypeParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@1ab00c06]
E: IrTypeParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrClass

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrTypeParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@1ab00c06]
E: IrTypeParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: IrConstructor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: IrConstructor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrField

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: IrField

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrField

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: IrField

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5a308d]
K: SimpleType

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@63c6da15]
V: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: IrClassSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: IrClassSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: IrClassSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: IrClassSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: IrClassSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: IrClassSymbol

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructor

public inline fun <T> kotlin.collections.List<T>.last(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3738d565]
T: ScopeWithIr

public inline fun <T> kotlin.collections.Iterable<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@53d976f0]
T: IrDeclaration

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrClass

public final operator fun component1(): org.jetbrains.kotlin.ir.symbols.IrClassSymbol defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@41764170]
A: IrClassSymbol

public final operator fun component2(): org.jetbrains.kotlin.ir.symbols.IrClassSymbol defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3563477b]
B: IrClassSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: List<StubsForCollectionClass>

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: List<StubsForCollectionClass>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: List<StubsForCollectionClass>

public final operator fun component1(): org.jetbrains.kotlin.ir.symbols.IrClassSymbol defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4de3c110]
A: IrClassSymbol

public final operator fun component2(): org.jetbrains.kotlin.ir.symbols.IrClassSymbol defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@433e99b]
B: IrClassSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: List<StubsForCollectionClass>

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: List<StubsForCollectionClass>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: List<StubsForCollectionClass>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: HashSet<IrSimpleFunction>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: HashSet<IrSimpleFunction>

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunctionSymbol

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrProperty

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: IrSimpleFunction

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrProperty

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: IrSimpleFunction

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: IrSimpleFunctionSymbol

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: IrSimpleFunctionSymbol

@kotlin.SinceKotlin public fun <K, V> kotlin.collections.Map<K, V>.getValue(key: K): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6957dc1e]
V: IrClassSymbol

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrConstructorSymbol

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunctionSymbol

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunctionSymbol

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrProperty

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrClass

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: IrClass

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrClass

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1fd21d7d]
T: IrClass

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@107c062c]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: String

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: String

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6bdea3b8]
T: IrType

public abstract operator fun next(): org.jetbrains.kotlin.builtins.jvm.JavaToKotlinClassMap.PlatformMutabilityMapping defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7943947c]
T: PlatformMutabilityMapping

@kotlin.internal.InlineOnly public inline fun <R> run(block: () -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6bfa7aa8]
R: MutableMap<FqName, String>

public abstract fun next(): org.jetbrains.kotlin.ir.types.IrType defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@45409d63]
T: IrType

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6bdea3b8]
T: IrType

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1cff6016]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Boolean

public abstract operator fun next(): org.jetbrains.kotlin.backend.jvm.codegen.SwitchGenerator.ValueToLabel defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6ab437cd]
T: ValueToLabel

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c5b9eb8]
V: ArrayList<ValueToLabel>

public abstract fun next(): kotlin.Int defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@1e29352e]
T: Int


public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrFile defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@700904b4]
T: IrFile

public abstract operator fun next(): org.jetbrains.kotlin.backend.common.extensions.IrGenerationExtension defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@153a54a1]
T: IrGenerationExtension

public abstract operator fun next(): kotlin.Boolean defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@28a99b68]
T: Boolean

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrFile defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@2d65e9a1]
T: IrFile

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrDeclaration defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@25eacc16]
T: IrDeclaration

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrClass

public fun <Context : org.jetbrains.kotlin.backend.common.CommonBackendContext, Input, Output> org.jetbrains.kotlin.backend.common.phaser.CompilerPhase<Context, Input, Output>.invokeToplevel(phaseConfig: org.jetbrains.kotlin.backend.common.phaser.PhaseConfig, context: Context, input: Input): Output defined in org.jetbrains.kotlin.backend.common.phaser[DeserializedSimpleFunctionDescriptor@343a37dc]
Output: IrModuleFragment


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrClass

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunctionSymbol

public abstract operator fun next(): org.jetbrains.kotlin.ir.expressions.IrConstructorCall defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@39a101a7]
T: IrConstructorCall

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Boolean

private final val visitAnnotation: (descriptor: kotlin.String, visible: kotlin.Boolean) -> org.jetbrains.org.objectweb.asm.AnnotationVisitor defined in org.jetbrains.kotlin.backend.jvm.codegen.AnnotationCodegen[PropertyDescriptorImpl@7a1f22a] +++|+++
R: AnnotationVisitor

private final val visitAnnotation: (descriptor: kotlin.String, visible: kotlin.Boolean) -> org.jetbrains.org.objectweb.asm.AnnotationVisitor defined in org.jetbrains.kotlin.backend.jvm.codegen.AnnotationCodegen[PropertyDescriptorImpl@7a1f22a] +++|+++
R: AnnotationVisitor

private final val visitAnnotation: (descriptor: kotlin.String, visible: kotlin.Boolean) -> org.jetbrains.org.objectweb.asm.AnnotationVisitor defined in org.jetbrains.kotlin.backend.jvm.codegen.AnnotationCodegen[PropertyDescriptorImpl@7a1f22a] +++|+++
R: AnnotationVisitor

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@52e4a408]
T: IrValueParameter

public abstract operator fun next(): org.jetbrains.kotlin.ir.expressions.IrVarargElement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@17be980a]
T: IrVarargElement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7cba1e45]
T: ClassCodegen

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrDeclaration defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@bc205f7]
T: IrDeclaration

public abstract operator fun next(): org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@123a254a]
T: ClassCodegen

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrClass defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@7b810570]
T: IrClass

public abstract fun next(): org.jetbrains.kotlin.ir.types.IrType defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@39c9a873]
T: IrType


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: Label

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrBody[DeserializedSimpleFunctionDescriptor@b502756]
R: PromisedValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@6aa2bad7]
T: IrValueParameter

public open fun visitBlock(expression: org.jetbrains.kotlin.ir.expressions.IrBlock, data: org.jetbrains.kotlin.backend.jvm.codegen.BlockInfo): org.jetbrains.kotlin.backend.jvm.codegen.PromisedValue defined in org.jetbrains.kotlin.ir.visitors.IrElementVisitor[DeserializedSimpleFunctionDescriptor@5d1ae9c2]
R: PromisedValue

public open fun visitBlock(expression: org.jetbrains.kotlin.ir.expressions.IrBlock, data: org.jetbrains.kotlin.backend.jvm.codegen.BlockInfo): org.jetbrains.kotlin.backend.jvm.codegen.PromisedValue defined in org.jetbrains.kotlin.ir.visitors.IrElementVisitor[DeserializedSimpleFunctionDescriptor@5d1ae9c2]
R: PromisedValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: MaterialValue

public open fun visitBlock(expression: org.jetbrains.kotlin.ir.expressions.IrBlock, data: org.jetbrains.kotlin.backend.jvm.codegen.BlockInfo): org.jetbrains.kotlin.backend.jvm.codegen.PromisedValue defined in org.jetbrains.kotlin.ir.visitors.IrElementVisitor[DeserializedSimpleFunctionDescriptor@5d1ae9c2]
R: PromisedValue

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: MaterialValue

internal final inline fun <T : org.jetbrains.kotlin.backend.jvm.codegen.ExpressionInfo, R> withBlock(info: T, f: (T) -> R): R defined in org.jetbrains.kotlin.backend.jvm.codegen.BlockInfo[SimpleFunctionDescriptorImpl@7517abc2]
R: MaterialValue

internal final inline fun <T : org.jetbrains.kotlin.backend.jvm.codegen.ExpressionInfo, R> withBlock(info: T, f: (T) -> R): R defined in org.jetbrains.kotlin.backend.jvm.codegen.BlockInfo[SimpleFunctionDescriptorImpl@7517abc2]
R: MaterialValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.org.objectweb.asm.Type defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2b791fd2]
E: Type

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Nothing

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public open fun visitSetField(expression: org.jetbrains.kotlin.ir.expressions.IrSetField, data: org.jetbrains.kotlin.backend.jvm.codegen.BlockInfo): org.jetbrains.kotlin.backend.jvm.codegen.PromisedValue defined in org.jetbrains.kotlin.ir.visitors.IrElementVisitor[DeserializedSimpleFunctionDescriptor@2bd33803]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: ReifiedTypeParametersUsages

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.expressions.IrVarargElement defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@7890638]
E: IrVarargElement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.expressions.IrVarargElement defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@7890638]
E: IrVarargElement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrVarargElement[DeserializedSimpleFunctionDescriptor@31954151]
R: PromisedValue

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.ir.expressions.IrVarargElement> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@49aa5126]
T: IndexedValue<IrVarargElement>

public final operator fun component2(): org.jetbrains.kotlin.ir.expressions.IrVarargElement defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@3f4af96c]
T: IrVarargElement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrVarargElement[DeserializedSimpleFunctionDescriptor@31954151]
R: PromisedValue

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.types.IrTypeArgument defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@7eb6379d]
E: IrTypeArgument

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Nothing

public abstract fun next(): org.jetbrains.kotlin.ir.expressions.IrBranch defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@5aee1a4e]
T: IrBranch

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4a5b5d30]
E: IrExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4a5b5d30]
E: IrExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue


internal final inline fun <T : org.jetbrains.kotlin.backend.jvm.codegen.ExpressionInfo, R> withBlock(info: T, f: (T) -> R): R defined in org.jetbrains.kotlin.backend.jvm.codegen.BlockInfo[SimpleFunctionDescriptorImpl@7517abc2]
R: PromisedValue

internal final inline fun <T : org.jetbrains.kotlin.backend.jvm.codegen.ExpressionInfo, R> withBlock(info: T, f: (T) -> R): R defined in org.jetbrains.kotlin.backend.jvm.codegen.BlockInfo[SimpleFunctionDescriptorImpl@7517abc2]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract operator fun next(): org.jetbrains.kotlin.ir.expressions.IrCatch defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@78f8df5f]
T: IrCatch

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cf09c05]
T: IrCatch

public final operator fun component1(): org.jetbrains.org.objectweb.asm.Label defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2c56ae]
A: Label

public final operator fun component2(): org.jetbrains.org.objectweb.asm.Label defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2d41a4dd]
B: Label

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@777b811f]
R: Label

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.ir.declarations.IrTypeParameter, org.jetbrains.kotlin.ir.types.IrType> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1954717]
T: Entry<IrTypeParameter, IrType>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5a308d]
K: IrTypeParameter

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@63c6da15]
V: IrType

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.types.IrTypeArgument defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@7eb6379d]
E: IrTypeArgument

public final val second: org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.IrReificationArgument defined in kotlin.Pair[DeserializedPropertyDescriptor@6a3080a0]
B: IrReificationArgument

public final val first: org.jetbrains.kotlin.ir.declarations.IrTypeParameter defined in kotlin.Pair[DeserializedPropertyDescriptor@4cac21e8]
A: IrTypeParameter

public final val first: org.jetbrains.kotlin.ir.declarations.IrTypeParameter defined in kotlin.Pair[DeserializedPropertyDescriptor@4cac21e8]
A: IrTypeParameter

public final val second: org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.IrReificationArgument defined in kotlin.Pair[DeserializedPropertyDescriptor@1f70bd71]
B: IrReificationArgument

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Array<(kotlin.String..kotlin.String?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@1fb79a6e]
T: IrValueParameter

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@b4e09d1]
T: IrValueParameter

public final operator fun component1(): org.jetbrains.kotlin.descriptors.ParameterDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@57d0dcd]
A: ParameterDescriptor

public final operator fun component2(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6a4abf8f]
B: IrExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.org.objectweb.asm.Type defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@541d1d80]
E: Type

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: Boolean

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1cff6016]
T: IrFunctionReference

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1cff6016]
T: Type

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrExpressionLambdaImpl

public inline fun <T> kotlin.collections.Iterable<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@53d976f0]
T: [@kotlin.internal.NoInfer] IrClass

public inline fun <T> kotlin.collections.Iterable<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@53d976f0]
T: [@kotlin.internal.NoInfer] IrFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: IrFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: KClass<out KotlinType>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: Type

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Nothing

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1cff6016]
T: IrTypeArgument

public final operator fun component1(): org.jetbrains.kotlin.types.Variance defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@413dad8f]
A: Variance

public final operator fun component2(): org.jetbrains.kotlin.ir.types.IrType defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@10e23692]
B: IrType

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: Type

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.backend.jvm.codegen.PossiblyInnerIrType defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@467061be]
E: PossiblyInnerIrType

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: Boolean

public abstract operator fun next(): org.jetbrains.kotlin.backend.jvm.codegen.PossiblyInnerIrType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6ffc9966]
T: PossiblyInnerIrType

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cf09c05]
T: IrTypeArgument

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cf09c05]
T: IrTypeParameterSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Boolean

public abstract fun next(): org.jetbrains.kotlin.ir.expressions.IrBranch defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@7f6a32cf]
T: IrBranch

public open fun get(index: kotlin.Int): org.jetbrains.kotlin.backend.jvm.codegen.SwitchGenerator.CallToLabel defined in java.util.ArrayList[JavaMethodDescriptor@20bbee81]
E: CallToLabel



public abstract fun next(): org.jetbrains.kotlin.ir.expressions.IrBranch defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@17617ef9]
T: IrBranch

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6bdea3b8]
T: ValueToLabel

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cf09c05]
T: ValueToLabel

public abstract operator fun next(): org.jetbrains.kotlin.backend.jvm.codegen.SwitchGenerator.ValueToLabel defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7dd7b65f]
T: ValueToLabel

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: Unit

public abstract fun next(): org.jetbrains.kotlin.backend.jvm.codegen.SwitchGenerator.ExpressionToLabel defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@6e1241d7]
T: ExpressionToLabel

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: Nothing

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrGetValue[DeserializedSimpleFunctionDescriptor@79e1c79b]
R: PromisedValue

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrGetValue[DeserializedSimpleFunctionDescriptor@79e1c79b]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrGetValue[DeserializedSimpleFunctionDescriptor@79e1c79b]
R: PromisedValue

public abstract fun next(): org.jetbrains.kotlin.backend.jvm.codegen.SwitchGenerator.ValueToLabel defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@65372e68]
T: ValueToLabel

public abstract fun next(): org.jetbrains.kotlin.backend.jvm.codegen.SwitchGenerator.ValueToLabel defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@34c0d158]
T: ValueToLabel

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrGetValue[DeserializedSimpleFunctionDescriptor@79e1c79b]
R: PromisedValue

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: Unit

@kotlin.SinceKotlin public fun <K, V> kotlin.collections.Map<K, V>.getValue(key: K): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6957dc1e]
V: Type

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Boolean

public abstract fun next(): org.jetbrains.kotlin.ir.types.IrType defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@5c444a5a]
T: IrType

public abstract fun next(): kotlin.String defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@2bebf3c3]
T: String

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@3ac9a3a9]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrField

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c5b9eb8]
V: IrField

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrField

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c5b9eb8]
V: IrField

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c5b9eb8]
V: IrConstructor

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrValueParameterImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructorImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrField

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c5b9eb8]
V: IrField

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c5b9eb8]
V: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrClassImpl

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c5b9eb8]
V: IrClass

@kotlin.SinceKotlin public fun <K, V> kotlin.collections.Map<K, V>.getValue(key: K): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6957dc1e]
V: PrimitiveRefProvider

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructorCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrVariableImpl

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component1(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@480f7488]
T: IrExpression

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component2(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@38225370]
T: IrExpression

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component1(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@480f7488]
T: IrExpression

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component2(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@38225370]
T: IrExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component1(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@480f7488]
T: IrExpression

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component2(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@38225370]
T: IrExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: Type

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: Type

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

private final val invoke: org.jetbrains.kotlin.backend.jvm.intrinsics.IntrinsicCallable.(v: org.jetbrains.org.objectweb.asm.commons.InstructionAdapter) -> kotlin.Unit defined in org.jetbrains.kotlin.backend.jvm.intrinsics.IntrinsicCallable[PropertyDescriptorImpl@36a52113] +++|+++
R: Unit


@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: Method

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

public abstract operator fun next(): kotlin.collections.IndexedValue<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@358c1814]
T: IndexedValue<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?)>

public abstract operator fun get(index: kotlin.Int): org.jetbrains.org.objectweb.asm.Type defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@52bf1a7c]
E: Type



@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: ArrayList<Type>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5a308d]
K: PrimitiveType

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@63c6da15]
V: IrClassSymbol

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1cff6016]
T: IrTypeParameter

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: MaterialValue

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: MaterialValue

public abstract operator fun get(index: kotlin.Int): org.jetbrains.org.objectweb.asm.Type defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@52bf1a7c]
E: Type

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component1(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@480f7488]
T: IrExpression

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component2(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@38225370]
T: IrExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: PromisedValue

public abstract operator fun next(): org.jetbrains.kotlin.backend.jvm.lower.AddContinuationLowering.SuspendLambdaInfo defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4a12bdf2]
T: SuspendLambdaInfo

public abstract operator fun next(): org.jetbrains.kotlin.ir.declarations.IrFunction defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@107218e8]
T: IrFunction

public inline fun <T> kotlin.collections.Iterable<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@53d976f0]
T: SuspendLambdaInfo

public final val second: org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Pair[DeserializedPropertyDescriptor@efc2203]
B: IrExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructorCall

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4c6f0d13]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: IrField

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrClass

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrGetFieldImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrGetFieldImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSimpleFunction

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.ir.declarations.IrValueParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4af6827b]
T: IndexedValue<IrValueParameter>

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@6e967f15]
T: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrSimpleFunction

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cf09c05]
T: IrValueParameter

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6bdea3b8]
T: IrValueParameter

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunction

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.ir.declarations.IrField> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@58957e45]
T: IndexedValue<IrField>

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrField defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@26b3f594]
T: IrField

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cf09c05]
T: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrFunctionAccessExpression

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6bdea3b8]
T: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrSimpleFunction

public inline fun <reified T> kotlin.sequences.Sequence<*>.firstIsInstance(): T defined in org.jetbrains.kotlin.utils.addToStdlib[DeserializedSimpleFunctionDescriptor@64d782ff]
T: IrDeclarationContainer

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrClass

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrConstructor

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrDelegatingConstructorCall

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.ir.declarations.IrValueParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5992f271]
T: IndexedValue<IrValueParameter>

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@6a321cb]
T: IrValueParameter

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrField defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4c829beb]
E: IrField

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrConstructor

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.ir.declarations.IrValueParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@48dc1477]
T: IndexedValue<IrValueParameter>

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@62146950]
T: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrDelegatingConstructorCall

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrConstructor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: IrField

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrClass

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: IrValueParameter

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrConstructor

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrDelegatingConstructorCall

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrConstructor

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunction

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: IrGetFieldImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrSimpleFunction

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrSimpleFunction

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrFunction defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@759f1d2e]
T: IrFunction

public fun <E> kotlin.collections.MutableList<E>.pop(): E defined in org.jetbrains.kotlin.backend.common[DeserializedSimpleFunctionDescriptor@39f5e2aa]
E: IrFunction

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cf09c05]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionReferenceImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4c6f0d13]
R: IrGetValueImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4c6f0d13]
R: IrGetValueImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: IrGetValueImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: IrGetValueImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrFunctionImpl

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c5b9eb8]
V: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrClass

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrEnumEntryImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: KotlinRetention

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructorCallImpl

public abstract operator fun next(): org.jetbrains.kotlin.ir.declarations.IrEnumEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3536d3d7]
T: IrEnumEntry

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructorCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: IrClass

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructorCall

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4c6f0d13]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4c6f0d13]
R: IrExpressionBodyImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrField

public abstract operator fun next(): org.jetbrains.kotlin.ir.declarations.IrSimpleFunction defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@53e3f695]
T: [@kotlin.internal.NoInfer] IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: IrFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: IrFunctionImpl

public abstract operator fun next(): org.jetbrains.kotlin.backend.common.bridges.Bridge<org.jetbrains.kotlin.backend.jvm.lower.SignatureWithSource> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@16c88c52]
T: Bridge<SignatureWithSource>

public final val from: org.jetbrains.kotlin.backend.jvm.lower.SignatureWithSource defined in org.jetbrains.kotlin.backend.common.bridges.Bridge[DeserializedPropertyDescriptor@7b90bf17]
Signature: SignatureWithSource

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: IrFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionImpl

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4c6f0d13]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrValueParameterImpl

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@5137361a]
T: IrValueParameter

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cf09c05]
T: IrStatement

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cf09c05]
T: IrStatement

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cf09c05]
T: IrStatement

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunctionSymbol

public final val second: org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Pair[DeserializedPropertyDescriptor@68ed02f3]
B: IrExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructorCall

public final val first: org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.Pair[DeserializedPropertyDescriptor@5a9eae55]
A: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrConstructor

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6bdea3b8]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrDelegatingConstructorCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSimpleFunction

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@63329415]
T: IrValueParameter

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.ir.types.IrType> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7d2a1086]
T: IndexedValue<IrType>

public final operator fun component2(): org.jetbrains.kotlin.ir.types.IrType defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@2ae683dc]
T: IrType

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.ir.symbols.IrTypeParameterSymbol, org.jetbrains.kotlin.ir.types.IrType> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3a5ca27d]
T: Entry<IrTypeParameterSymbol, IrType>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5a308d]
K: IrTypeParameterSymbol

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@63c6da15]
V: IrType

public abstract operator fun next(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7f6181a0]
T: IrValueParameter

public final val first: org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.Pair[DeserializedPropertyDescriptor@5a9eae55]
A: IrValueParameter

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cf09c05]
T: IrType

public final val second: org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Pair[DeserializedPropertyDescriptor@68ed02f3]
B: IrExpression

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4c6f0d13]
R: IrExpressionBodyImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4c6f0d13]
R: IrExpressionBodyImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4c6f0d13]
R: IrExpressionBodyImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4c6f0d13]
R: IrExpressionBodyImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrCall

public abstract operator fun next(): org.jetbrains.kotlin.ir.declarations.IrSimpleFunction defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@58749582]
T: IrSimpleFunction

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@599ee2a8]
T: IrValueParameter

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1cff6016]
T: IrValueParameter

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrConstructor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrValueParameterImpl

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6bdea3b8]
T: IrType

public inline fun <T> kotlin.collections.Iterable<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@68a7ed18]
T: IrType

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrCallImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructorImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrValueParameterImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrValueParameterImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrField

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Boolean

public inline fun <T> kotlin.sequences.Sequence<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@475208be]
T: IrFunction

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrFieldImpl

@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.getOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> T): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6fa53d59]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.getOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> T): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6fa53d59]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <K, V> kotlin.collections.Map<K, V>.getOrElse(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5d16d44a]
V: IrConstructorImpl

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <K, V> kotlin.collections.Map<K, V>.getOrElse(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5d16d44a]
V: IrConstructorImpl

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c5b9eb8]
V: MutableList<IrClass>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrClassImpl

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

val evaluator: (kotlin.Any?, kotlin.Any?) -> kotlin.Any defined in org.jetbrains.kotlin.backend.jvm.lower.FoldConstantLowering.tryFoldingBuiltinBinaryOps[LocalVariableDescriptor@684a8133] +++|+++
R: Any

public abstract operator fun next(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@27ef5e05]
T: IrExpression

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.expressions.IrExpression): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@9cd9ee5]
E: IrExpression

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.expressions.IrExpression): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@9cd9ee5]
E: IrExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrCallImpl

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1cff6016]
T: [@kotlin.internal.NoInfer] IrSimpleType

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cf09c05]
T: IrTypeArgument

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunction

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1cff6016]
T: IrValueParameter

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1cff6016]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrCall

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@3e4482ba]
T: IrValueParameter

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1cff6016]
T: IrValueParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5a308d]
K: JvmClassName

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@63c6da15]
V: MutableList<IrClass>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrClass

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrClass defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@2de5c6cc]
T: IrClass

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrDeclaration defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@211d4e4d]
T: IrDeclaration

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrField

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@5ea54e38]
T: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4c6f0d13]
R: IrGetFieldImpl

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@6ebb82a8]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionImpl

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@7634c49d]
T: IrValueParameter

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrTypeParameter defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@4a96ec04]
T: IrTypeParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@95d38e2]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@95d38e2]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@95d38e2]
E: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionImpl

public final operator fun component1(): org.jetbrains.kotlin.ir.declarations.IrClass defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@10e977a]
A: IrClass

public final operator fun component2(): kotlin.Boolean defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@35f41320]
B: Boolean

public abstract operator fun next(): org.jetbrains.kotlin.ir.declarations.IrSimpleFunction defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5606f010]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: DeclarationIrBuilder

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrDeclaration defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@301a7745]
T: IrDeclaration

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: IrReturnImpl

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: IrReturnImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionReferenceImpl

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: IrFunctionReferenceImpl

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: IrFunctionReferenceImpl

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrFile[DeserializedSimpleFunctionDescriptor@47d396a6]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: String

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrDeclaration defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@19c59628]
T: IrDeclaration

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrDeclaration[DeserializedSimpleFunctionDescriptor@640a3cf]
R: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: String

public open fun visitSimpleFunction(declaration: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction, data: org.jetbrains.kotlin.backend.jvm.lower.InventNamesForLocalClasses.Data): kotlin.Unit defined in org.jetbrains.kotlin.ir.visitors.IrElementVisitor[DeserializedSimpleFunctionDescriptor@426c0f30]
R: Unit

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cf09c05]
T: IrStatement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@653bb272]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrBlockImpl

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.expressions.IrBranch defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@5d94e382]
E: IrBranch

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.expressions.IrBranch defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@5d94e382]
E: IrBranch

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.expressions.IrBranch defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@5d94e382]
E: IrBranch

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.expressions.IrBranch defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@5d94e382]
E: IrBranch

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrCallImpl

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.expressions.IrBranch defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@5d94e382]
E: IrBranch

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.expressions.IrBranch defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@5d94e382]
E: IrBranch

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.expressions.IrBranch defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@5d94e382]
E: IrBranch

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.expressions.IrBranch defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@5d94e382]
E: IrBranch

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrCallImpl

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6bdea3b8]
T: IrBranch

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@19aac4e3]
E: IrStatement

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@19aac4e3]
E: IrStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrDelegatingConstructorCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrDeclaration[DeserializedSimpleFunctionDescriptor@640a3cf]
R: IrElement

public abstract operator fun next(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@310d5638]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4c6f0d13]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Pair<IrValueParameter, IrExpression?>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Pair<IrValueParameter, IrExpression?>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Pair<IrValueParameter, IrExpression?>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Pair<IrValueParameter, IrExpression?>

public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.ir.declarations.IrValueParameter, org.jetbrains.kotlin.ir.expressions.IrExpression?> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4b8488f]
T: Pair<IrValueParameter, IrExpression?>

public final operator fun component1(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4278b7d8]
A: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionReferenceImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSetVariableImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Nothing

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@33aa53c2]
T: IrConstructor

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructor

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: Unit

public final val getBoxFunction: (org.jetbrains.kotlin.ir.declarations.IrClass) -> org.jetbrains.kotlin.ir.declarations.IrSimpleFunction defined in org.jetbrains.kotlin.backend.jvm.lower.inlineclasses.MemoizedInlineClassReplacements[PropertyDescriptorImpl@1f713806] +++|+++
R: IrSimpleFunction

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructorCall

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: Unit

public final val getUnboxFunction: (org.jetbrains.kotlin.ir.declarations.IrClass) -> org.jetbrains.kotlin.ir.declarations.IrSimpleFunction defined in org.jetbrains.kotlin.backend.jvm.lower.inlineclasses.MemoizedInlineClassReplacements[PropertyDescriptorImpl@79a3d770] +++|+++
R: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: IrGetValueImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: IrGetValueImpl

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.ir.declarations.IrValueParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@135a6623]
T: IndexedValue<IrValueParameter>

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@7456ef1e]
T: IrValueParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructorImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionImpl

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@70e63e8c]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: SingletonObjectJvmStaticLowering

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c5b9eb8]
V: Pair<MutableMap<IrEnumEntry, Int>, IrField>

public final operator fun component1(): kotlin.collections.MutableMap<org.jetbrains.kotlin.ir.declarations.IrEnumEntry, kotlin.Int> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@22ce68fa]
A: MutableMap<IrEnumEntry, Int>

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrField defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@759e6c5d]
B: IrField

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c5b9eb8]
V: Int

public final operator fun component1(): kotlin.collections.MutableMap<org.jetbrains.kotlin.ir.declarations.IrEnumEntry, kotlin.Int> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5bcfeaa6]
A: MutableMap<IrEnumEntry, Int>

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrField defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7cc59aad]
B: IrField

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrCall

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<org.jetbrains.kotlin.ir.declarations.IrClass, kotlin.Pair<kotlin.collections.MutableMap<org.jetbrains.kotlin.ir.declarations.IrEnumEntry, kotlin.Int>, org.jetbrains.kotlin.ir.declarations.IrField>> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@5f6c2b60]
T: MutableEntry<IrClass, Pair<MutableMap<IrEnumEntry, Int>, IrField>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5a308d]
K: IrClass

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@63c6da15]
V: Pair<MutableMap<IrEnumEntry, Int>, IrField>

public final operator fun component1(): kotlin.collections.MutableMap<org.jetbrains.kotlin.ir.declarations.IrEnumEntry, kotlin.Int> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@202640de]
A: MutableMap<IrEnumEntry, Int>

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrField defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@716bad74]
B: IrField

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructorCall

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<org.jetbrains.kotlin.ir.declarations.IrEnumEntry, kotlin.Int> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@7fcaf699]
T: MutableEntry<IrEnumEntry, Int>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5a308d]
K: IrEnumEntry

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@63c6da15]
V: Int

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrClass

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrAnonymousInitializerImpl

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: IrAnonymousInitializerImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrVariableImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFieldImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: IrGetFieldImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: IrGetFieldImpl

@kotlin.SinceKotlin public fun <K, V> kotlin.collections.Map<K, V>.getValue(key: K): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6957dc1e]
V: IrFieldSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: IrSetFieldImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: IrSetFieldImpl

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrFile[DeserializedSimpleFunctionDescriptor@47d396a6]
R: IrElement


@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFieldImpl

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: IrExpression

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@18bd86ff]
T: IrValueParameter


@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4c6f0d13]
R: IrExpressionBodyImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSimpleFunction

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: PropertyReferenceKind

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: PropertyReferenceKind

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: PropertyReferenceKind

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: PropertyReferenceKind

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c5b9eb8]
V: PropertyInstance

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4c6f0d13]
R: IrFunctionAccessExpression

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@33aa53c2]
T: IrConstructorSymbol

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructorCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4c6f0d13]
R: IrFunctionAccessExpression

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c5b9eb8]
V: IrClass

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@33aa53c2]
T: IrConstructor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4c6f0d13]
R: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrClass

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrConstructor

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrProperty

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunction

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunction

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunction

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1d2b09b3]
E: IrValueParameter

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1d2b09b3]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: IrTypeOperatorCallImpl

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1d2b09b3]
E: IrValueParameter

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1d2b09b3]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: IrTypeOperatorCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: IrSimpleFunction

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cf09c05]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrCall

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2a2d9d85]
E: IrValueParameter

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2a2d9d85]
E: IrValueParameter

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cf09c05]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4c6f0d13]
R: IrExpressionBodyImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrField

public abstract val key: org.jetbrains.kotlin.backend.jvm.lower.PropertyReferenceLowering.PropertyCacheKey defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@40cc8e1f]
K: PropertyCacheKey

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrStatement

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<kotlin.Pair<org.jetbrains.kotlin.ir.declarations.IrDeclarationParent, org.jetbrains.kotlin.name.Name>, kotlin.collections.MutableList<org.jetbrains.kotlin.ir.declarations.IrField>> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@3e046173]
T: MutableEntry<Pair<IrDeclarationParent, Name>, MutableList<IrField>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5a308d]
K: Pair<IrDeclarationParent, Name>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@63c6da15]
V: MutableList<IrField>

public abstract operator fun next(): org.jetbrains.kotlin.ir.declarations.IrField defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@12537992]
T: IrField

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c5b9eb8]
V: MutableList<IrField>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrFieldImpl

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cf09c05]
T: IrStatement

public abstract operator fun next(): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@22a5fec9]
T: IrStatement

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cf09c05]
T: IrStatement

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrClass

public abstract operator fun next(): org.jetbrains.kotlin.ir.declarations.IrField defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7454f295]
T: IrField

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@33aa53c2]
T: IrConstructor

public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.ir.declarations.IrField, org.jetbrains.kotlin.ir.declarations.IrValueParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5317db8e]
T: Pair<IrField, IrValueParameter>

public final operator fun component1(): org.jetbrains.kotlin.ir.declarations.IrField defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2103f77e]
A: IrField

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@407081ee]
B: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrConstructor

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunction


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSimpleFunction

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5a9c7c94]
T: IrSimpleFunction

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrField defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5b179e4b]
E: IrField

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionAccessExpression

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c5b9eb8]
V: IrClass

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@33aa53c2]
T: IrConstructor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionAccessExpression

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@33aa53c2]
T: IrConstructor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionAccessExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrField defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5b179e4b]
E: IrField

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

public abstract fun removeAt(index: kotlin.Int): {IrDeclarationReference & IrExpressionBase} defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@3a0b1805]
E: {IrDeclarationReference & IrExpressionBase}

public abstract fun removeAt(index: kotlin.Int): {IrDeclarationReference & IrExpressionBase} defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@3a0b1805]
E: {IrDeclarationReference & IrExpressionBase}

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionAccessExpression

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@33aa53c2]
T: IrSimpleFunction

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrSimpleFunction

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@33aa53c2]
T: IrConstructor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionAccessExpression

public fun <E> kotlin.collections.MutableList<E>.pop(): E defined in org.jetbrains.kotlin.backend.common[DeserializedSimpleFunctionDescriptor@39f5e2aa]
E: IrDeclarationParent

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrClass[DeserializedSimpleFunctionDescriptor@1b38a21]
R: IrElement

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c5b9eb8]
V: IrFunction

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrFunction

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: IrReturnImpl

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@211513b3]
R: IrReturnImpl

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrFile[DeserializedSimpleFunctionDescriptor@47d396a6]
R: IrElement



public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c5b9eb8]
V: ToSyT


public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cf09c05]
T: [@kotlin.internal.NoInfer] IrClass

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrDelegatingConstructorCallImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrConstructor

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrCallImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrFunctionImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrFunctionImpl

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@491d8c23]
T: IrFunctionImpl

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: Unit

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrTypeParameterImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrValueParameterImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrValueParameterImpl

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@95d38e2]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrValueParameterImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: ValueParameterDescriptorImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@68740d1c]
R: ValueParameterDescriptorImpl

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4da81fef]
E: IrValueParameter


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7095d59c]
T: IrFunctionImpl

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.ir.declarations.IrValueParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2a36e635]
T: IndexedValue<IrValueParameter>

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@2a7fb3fb]
T: IrValueParameter

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.ir.declarations.IrValueParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@37d405d9]
T: IndexedValue<IrValueParameter>

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@71e8c8cf]
T: IrValueParameter

public final operator fun getValue(thisRef: org.jetbrains.kotlin.js.backend.ast.JsInvocation, desc: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.js.backend.ast.metadata.MetadataProperty[SimpleFunctionDescriptorImpl@3450c898]
R: Boolean

public final operator fun getValue(thisRef: org.jetbrains.kotlin.js.backend.ast.JsNameRef, desc: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.js.backend.ast.metadata.MetadataProperty[SimpleFunctionDescriptorImpl@1046712]
R: Boolean

public final operator fun getValue(thisRef: org.jetbrains.kotlin.js.backend.ast.JsFunction, desc: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.js.backend.ast.metadata.MetadataProperty[SimpleFunctionDescriptorImpl@4312bfe0]
R: Boolean

public final operator fun getValue(thisRef: org.jetbrains.kotlin.js.backend.ast.JsParameter, desc: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.js.backend.ast.metadata.MetadataProperty[SimpleFunctionDescriptorImpl@29cbe3fb]
R: Boolean

public final operator fun getValue(thisRef: org.jetbrains.kotlin.js.backend.ast.JsInvocation, desc: kotlin.reflect.KProperty<*>): org.jetbrains.kotlin.js.backend.ast.metadata.BoxingKind defined in org.jetbrains.kotlin.js.backend.ast.metadata.MetadataProperty[SimpleFunctionDescriptorImpl@7ba6d0a5]
R: BoxingKind

public final operator fun getValue(thisRef: org.jetbrains.kotlin.js.backend.ast.JsExpression, desc: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.js.backend.ast.metadata.MetadataProperty[SimpleFunctionDescriptorImpl@465f7740]
R: Boolean

public final operator fun getValue(thisRef: org.jetbrains.kotlin.js.backend.ast.metadata.HasMetadata, desc: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.js.backend.ast.metadata.MetadataProperty[SimpleFunctionDescriptorImpl@698757be]
R: Boolean

public final operator fun getValue(thisRef: org.jetbrains.kotlin.js.backend.ast.metadata.HasMetadata, desc: kotlin.reflect.KProperty<*>): org.jetbrains.kotlin.js.backend.ast.metadata.SideEffectKind defined in org.jetbrains.kotlin.js.backend.ast.metadata.MetadataProperty[SimpleFunctionDescriptorImpl@78fb759e]
R: SideEffectKind

public final operator fun getValue(thisRef: org.jetbrains.kotlin.js.backend.ast.JsExpression, desc: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.js.backend.ast.metadata.MetadataProperty[SimpleFunctionDescriptorImpl@630eaba1]
R: Boolean

public final operator fun getValue(thisRef: org.jetbrains.kotlin.js.backend.ast.JsNameRef, desc: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.js.backend.ast.metadata.MetadataProperty[SimpleFunctionDescriptorImpl@c459f7b]
R: Boolean

public final operator fun getValue(thisRef: org.jetbrains.kotlin.js.backend.ast.JsNameRef, desc: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.js.backend.ast.metadata.MetadataProperty[SimpleFunctionDescriptorImpl@542e84f3]
R: Boolean

public final operator fun getValue(thisRef: org.jetbrains.kotlin.js.backend.ast.JsNameRef, desc: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.js.backend.ast.metadata.MetadataProperty[SimpleFunctionDescriptorImpl@4382dadf]
R: Boolean

public final operator fun getValue(thisRef: org.jetbrains.kotlin.js.backend.ast.JsFunction, desc: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.js.backend.ast.metadata.MetadataProperty[SimpleFunctionDescriptorImpl@28364e15]
R: Boolean

public final operator fun getValue(thisRef: org.jetbrains.kotlin.js.backend.ast.JsFunction, desc: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.js.backend.ast.metadata.MetadataProperty[SimpleFunctionDescriptorImpl@766ad3c6]
R: Boolean

public final operator fun getValue(thisRef: org.jetbrains.kotlin.js.backend.ast.JsName, desc: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.js.backend.ast.metadata.MetadataProperty[SimpleFunctionDescriptorImpl@441f592]
R: Boolean

public abstract operator fun next(): T defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@bd1900c]
T: T

public abstract operator fun next(): T defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@683e331]
T: T

public inline fun <T> kotlin.sequences.Sequence<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@67370c7f]
T: JsScope

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@509f2af1]
R: Int

public abstract fun next(): org.jetbrains.kotlin.js.parser.AccumulatingReporter.Warning defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@7e1b649]
T: Warning

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@509f2af1]
R: List<JsExpressionStatement>


@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4b0cd8da]
T: StringWriter

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<kotlin.String, org.jetbrains.kotlin.js.parser.sourcemaps.JsonNode> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@46ff9b4b]
T: MutableEntry<String, JsonNode>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@730fa51f]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@15c3a86]
V: JsonNode

public abstract fun next(): org.jetbrains.kotlin.js.parser.sourcemaps.JsonNode defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@7871d3cb]
T: JsonNode

private final inline fun <T> advanceAndThen(f: () -> T): T defined in org.jetbrains.kotlin.js.parser.sourcemaps.JsonParser[SimpleFunctionDescriptorImpl@1b9110b0]
T: Char

private final inline fun <T> advanceAndThen(f: () -> T): T defined in org.jetbrains.kotlin.js.parser.sourcemaps.JsonParser[SimpleFunctionDescriptorImpl@1b9110b0]
T: Char

private final inline fun <T> advanceAndThen(f: () -> T): T defined in org.jetbrains.kotlin.js.parser.sourcemaps.JsonParser[SimpleFunctionDescriptorImpl@1b9110b0]
T: Char

private final inline fun <T> advanceAndThen(f: () -> T): T defined in org.jetbrains.kotlin.js.parser.sourcemaps.JsonParser[SimpleFunctionDescriptorImpl@1b9110b0]
T: Char

private final inline fun <T> advanceAndThen(f: () -> T): T defined in org.jetbrains.kotlin.js.parser.sourcemaps.JsonParser[SimpleFunctionDescriptorImpl@1b9110b0]
T: Char

private final inline fun <T> advanceAndThen(f: () -> T): T defined in org.jetbrains.kotlin.js.parser.sourcemaps.JsonParser[SimpleFunctionDescriptorImpl@1b9110b0]
T: Char

private final inline fun <T> advanceAndThen(f: () -> T): T defined in org.jetbrains.kotlin.js.parser.sourcemaps.JsonParser[SimpleFunctionDescriptorImpl@1b9110b0]
T: Char

private final inline fun <T> advanceAndThen(f: () -> T): T defined in org.jetbrains.kotlin.js.parser.sourcemaps.JsonParser[SimpleFunctionDescriptorImpl@1b9110b0]
T: Char

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.js.parser.sourcemaps.SourceMapGroup> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@719f1236]
T: IndexedValue<SourceMapGroup>

public final operator fun component2(): org.jetbrains.kotlin.js.parser.sourcemaps.SourceMapGroup defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@248a44c6]
T: SourceMapGroup

public abstract fun next(): org.jetbrains.kotlin.js.parser.sourcemaps.SourceMapSegment defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@38f1336e]
T: SourceMapSegment

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.js.parser.sourcemaps.SourceMapGroup> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@eec1859]
T: IndexedValue<SourceMapGroup>

public final operator fun component2(): org.jetbrains.kotlin.js.parser.sourcemaps.SourceMapGroup defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@3a6f6959]
T: SourceMapGroup

public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@15f96e3e]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@509f2af1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.getOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> T): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5c0d50e7]
T: SourceMapGroup

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@509f2af1]
R: Unit

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.js.parser.sourcemaps.SourceMapSegment defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@6eabc635]
E: SourceMapSegment

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.SourceInfoAwareJsNode defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4c5289fd]
T: SourceInfoAwareJsNode

private final val sourceMapPathMapper: (kotlin.String) -> kotlin.String defined in org.jetbrains.kotlin.js.parser.sourcemaps.SourceMapLocationRemapper[PropertyDescriptorImpl@424e3d98] +++|+++
R: String

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7546d8b3]
T: JsNode

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@509f2af1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@509f2af1]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@509f2af1]
R: List<String>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@509f2af1]
R: List<String?>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@509f2af1]
R: StringReader

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4b0cd8da]
T: SourceMapGroup

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4b0cd8da]
T: SourceMapGroup

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@129c3e02]
E: String

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4b0cd8da]
T: SourceMapGroup

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: List<ClassId>

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.ClassifierDescriptorWithTypeParameters defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@7311dbb3]
E: ClassifierDescriptorWithTypeParameters

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@38cab388]
V: Int

public final val data: org.jetbrains.kotlin.descriptors.ModuleDescriptor defined in org.jetbrains.kotlin.serialization.js.JsModuleDescriptor[PropertyDescriptorImpl@2c84c1c3]
T: ModuleDescriptor

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.name.FqName, kotlin.ByteArray> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@43011468]
T: Entry<FqName, ByteArray>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@438303cd]
K: FqName

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@596a65d7]
V: ByteArray

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@11bfc2c]
R: Unit

public final val data: org.jetbrains.kotlin.descriptors.ModuleDescriptor defined in org.jetbrains.kotlin.serialization.js.JsModuleDescriptor[PropertyDescriptorImpl@59ddd3d0]
T: ModuleDescriptor

public final val data: org.jetbrains.kotlin.descriptors.ModuleDescriptor defined in org.jetbrains.kotlin.serialization.js.JsModuleDescriptor[PropertyDescriptorImpl@59ddd3d0]
T: ModuleDescriptor

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@1937522]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@d3e50e1]
T: ByteArrayOutputStream

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@438303cd]
K: FqName

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@596a65d7]
V: ByteArray

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.name.FqName, kotlin.ByteArray> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4067c6d3]
T: Entry<FqName, ByteArray>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@438303cd]
K: FqName

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@596a65d7]
V: ByteArray

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4e269992]
T: DeclarationDescriptor

val skip: (org.jetbrains.kotlin.descriptors.DeclarationDescriptor) -> kotlin.Boolean defined in org.jetbrains.kotlin.serialization.js.KotlinJavascriptSerializationUtil.serializeDescriptors[LocalVariableDescriptor@21656ecc] +++|+++
R: Boolean

public final operator fun component1(): org.jetbrains.kotlin.metadata.ProtoBuf.StringTable defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7ed5cc40]
A: StringTable

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3ab861a5]
B: QualifiedNameTable

public abstract val value: kotlin.Int defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@23c39fde]
V: Int

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.serialization.js.KotlinFileMetadata, kotlin.Int> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@351b9bf8]
T: Entry<KotlinFileMetadata, Int>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@438303cd]
K: KotlinFileMetadata

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@596a65d7]
V: Int

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5f9bfd1c]
T: AnnotationDescriptor

public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@237a11c5]
T: List<String>

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7b6d0eeb]
T: String

public final operator fun component1(): org.jetbrains.kotlin.metadata.ProtoBuf.StringTable defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7ed5cc40]
A: StringTable

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3ab861a5]
B: QualifiedNameTable

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@d3e50e1]
T: MutableSet<FqName>

public abstract operator fun next(): org.jetbrains.kotlin.name.FqName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@22663428]
T: FqName

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@1937522]
R: Pair<(org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header..org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header?), (org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library..org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library?)>

public abstract operator fun next(): org.jetbrains.kotlin.name.FqName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1047ed24]
T: FqName

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Pair<JsName, JsClassModel>

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5d2ff428]
E: JsExpression

public abstract fun next(): org.jetbrains.kotlin.js.backend.ast.JsNameBinding defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@4781715d]
T: JsNameBinding

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@d3e50e1]
T: JsClassModel

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@d3e50e1]
T: JsCase

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@d3e50e1]
T: JsCatch

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6fe71769]
T: JsExpressionStatement

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@d3e50e1]
T: JsRegExp

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@d3e50e1]
T: JsFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@d3e50e1]
T: JsNameRef

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@d3e50e1]
T: JsNameRef

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@d3e50e1]
T: JsInvocation

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@d3e50e1]
T: JsGlobalBlock

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@d3e50e1]
T: JsParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.serialization.js.ast.JsAstProtoBuf.Name defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@23a23d3d]
E: Name

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: JsName

public abstract fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@53adbc35]
E: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: String


public abstract val key: kotlin.String defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@269b8bf1]
K: String

public abstract fun next(): org.jetbrains.kotlin.js.backend.ast.JsImportedModule defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@78785aa5]
T: JsImportedModule

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@38cab388]
V: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<kotlin.String, org.jetbrains.kotlin.js.backend.ast.JsExpression> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@63ec8320]
T: MutableEntry<String, JsExpression>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@438303cd]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@596a65d7]
V: JsExpression

public abstract fun next(): org.jetbrains.kotlin.js.backend.ast.JsNameBinding defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@4781715d]
T: JsNameBinding

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<kotlin.String, org.jetbrains.kotlin.js.backend.ast.JsExpression> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@79c4196b]
T: MutableEntry<String, JsExpression>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@438303cd]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@596a65d7]
V: JsExpression

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@38cab388]
V: Int

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@438303cd]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@596a65d7]
V: JsGlobalBlock


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(kotlin.String..kotlin.String?), (kotlin.Any..kotlin.Any?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@14ff33d2]
T: MutableEntry<(kotlin.String..kotlin.String?), (kotlin.Any..kotlin.Any?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@38cab388]
V: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: Unit




private final val pathResolver: (java.io.File) -> kotlin.String defined in org.jetbrains.kotlin.serialization.js.ast.JsAstSerializer[PropertyDescriptorImpl@1066c011] +++|+++
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@56957dab]
R: KotlinJavascriptPackageFragment

public abstract operator fun next(): org.jetbrains.kotlin.name.FqName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@627e084c]
T: FqName

public abstract operator fun next(): org.jetbrains.kotlin.serialization.js.KotlinJavascriptPackageFragment defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2fd508c4]
T: KotlinJavascriptPackageFragment

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<java.io.File, kotlin.collections.MutableMap<kotlin.String, org.jetbrains.kotlin.incremental.js.FunctionWithSourceInfo>> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@5e27107c]
T: MutableEntry<File, MutableMap<String, FunctionWithSourceInfo>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@39fdfb9]
K: File

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5f42f78]
V: MutableMap<String, FunctionWithSourceInfo>

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<kotlin.String, org.jetbrains.kotlin.incremental.js.FunctionWithSourceInfo> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@56db4ca9]
T: MutableEntry<String, FunctionWithSourceInfo>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@39fdfb9]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5f42f78]
V: FunctionWithSourceInfo

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7e120dde]
V: MutableMap<String, Long>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1ad08028]
T: BasicWritableSlice<ModuleDescriptor, ModuleKind>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1ad08028]
T: BasicWritableSlice<ResolvedCall<out FunctionDescriptor>, LexicalScope>

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@71ddb0c2]
R: DiagnosticFactoryToRendererMap

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@10457137]
T: DiagnosticFactoryToRendererMap

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1ad08028]
T: StorageComponentContainer

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7e120dde]
V: MutableMap<String, FunctionWithSourceInfo>

@org.jetbrains.annotations.NotNull public open operator fun <T : (kotlin.Any..kotlin.Any?)> get(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>, @org.jetbrains.annotations.NotNull p1: T): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@7980ff7f]
T: ModuleKind

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2636150f]
R: PackageFragmentProvider

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6bd2d276]
T: KtFile

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2636150f]
R: Nothing

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5cc703a4]
T: String

public fun <T> kotlin.sequences.Sequence<T>.last(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5fb9544f]
T: CallableDescriptor

public fun <T> kotlin.sequences.Sequence<T>.last(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5fb9544f]
T: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2636150f]
R: Char

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6cca816]
T: TypeParameterDescriptor

public abstract operator fun next(): kotlin.collections.IndexedValue<(org.jetbrains.kotlin.types.KotlinType..org.jetbrains.kotlin.types.KotlinType?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7775e982]
T: IndexedValue<(org.jetbrains.kotlin.types.KotlinType..org.jetbrains.kotlin.types.KotlinType?)>


public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.types.TypeProjection, (org.jetbrains.kotlin.descriptors.TypeParameterDescriptor..org.jetbrains.kotlin.descriptors.TypeParameterDescriptor?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7da4b0db]
T: Pair<TypeProjection, (org.jetbrains.kotlin.descriptors.TypeParameterDescriptor..org.jetbrains.kotlin.descriptors.TypeParameterDescriptor?)>

public final operator fun component1(): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@505b33e5]
A: TypeProjection

public abstract operator fun next(): kotlin.collections.IndexedValue<kotlin.collections.List<org.jetbrains.kotlin.descriptors.TypeParameterDescriptor>> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5eb3ac75]
T: IndexedValue<List<TypeParameterDescriptor>>

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.descriptors.TypeParameterDescriptor> defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@d8fe0fc]
T: List<TypeParameterDescriptor>

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.descriptors.TypeParameterDescriptor> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6298d97c]
T: IndexedValue<TypeParameterDescriptor>

public final operator fun component2(): org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@68afb478]
T: TypeParameterDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2636150f]
R: Unit

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@562a436d]
E: String

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@71ddb0c2]
R: Nothing

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5cc703a4]
T: String

public final val <E : (com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?), A : (kotlin.Any..kotlin.Any?)> org.jetbrains.kotlin.diagnostics.DiagnosticWithParameters1<E, A>.a: A[MyPropertyDescriptor@1403c932]
A: JsCallData

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2636150f]
R: Unit

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@1946f034]
D: FunctionDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDelegatedSuperTypeEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@29373b9d]
T: KtDelegatedSuperTypeEntry

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2636150f]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2636150f]
R: Boolean


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2636150f]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtExpression defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@60131fe7]
T: KtExpression

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtSuperTypeListEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@24a93ee]
T: KtSuperTypeListEntry

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2636150f]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtAnonymousInitializer defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2fc4825e]
T: KtAnonymousInitializer

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2636150f]
R: Unit

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@1946f034]
D: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2636150f]
R: Unit

public final operator fun component2(): org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@324f9a54]
T: TypeParameterDescriptor

public final operator fun component2(): org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@324f9a54]
T: TypeParameterDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2636150f]
R: Map<TypeParameterDescriptor, KtTypeReference?>

public final operator fun component2(): org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@324f9a54]
T: TypeParameterDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6e5aef06]
T: TypeParameterDescriptor

public fun <T> kotlin.sequences.Sequence<T>.last(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5fb9544f]
T: DeclarationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.CallableMemberDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@445955e0]
T: CallableMemberDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.js.naming.SuggestedName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@87db0aa]
T: SuggestedName

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7e120dde]
V: MutableMap<String, DeclarationDescriptor>

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6b737864]
T: String

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.CallableMemberDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@18d08747]
T: CallableMemberDescriptor

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6b737864]
T: String

public final operator fun component1(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@36de96aa]
A: DeclarationDescriptor

public final operator fun component2(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4071c53a]
B: DeclarationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5f61de1e]
T: DeclarationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.js.naming.SuggestedName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@87db0aa]
T: SuggestedName

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6b737864]
T: String

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6b737864]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2636150f]
R: Unit

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6b737864]
T: String

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6b737864]
T: String

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6b737864]
T: String

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtAnnotationEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4799c113]
T: KtAnnotationEntry

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.descriptors.TypeParameterDescriptor..org.jetbrains.kotlin.descriptors.TypeParameterDescriptor?), (org.jetbrains.kotlin.types.KotlinType..org.jetbrains.kotlin.types.KotlinType?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@6213925]
T: MutableEntry<(org.jetbrains.kotlin.descriptors.TypeParameterDescriptor..org.jetbrains.kotlin.descriptors.TypeParameterDescriptor?), (org.jetbrains.kotlin.types.KotlinType..org.jetbrains.kotlin.types.KotlinType?)>

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@226df099]
T: AnnotationDescriptor

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5c0afe12]
T: SimplePlatform

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5c0afe12]
T: SimplePlatform

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5c0afe12]
T: SimplePlatform

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@684da9f1]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@14125377]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@3302eaec]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@7732837a]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@ca1a299]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@28d66caf]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@10926b63]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@6704b6c1]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@27a34aed]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@781e9194]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@5f2f09a8]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@7e2289ed]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@6e4d5e8d]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@3ae1b311]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@14a53dc7]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@383394f5]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@2d7b284e]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@64ac6d1f]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@3ca20957]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@2db00576]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@3e99304d]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@31ddfe87]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@7f2c748e]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@66a3976b]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@79e49ab5]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@3ae6896f]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@60d08299]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@56067fbe]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@5c82f92c]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@674591b8]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@b29f1ad]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@7d6e3b88]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@699145b5]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@4139fd5e]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@4d193cce]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@10b82a7e]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@1d0d529b]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@5b008c6e]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@5046a2d6]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@6f0d78f4]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@5006981a]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@468ccce9]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@7f4c3f65]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@403ddd86]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@4898f696]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@57262730]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@6414f442]
T: List<String>

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.collections.List<kotlin.String> defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@6232e4ef]
T: List<String>

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@2190166a]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@27d602b]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@4ca09b23]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@40079bef]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@5ed91b60]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@7eb329ac]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@63ff71ab]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@3c190c87]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@72500047]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@afce09c]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@766d854c]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@5a24d75d]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@14970646]
T: List<InternalArgument>

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.collections.List<org.jetbrains.kotlin.cli.common.arguments.InternalArgument> defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@6b4671d1]
T: List<InternalArgument>

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@16add163]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@8f94907]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@aaca8a3]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@39f766f9]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@1462133c]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@30616ac2]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@17612a00]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@53cc70db]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@4dea8a73]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@5a5cdf1]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@6fde027f]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@37dd97d2]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@54f5cfa6]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@472e1f0a]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@48a96336]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@7b397c34]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@65e3459e]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@34f93df4]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@7a573515]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@1c6b1c6e]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@4664235]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@68644e23]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@330e1524]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@48c9dba8]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@6409879f]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@31feb8de]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@22443729]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@496fbd5b]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@337a30e6]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@46c49148]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@40878e97]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@75892609]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@266c161f]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@7b4fbe6e]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@477a3e7b]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@3bcfab6a]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@451d11b7]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@21a2ff21]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@9f1f510]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@6ad87548]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@303c4613]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@6a301895]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@5bdb81ea]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@6d590ae2]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@384d78c4]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@5bd8293c]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@1be4b135]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@7f2fdc57]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@5becbd77]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@e8cca52]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@3995381a]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@565ec7c4]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@69102f0b]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@6cbf59be]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@5f4f370a]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@380487b]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@5d7cef58]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@2aea9aa7]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@26c9e001]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@40119873]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@26ccaa0a]
T: String

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.String defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@3ae65c6f]
T: String

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@3d122cd9]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@266c8069]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@52d93e14]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@3709519f]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@44514285]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@4311da7]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@5ed502a2]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@1cd54e00]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@40cc756d]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@666837cf]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@22446354]
T: Boolean

public open fun getValue(thisRef: kotlin.Any, property: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.cli.common.arguments.Freezable.FreezableVar[SimpleFunctionDescriptorImpl@1f916046]
T: Boolean

public final val item: org.jetbrains.kotlin.cli.common.repl.EvalClassWithInstanceAndLoader defined in org.jetbrains.kotlin.cli.common.repl.ReplHistoryRecord[PropertyDescriptorImpl@fdec967]
T: EvalClassWithInstanceAndLoader

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.read(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@1d784456]
T: List<File>

public final val item: org.jetbrains.kotlin.cli.common.repl.EvalClassWithInstanceAndLoader defined in org.jetbrains.kotlin.cli.common.repl.ReplHistoryRecord[PropertyDescriptorImpl@71ec1376]
T: EvalClassWithInstanceAndLoader

public final val item: org.jetbrains.kotlin.cli.common.repl.EvalClassWithInstanceAndLoader defined in org.jetbrains.kotlin.cli.common.repl.ReplHistoryRecord[PropertyDescriptorImpl@758fdba0]
T: EvalClassWithInstanceAndLoader

public final val metadataPartProviderFactory: (org.jetbrains.kotlin.analyzer.ModuleContent<*>) -> org.jetbrains.kotlin.serialization.deserialization.MetadataPartProvider defined in org.jetbrains.kotlin.analyzer.common.CommonAnalysisParameters[PropertyDescriptorImpl@ebfde56] +++|+++
R: MetadataPartProvider

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@16e6e728]
T: HashMap<AnalysisFlag<*>, Any>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@16e6e728]
T: HashMap<LanguageFeature, State>

public abstract operator fun next(): org.jetbrains.kotlin.cli.common.arguments.ManualLanguageFeatureSetting defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@688908e8]
T: [@kotlin.internal.NoInfer] ManualLanguageFeatureSetting

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@16e6e728]
T: Freezable

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@42142026]
E: String

public final operator fun component1(): kotlin.String defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@396efff2]
A: String

public final operator fun component2(): org.jetbrains.kotlin.utils.ReportLevel defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4888824f]
B: ReportLevel

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6353be72]
R: List<String>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6353be72]
R: List<String>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component1(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@40d24bdd]
T: String

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component2(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e056159]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6353be72]
R: ReportLevel

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6353be72]
R: ReportLevel

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@bab04e7]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@bab04e7]
R: Unit

public abstract operator fun next(): kotlin.reflect.KProperty1<From, kotlin.Any?> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1b2ba7b5]
T: KProperty1<From, Any?>


public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<out kotlin.Any?, out kotlin.Any?> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@7cda932a]
T: MutableEntry<out Any?, out Any?>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@16e6e728]
T: MutableMap<Any?, Any?>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@266abcf0]
T: ArgumentParseErrors

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@7d30e8c1]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@7d30e8c1]
E: String

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64274bb7]
T: String

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@314d5b46]
R: List<String>

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@314d5b46]
R: List<String>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@16e6e728]
T: Char

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@395194c2]
T: Unit

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.read(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@1d784456]
T: ReplHistoryRecord<Pair<T1, T2>>

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@395194c2]
T: ReplHistoryRecord<Pair<T1, T2>>

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@395194c2]
T: List<ILineId>

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@395194c2]
T: List<ILineId>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@bab04e7]
R: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@bab04e7]
R: Int

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@395194c2]
T: Boolean

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@395194c2]
T: Nothing

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@395194c2]
T: Nothing

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@395194c2]
T: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@16e6e728]
T: AggregatedReplStageState<out Any?, out Any?>

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@395194c2]
T: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@16e6e728]
T: AggregatedReplStageState<out Any?, out Any?>

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@395194c2]
T: ReplEvalResult

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@bab04e7]
R: Iterable<ILineId>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@bab04e7]
R: Iterable<ILineId>

public final operator fun component1(): java.lang.ClassLoader defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@37c6b9f7]
A: ClassLoader

public final operator fun component2(): java.lang.Class<out kotlin.Any> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2f935257]
B: Class<out Any>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@16e6e728]
T: Field

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@395194c2]
T: Nothing

public final val item: org.jetbrains.kotlin.cli.common.repl.EvalClassWithInstanceAndLoader defined in org.jetbrains.kotlin.cli.common.repl.ReplHistoryRecord[PropertyDescriptorImpl@245efa31]
T: EvalClassWithInstanceAndLoader

public final val item: org.jetbrains.kotlin.cli.common.repl.EvalClassWithInstanceAndLoader defined in org.jetbrains.kotlin.cli.common.repl.ReplHistoryRecord[PropertyDescriptorImpl@245efa31]
T: EvalClassWithInstanceAndLoader

public final val item: org.jetbrains.kotlin.cli.common.repl.EvalClassWithInstanceAndLoader defined in org.jetbrains.kotlin.cli.common.repl.ReplHistoryRecord[PropertyDescriptorImpl@b233f1]
T: EvalClassWithInstanceAndLoader

public final val item: org.jetbrains.kotlin.cli.common.repl.EvalClassWithInstanceAndLoader defined in org.jetbrains.kotlin.cli.common.repl.ReplHistoryRecord[PropertyDescriptorImpl@6b68798f]
T: EvalClassWithInstanceAndLoader

public final val item: org.jetbrains.kotlin.cli.common.repl.EvalClassWithInstanceAndLoader defined in org.jetbrains.kotlin.cli.common.repl.ReplHistoryRecord[PropertyDescriptorImpl@6b68798f]
T: EvalClassWithInstanceAndLoader

public final val item: org.jetbrains.kotlin.cli.common.repl.EvalClassWithInstanceAndLoader defined in org.jetbrains.kotlin.cli.common.repl.ReplHistoryRecord[PropertyDescriptorImpl@622bea42]
T: EvalClassWithInstanceAndLoader

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64274bb7]
T: EvalClassWithInstanceAndLoader

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@bab04e7]
R: List<EvalClassWithInstanceAndLoader>

public final val first: kotlin.reflect.KFunction<*> defined in kotlin.Pair[DeserializedPropertyDescriptor@2665b00b]
A: KFunction<*>

public final val second: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?> defined in kotlin.Pair[DeserializedPropertyDescriptor@4627c66]
B: Map<KParameter, Any?>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@bab04e7]
R: Triple<KFunction<Any?>, Map<KParameter, Any?>, InvokeWrapper?>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@bab04e7]
R: Triple<KFunction<Any?>, Map<KParameter, Any?>, InvokeWrapper?>

public final operator fun component1(): kotlin.reflect.KFunction<kotlin.Any?> defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@35788180]
A: KFunction<Any?>

public final operator fun component2(): kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?> defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@b5357a7]
B: Map<KParameter, Any?>

public abstract operator fun next(): kotlin.reflect.KFunction<*> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@69a449fd]
T: KFunction<*>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@16e6e728]
T: SimpleBindings

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@bab04e7]
R: ReplCodeLine


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@bab04e7]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@bab04e7]
R: Boolean

public final val first: org.jetbrains.kotlin.cli.common.repl.CompiledReplCodeLine defined in kotlin.Pair[DeserializedPropertyDescriptor@6d749803]
A: CompiledReplCodeLine

public final val first: org.jetbrains.kotlin.cli.common.repl.CompiledReplCodeLine defined in kotlin.Pair[DeserializedPropertyDescriptor@24ea92b7]
A: CompiledReplCodeLine

public final val first: org.jetbrains.kotlin.cli.common.repl.CompiledReplCodeLine defined in kotlin.Pair[DeserializedPropertyDescriptor@7b8e0f5b]
A: CompiledReplCodeLine

public final val first: org.jetbrains.kotlin.cli.common.repl.CompiledReplCodeLine defined in kotlin.Pair[DeserializedPropertyDescriptor@6cb7199c]
A: CompiledReplCodeLine

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@bab04e7]
R: Pair<ReplCodeLine, T>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@bab04e7]
R: Pair<ReplCodeLine, T>

public final val first: org.jetbrains.kotlin.cli.common.repl.CompiledReplCodeLine defined in kotlin.Pair[DeserializedPropertyDescriptor@54f2cf65]
A: CompiledReplCodeLine

public final val first: org.jetbrains.kotlin.cli.common.repl.CompiledReplCodeLine defined in kotlin.Pair[DeserializedPropertyDescriptor@24ea92b7]
A: CompiledReplCodeLine

public final val first: org.jetbrains.kotlin.cli.common.repl.CompiledReplCodeLine defined in kotlin.Pair[DeserializedPropertyDescriptor@24ea92b7]
A: CompiledReplCodeLine

public final val first: org.jetbrains.kotlin.cli.common.repl.CompiledReplCodeLine defined in kotlin.Pair[DeserializedPropertyDescriptor@4189c3dd]
A: CompiledReplCodeLine

public final val first: org.jetbrains.kotlin.cli.common.repl.CompiledReplCodeLine defined in kotlin.Pair[DeserializedPropertyDescriptor@78670d39]
A: CompiledReplCodeLine

public final val second: org.jetbrains.kotlin.cli.common.repl.ReplCodeLine defined in kotlin.Pair[DeserializedPropertyDescriptor@1f6476d1]
B: ReplCodeLine

public final val second: org.jetbrains.kotlin.cli.common.repl.ReplCodeLine defined in kotlin.Pair[DeserializedPropertyDescriptor@3692bf2e]
B: ReplCodeLine

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.cli.common.repl.ReplCodeLine defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@77ed557e]
E: ReplCodeLine

public final val first: org.jetbrains.kotlin.cli.common.repl.CompiledReplCodeLine defined in kotlin.Pair[DeserializedPropertyDescriptor@1f3cbd73]
A: CompiledReplCodeLine

public final val first: org.jetbrains.kotlin.cli.common.repl.CompiledReplCodeLine defined in kotlin.Pair[DeserializedPropertyDescriptor@24ea92b7]
A: CompiledReplCodeLine

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@bab04e7]
R: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@bab04e7]
R: Int

public final val first: org.jetbrains.kotlin.cli.common.repl.ReplHistoryRecord<T> defined in kotlin.Pair[DeserializedPropertyDescriptor@702a0110]
A: ReplHistoryRecord<T>

public final val second: org.jetbrains.kotlin.cli.common.repl.ILineId defined in kotlin.Pair[DeserializedPropertyDescriptor@7b44a268]
B: ILineId

public final val first: org.jetbrains.kotlin.cli.common.repl.ReplHistoryRecord<T> defined in kotlin.Pair[DeserializedPropertyDescriptor@20361abf]
A: ReplHistoryRecord<T>

public final val second: org.jetbrains.kotlin.cli.common.repl.ILineId defined in kotlin.Pair[DeserializedPropertyDescriptor@3760b374]
B: ILineId

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@bab04e7]
R: Pair<ReplHistoryRecord<T>, ILineId>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@bab04e7]
R: Pair<ReplHistoryRecord<T>, ILineId>

public final val first: org.jetbrains.kotlin.cli.common.repl.ReplHistoryRecord<T> defined in kotlin.Pair[DeserializedPropertyDescriptor@28fb85a6]
A: ReplHistoryRecord<T>

public final val second: org.jetbrains.kotlin.cli.common.repl.ILineId defined in kotlin.Pair[DeserializedPropertyDescriptor@165c5e63]
B: ILineId

public final val first: org.jetbrains.kotlin.cli.common.repl.ReplHistoryRecord<T> defined in kotlin.Pair[DeserializedPropertyDescriptor@c212277]
A: ReplHistoryRecord<T>

public final val second: org.jetbrains.kotlin.cli.common.repl.ILineId defined in kotlin.Pair[DeserializedPropertyDescriptor@5b6529d]
B: ILineId

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@bab04e7]
R: Pair<ReplHistoryRecord<T>, ILineId>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@bab04e7]
R: Pair<ReplHistoryRecord<T>, ILineId>

public final val first: org.jetbrains.kotlin.cli.common.repl.ReplHistoryRecord<T> defined in kotlin.Pair[DeserializedPropertyDescriptor@4b019939]
A: ReplHistoryRecord<T>

public final val second: org.jetbrains.kotlin.cli.common.repl.ILineId defined in kotlin.Pair[DeserializedPropertyDescriptor@108bf22c]
B: ILineId

public final val first: org.jetbrains.kotlin.cli.common.repl.ReplHistoryRecord<T> defined in kotlin.Pair[DeserializedPropertyDescriptor@4bbedbeb]
A: ReplHistoryRecord<T>

public final val second: org.jetbrains.kotlin.cli.common.repl.ILineId defined in kotlin.Pair[DeserializedPropertyDescriptor@4a9bb1f0]
B: ILineId

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@bab04e7]
R: Pair<ReplHistoryRecord<T>, ILineId>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@bab04e7]
R: Pair<ReplHistoryRecord<T>, ILineId>

public inline fun <T, R> kotlin.sequences.Sequence<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@30fd7d27]
R: List<File>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: D

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: D

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: PsiModifierList

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: PsiModifierList

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: KtLightIdentifier

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: KtLightIdentifier

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: PsiModifierList

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: PsiModifierList

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: List<KtLightAbstractAnnotation>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: List<KtLightAbstractAnnotation>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@61d679b3]
T: Stack<StubElement<PsiElement>>


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: LightClassDataImpl

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Array<KotlinSuperTypeReference>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Array<KotlinSuperTypeReference>

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4ba4b11f]
T: KtFile

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4f40557e]
T: KtFile

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: KtFile

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3279a0de]
T: KtFile

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: KtFile

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: FakeFileForLightClass

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: FakeFileForLightClass

public final val second: com.intellij.psi.PsiClassType defined in kotlin.Pair[DeserializedPropertyDescriptor@3be664b3]
B: PsiClassType

public final val first: com.intellij.psi.PsiJavaCodeReferenceElement defined in kotlin.Pair[DeserializedPropertyDescriptor@3d7c153e]
A: PsiJavaCodeReferenceElement

private final val stub: () -> com.intellij.psi.stubs.PsiClassHolderFileStub<*> defined in org.jetbrains.kotlin.asJava.elements.FakeFileForLightClass[PropertyDescriptorImpl@c8145f0] +++|+++
R: PsiClassHolderFileStub<*>

private final val lightClass: () -> org.jetbrains.kotlin.asJava.classes.KtLightClass defined in org.jetbrains.kotlin.asJava.elements.FakeFileForLightClass[PropertyDescriptorImpl@55306e70] +++|+++
R: KtLightClass

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Array<KtLightSuperTypeReference>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Array<KtLightSuperTypeReference>

public abstract val value: com.intellij.psi.PsiAnnotation defined in kotlin.Lazy[DeserializedPropertyDescriptor@47eecca5]
T: PsiAnnotation

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: ValueWrapper

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: ValueWrapper

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: PsiClass

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: PsiClass

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3dfb192b]
R: List<ModificationTracker>

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3dfb192b]
R: List<ModificationTracker>


@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Set<String>


@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Set<String>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Boolean

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Boolean

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: <no name provided>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: <no name provided>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: PsiTypeParameterList

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: PsiTypeParameterList

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: KtLightClassModifierList

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: KtLightClassModifierList

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: UltraLightMembersCreator

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: UltraLightMembersCreator

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7a90e006]
T: KtDeclaration

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Boolean

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: ArrayList<KtLightMethod>

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2104053c]
T: KtDeclaration

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Boolean

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: ArrayList<KtLightMethod>

private final inline fun <T> forTooComplex(getter: () -> T): T defined in org.jetbrains.kotlin.asJava.classes.KtUltraLightClassForFacade[SimpleFunctionDescriptorImpl@3f758ecd]
T: CachedValue<ForFacade>

private final inline fun <T> forTooComplex(getter: () -> T): T defined in org.jetbrains.kotlin.asJava.classes.KtUltraLightClassForFacade[SimpleFunctionDescriptorImpl@3f758ecd]
T: PsiClass

public final operator fun component1(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@15ff346d]
A: KtFile

public final operator fun component2(): org.jetbrains.kotlin.asJava.classes.KtUltraLightSupport defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@450670f4]
B: KtUltraLightSupport

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Boolean

public final operator fun component1(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@15ff346d]
A: KtFile

public final operator fun component2(): org.jetbrains.kotlin.asJava.classes.KtUltraLightSupport defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@450670f4]
B: KtUltraLightSupport

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Boolean

public final operator fun component1(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@15ff346d]
A: KtFile

public final operator fun component2(): org.jetbrains.kotlin.asJava.classes.KtUltraLightSupport defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@450670f4]
B: KtUltraLightSupport

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: List<Triple<KtFile, KtUltraLightSupport, UltraLightMembersCreator>>

public final operator fun component1(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@15ff346d]
A: KtFile

public final operator fun component2(): org.jetbrains.kotlin.asJava.classes.KtUltraLightSupport defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@450670f4]
B: KtUltraLightSupport

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: List<Triple<KtFile, KtUltraLightSupport, UltraLightMembersCreator>>

public abstract operator fun next(): kotlin.Triple<org.jetbrains.kotlin.psi.KtFile, org.jetbrains.kotlin.asJava.classes.KtUltraLightSupport, org.jetbrains.kotlin.asJava.classes.UltraLightMembersCreator> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1921dd0a]
T: Triple<KtFile, KtUltraLightSupport, UltraLightMembersCreator>

public final operator fun component1(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@5f187894]
A: KtFile

public final operator fun component2(): org.jetbrains.kotlin.asJava.classes.KtUltraLightSupport defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@4a3ddc80]
B: KtUltraLightSupport

public final operator fun component3(): org.jetbrains.kotlin.asJava.classes.UltraLightMembersCreator defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@49a1a45f]
C: UltraLightMembersCreator

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5d1a5d0]
T: MutableList<KtLightMethod>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: MutableList<KtLightMethod>

public abstract operator fun next(): kotlin.Triple<org.jetbrains.kotlin.psi.KtFile, org.jetbrains.kotlin.asJava.classes.KtUltraLightSupport, org.jetbrains.kotlin.asJava.classes.UltraLightMembersCreator> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7b0540fc]
T: Triple<KtFile, KtUltraLightSupport, UltraLightMembersCreator>

public final operator fun component1(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@77fde168]
A: KtFile

public final operator fun component2(): org.jetbrains.kotlin.asJava.classes.KtUltraLightSupport defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@636716df]
B: KtUltraLightSupport

public final operator fun component3(): org.jetbrains.kotlin.asJava.classes.UltraLightMembersCreator defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@45daabd]
C: UltraLightMembersCreator

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5d1a5d0]
T: MutableList<KtLightMethod>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: MutableList<KtLightMethod>

public final operator fun component1(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@587eda13]
A: KtFile

public final operator fun component2(): org.jetbrains.kotlin.asJava.classes.KtUltraLightSupport defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@7296303d]
B: KtUltraLightSupport

public final operator fun component3(): org.jetbrains.kotlin.asJava.classes.UltraLightMembersCreator defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@e91700a]
C: UltraLightMembersCreator

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: List<KtLightField>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: List<KtLightField>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: List<KtLightField>

public final operator fun component1(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@587eda13]
A: KtFile

public final operator fun component2(): org.jetbrains.kotlin.asJava.classes.KtUltraLightSupport defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@7296303d]
B: KtUltraLightSupport

public final operator fun component3(): org.jetbrains.kotlin.asJava.classes.UltraLightMembersCreator defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@e91700a]
C: UltraLightMembersCreator

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: List<KtLightField>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: List<KtLightField>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: List<KtLightField>

public final val first: kotlin.String defined in kotlin.Pair[DeserializedPropertyDescriptor@dbfe49b]
A: String

public final val second: org.jetbrains.kotlin.resolve.constants.ConstantValue<*> defined in kotlin.Pair[DeserializedPropertyDescriptor@608942b3]
B: ConstantValue<*>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Array<PsiNameValuePair>

public final val first: kotlin.String defined in kotlin.Pair[DeserializedPropertyDescriptor@dbfe49b]
A: String

public final val second: org.jetbrains.kotlin.resolve.constants.ConstantValue<*> defined in kotlin.Pair[DeserializedPropertyDescriptor@608942b3]
B: ConstantValue<*>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Array<PsiNameValuePair>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: UltraLightMembersCreator

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: UltraLightMembersCreator

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Boolean

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Boolean

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Boolean

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Boolean

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtProperty defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@20ec46d0]
T: [@kotlin.internal.NoInfer] KtProperty

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@71e3f721]
T: KtParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Boolean

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtProperty defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@31f5c158]
T: [@kotlin.internal.NoInfer] KtProperty

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Boolean

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtEnumEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6c6e78de]
T: [@kotlin.internal.NoInfer] KtEnumEntry

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: ArrayList<KtLightField>

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtProperty defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7260bf21]
T: [@kotlin.internal.NoInfer] KtProperty

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4dffab43]
T: KtParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Boolean

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtProperty defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@25dd6c67]
T: [@kotlin.internal.NoInfer] KtProperty

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Boolean

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtEnumEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7cf1ec5a]
T: [@kotlin.internal.NoInfer] KtEnumEntry

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: ArrayList<KtLightField>

private final val computeModifiers: () -> kotlin.collections.Set<kotlin.String> defined in org.jetbrains.kotlin.asJava.classes.KtUltraLightClass.KtUltraLightClassModifierList[PropertyDescriptorImpl@5e5a2597] +++|+++
R: Set<String>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Set<String>

private final val computeModifiers: () -> kotlin.collections.Set<kotlin.String> defined in org.jetbrains.kotlin.asJava.classes.KtUltraLightClass.KtUltraLightClassModifierList[PropertyDescriptorImpl@5e5a2597] +++|+++
R: Set<String>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Set<String>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Pair<PsiJavaCodeReferenceElement, PsiClassType>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Pair<PsiJavaCodeReferenceElement, PsiClassType>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: KtUltraLightClassForEnumEntry

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: KtUltraLightClassForEnumEntry

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: KtUltraLightClassForEnumEntry

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: KtUltraLightClassForEnumEntry

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: KtUltraLightSimpleModifierListField

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: KtUltraLightSimpleModifierListField

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: KotlinType

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: PsiType

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: PsiType

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: PsiAnnotationMemberValue

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: PsiAnnotationMemberValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Unit

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: <no name provided>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Unit

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: <no name provided>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Boolean

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Boolean

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: KtLightSimpleModifierList

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: KtLightSimpleModifierList

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: KtLightSimpleModifierList

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: KtLightSimpleModifierList

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@54868c6d]
E: TypeProjection

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: PsiType

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: PsiType


@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: KotlinLightReferenceListBuilder


@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: KotlinLightReferenceListBuilder

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: ClsTypeElementImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: ClsTypeElementImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: ClsTypeElementImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: ClsTypeElementImpl

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: KtLightParameterList

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: KtLightParameterList

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: PsiParameter

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: PsiParameter

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: KtLightSimpleModifierList

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: KtLightSimpleModifierList


@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Array<PsiParameter>


@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Array<PsiParameter>

public abstract val value: com.intellij.psi.PsiAnnotation defined in kotlin.Lazy[DeserializedPropertyDescriptor@5ca89a01]
T: PsiAnnotation

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: PsiAnnotation

public abstract val value: com.intellij.psi.PsiAnnotation defined in kotlin.Lazy[DeserializedPropertyDescriptor@5ca89a01]
T: PsiAnnotation

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: PsiAnnotation

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: KtLightAnnotationParameterList

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: KtLightAnnotationParameterList

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Array<PsiNameValuePair>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Array<PsiNameValuePair>




public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.asJava.elements.KtLightMethod> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5954a17b]
A: List<KtLightMethod>

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.asJava.elements.KtLightMethod> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1a30f7f6]
B: List<KtLightMethod>

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4ba4b11f]
T: KtFile

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@61d679b3]
T: CompilerConfiguration

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: CompilerConfiguration

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: CompilerConfiguration


public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4ba4b11f]
T: KtFile

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Nothing

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4ba4b11f]
T: KtFile

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4ba4b11f]
T: KtFile

@org.jetbrains.annotations.NotNull public open fun get(p0: (org.jetbrains.kotlin.asJava.classes.FacadeCacheKey..org.jetbrains.kotlin.asJava.classes.FacadeCacheKey?)): org.jetbrains.kotlin.asJava.classes.ValueWrapper defined in com.intellij.util.containers.SLRUCache[JavaMethodDescriptor@19efcd5c]
V: ValueWrapper

@kotlin.internal.InlineOnly public inline fun <R> synchronized(lock: kotlin.Any, block: () -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@75e6f9f]
R: Nothing

public abstract operator fun next(): com.intellij.psi.PsiClassType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@61baad78]
T: PsiClassType

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6b4eb442]
T: KtFile

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Array<PsiClass>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Array<PsiClass>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: String

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5d1a5d0]
T: CachedValue<ForScript>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: KtLightPsiReferenceList

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: KtLightPsiReferenceList

public abstract operator fun next(): kotlin.Pair<(org.jetbrains.kotlin.lexer.KtModifierKeywordToken..org.jetbrains.kotlin.lexer.KtModifierKeywordToken?), kotlin.String> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@221facc4]
T: Pair<(org.jetbrains.kotlin.lexer.KtModifierKeywordToken..org.jetbrains.kotlin.lexer.KtModifierKeywordToken?), String>

public final val second: kotlin.String defined in kotlin.Pair[DeserializedPropertyDescriptor@20a0cff3]
B: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Nothing

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> putUserDataIfAbsent(@org.jetbrains.annotations.NotNull p0: com.intellij.openapi.util.Key<(T..T?)>, @org.jetbrains.annotations.NotNull p1: T): T defined in org.jetbrains.kotlin.psi.KtClassOrObject[JavaMethodDescriptor@5d1d449]
T: CachedValue<ForClass>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Array<PsiClass>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Array<PsiClass>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Array<PsiClassType>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Array<PsiClassType>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: PsiImmediateClassType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: PsiImmediateClassType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Unit

private final inline fun <T> forTooComplex(getter: () -> T): T defined in org.jetbrains.kotlin.asJava.classes.KtUltraLightClassForFacade[SimpleFunctionDescriptorImpl@3f758ecd]
T: PsiClass

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@71a0207a]
T: KtDeclaration

public abstract val key: org.jetbrains.kotlin.name.Name defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@346cecd2]
K: Name

public abstract val value: org.jetbrains.kotlin.resolve.constants.ConstantValue<*> defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@2b3cf101]
V: ConstantValue<*>

private final val arguments: (org.jetbrains.kotlin.asJava.classes.KtUltraLightPsiArrayInitializerMemberValue) -> kotlin.collections.List<com.intellij.psi.PsiAnnotationMemberValue> defined in org.jetbrains.kotlin.asJava.classes.KtUltraLightPsiArrayInitializerMemberValue[PropertyDescriptorImpl@1503e74d] +++|+++
R: List<PsiAnnotationMemberValue>

private final inline fun <T> forTooComplex(getter: () -> T): T defined in org.jetbrains.kotlin.asJava.classes.KtUltraLightClass[SimpleFunctionDescriptorImpl@657acf6a]
T: LightClassData

private final inline fun <T> forTooComplex(getter: () -> T): T defined in org.jetbrains.kotlin.asJava.classes.KtUltraLightClass[SimpleFunctionDescriptorImpl@657acf6a]
T: PsiClass

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5d1a5d0]
T: KotlinSuperTypeListBuilder

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5d1a5d0]
T: KotlinSuperTypeListBuilder

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@29ed9b48]
T: KtDeclaration

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@b223590]
T: KtParameter

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@70229171]
T: KtDeclaration

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.CallableMemberDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5f03572f]
T: CallableMemberDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtConstructor<*> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@42ab8e86]
T: KtConstructor<*>

public final val second: org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.Pair[DeserializedPropertyDescriptor@47b4a8f1]
B: AnnotationDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Boolean

public final val first: org.jetbrains.kotlin.psi.KtAnnotationEntry defined in kotlin.Pair[DeserializedPropertyDescriptor@4ba352b6]
A: KtAnnotationEntry

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: PsiType

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: PsiType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: KtUltraLightAnnotationMethod

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: KtUltraLightAnnotationMethod

public abstract operator fun next(): kotlin.collections.IndexedValue<T> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3f85aafe]
T: IndexedValue<T>

public abstract operator fun get(index: kotlin.Int): com.intellij.psi.PsiClassType defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@38fee275]
E: PsiClassType


@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Int

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: Int

public final val second: org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.Pair[DeserializedPropertyDescriptor@22c1111a]
B: AnnotationDescriptor

@org.jetbrains.annotations.NotNull public open fun <D : (org.jetbrains.kotlin.diagnostics.Diagnostic..org.jetbrains.kotlin.diagnostics.Diagnostic?)> cast(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.diagnostics.Diagnostic, @org.jetbrains.annotations.NotNull p1: (kotlin.collections.MutableCollection<out (org.jetbrains.kotlin.diagnostics.DiagnosticFactory<out (D..D?)>..org.jetbrains.kotlin.diagnostics.DiagnosticFactory<out (D..D?)>?)>..kotlin.collections.Collection<(org.jetbrains.kotlin.diagnostics.DiagnosticFactory<out (D..D?)>..org.jetbrains.kotlin.diagnostics.DiagnosticFactory<out (D..D?)>?)>)): D defined in org.jetbrains.kotlin.diagnostics.DiagnosticFactory[JavaMethodDescriptor@49c1a800]
D: DiagnosticWithParameters1<(com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?), (org.jetbrains.kotlin.resolve.jvm.diagnostics.ConflictingJvmDeclarationsData..org.jetbrains.kotlin.resolve.jvm.diagnostics.ConflictingJvmDeclarationsData?)>

public final val <E : (com.intellij.psi.PsiElement..com.intellij.psi.PsiElement?), A : (kotlin.Any..kotlin.Any?)> org.jetbrains.kotlin.diagnostics.DiagnosticWithParameters1<E, A>.a: A[MyPropertyDescriptor@727ac4e5]
A: ConflictingJvmDeclarationsData

public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.diagnostics.Diagnostic> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@542368cd]
A: List<Diagnostic>

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.diagnostics.Diagnostic> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@676782dd]
B: List<Diagnostic>

public abstract val value: kotlin.collections.List<org.jetbrains.kotlin.diagnostics.Diagnostic> defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@d22cb77]
V: List<Diagnostic>

private final val lightClass: () -> org.jetbrains.kotlin.asJava.classes.KtLightClass defined in org.jetbrains.kotlin.asJava.elements.FakeFileForLightClass[PropertyDescriptorImpl@55306e70] +++|+++
R: KtLightClass

private final val lightClass: () -> org.jetbrains.kotlin.asJava.classes.KtLightClass defined in org.jetbrains.kotlin.asJava.elements.FakeFileForLightClass[PropertyDescriptorImpl@55306e70] +++|+++
R: KtLightClass

private final val lightClass: () -> org.jetbrains.kotlin.asJava.classes.KtLightClass defined in org.jetbrains.kotlin.asJava.elements.FakeFileForLightClass[PropertyDescriptorImpl@55306e70] +++|+++
R: KtLightClass

private final val lightClass: () -> org.jetbrains.kotlin.asJava.classes.KtLightClass defined in org.jetbrains.kotlin.asJava.elements.FakeFileForLightClass[PropertyDescriptorImpl@55306e70] +++|+++
R: KtLightClass

private final val arguments: (org.jetbrains.kotlin.asJava.elements.KtLightPsiArrayInitializerMemberValue) -> kotlin.collections.List<com.intellij.psi.PsiAnnotationMemberValue> defined in org.jetbrains.kotlin.asJava.elements.KtLightPsiArrayInitializerMemberValue[PropertyDescriptorImpl@3c1884f4] +++|+++
R: List<PsiAnnotationMemberValue>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: (kotlin.Array<(com.intellij.psi.PsiParameter..com.intellij.psi.PsiParameter?)>..kotlin.Array<out (com.intellij.psi.PsiParameter..com.intellij.psi.PsiParameter?)>)

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1dc15230]
T: (kotlin.Array<(com.intellij.psi.PsiParameter..com.intellij.psi.PsiParameter?)>..kotlin.Array<out (com.intellij.psi.PsiParameter..com.intellij.psi.PsiParameter?)>)

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5d1a5d0]
T: MutableList<KtLightAbstractAnnotation>

public final val first: kotlin.String defined in kotlin.Pair[DeserializedPropertyDescriptor@3e3b89c2]
A: String

public final val second: org.jetbrains.kotlin.psi.KtAnnotationEntry defined in kotlin.Pair[DeserializedPropertyDescriptor@4f58f67e]
B: KtAnnotationEntry

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1fe2955a]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2ff0f994]
V: List<KtAnnotationEntry>

public final val first: org.jetbrains.kotlin.name.ClassId defined in kotlin.Pair[DeserializedPropertyDescriptor@45a76e1e]
A: ClassId

public final val second: org.jetbrains.kotlin.name.Name defined in kotlin.Pair[DeserializedPropertyDescriptor@6a1ce7b2]
B: Name

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: List<String>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: List<String>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: List<String>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Nothing

public abstract val key: org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.MutableMap.MutableEntry[DeserializedPropertyDescriptor@6051449b]
K: ValueParameterDescriptor

public abstract val key: org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.MutableMap.MutableEntry[DeserializedPropertyDescriptor@6051449b]
K: ValueParameterDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: PsiAnnotationMemberValue

public abstract val value: com.intellij.psi.PsiAnnotation defined in kotlin.Lazy[DeserializedPropertyDescriptor@47eecca5]
T: PsiAnnotation

public abstract val key: org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@34ec1a6]
K: ValueParameterDescriptor

public abstract val value: org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@6701e45a]
V: ResolvedValueArgument

public abstract val value: org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@d4e6d2f]
V: ResolvedValueArgument

public abstract val key: org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@3304ccb4]
K: ValueParameterDescriptor

public abstract val value: org.jetbrains.kotlin.resolve.calls.model.ResolvedValueArgument defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@254e427f]
V: ResolvedValueArgument

public abstract val key: org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@7943383]
K: ValueParameterDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: PsiAnnotationMemberValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: PsiAnnotationMemberValue

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@50f43591]
D: CallableDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtClassOrObject defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7d5c8c5b]
T: KtClassOrObject

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtClassOrObject defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@403b5c05]
T: KtClassOrObject

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtClassOrObject defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@639eafce]
T: KtClassOrObject

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtClassOrObject defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@64b1f7a]
T: KtClassOrObject

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@54fd439a]
R: Boolean

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@5d1a5d0]
T: MutableList<PsiNamedElement>

public abstract operator fun next(): com.intellij.psi.PsiNamedElement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@e6930f0]
T: PsiNamedElement

public abstract operator fun next(): com.intellij.psi.PsiAnnotation defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2d8212f2]
T: PsiAnnotation

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsIf

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsIf

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsIf

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

public abstract fun removeAt(index: kotlin.Int): org.jetbrains.kotlin.js.coroutine.CoroutineBodyTransformer.TryBlock defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4c50b304]
E: TryBlock

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@59f5491c]
E: JsExpression

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@681eedbc]
T: JsName

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@681eedbc]
T: JsName

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@681eedbc]
T: JsName

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsNode defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@ec41552]
E: JsNode

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsVars

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: RelativePathCalculator

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@681eedbc]
T: Map<String, SpecialFunction>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@681eedbc]
T: OffsetToSourceMapping

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e3f8059]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3163de13]
V: SpecialFunction

public abstract val key: kotlin.String defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@57eec65b]
K: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Pattern

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72f8ee56]
T: JsBlock

@org.jetbrains.annotations.NotNull public open fun <K : (kotlin.Any..kotlin.Any?), V : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.resolve.BindingContext, @org.jetbrains.annotations.NotNull p1: org.jetbrains.kotlin.util.slicedMap.ReadOnlySlice<(K..K?), (V..V?)>, @org.jetbrains.annotations.NotNull p2: K): V defined in org.jetbrains.kotlin.resolve.BindingContextUtils[JavaMethodDescriptor@656d6f6d]
V: KotlinType

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72f8ee56]
T: JsFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@681eedbc]
T: JsExpression

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@681eedbc]
T: JsExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: Stack<MutableSet<JsName>>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean

public final operator fun getValue(thisRef: org.jetbrains.kotlin.js.backend.ast.JsExpressionStatement, desc: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.js.backend.ast.metadata.MetadataProperty[DeserializedSimpleFunctionDescriptor@39dc6b2b]
R: Boolean

public final operator fun getValue(thisRef: org.jetbrains.kotlin.js.backend.ast.JsExpressionStatement, desc: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.js.backend.ast.metadata.MetadataProperty[DeserializedSimpleFunctionDescriptor@4e9088b4]
R: Boolean

public final operator fun getValue(thisRef: org.jetbrains.kotlin.js.backend.ast.JsExpressionStatement, desc: kotlin.reflect.KProperty<*>): kotlin.Boolean defined in org.jetbrains.kotlin.js.backend.ast.metadata.MetadataProperty[DeserializedSimpleFunctionDescriptor@3a067b8e]
R: Boolean

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: List<JsExpression>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component1(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14ca68ce]
T: JsExpression


@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component1(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14ca68ce]
T: JsExpression

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component2(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6c8a0f4]
T: JsExpression

public final val first: kotlin.String defined in kotlin.Pair[DeserializedPropertyDescriptor@6d21e1fd]
A: String






public final operator fun component1(): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1ee21483]
A: JsExpression

public final operator fun component2(): org.jetbrains.kotlin.psi.KtExpression defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@29a50510]
B: KtExpression

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDelegatedSuperTypeEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@16b1a9a2]
T: KtDelegatedSuperTypeEntry

public abstract operator fun next(): org.jetbrains.kotlin.builtins.PrimitiveType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@bd97ec1]
T: PrimitiveType

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component1(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14ca68ce]
T: JsExpression

@org.jetbrains.annotations.NotNull public open operator fun <T : (kotlin.Any..kotlin.Any?)> get(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>, @org.jetbrains.annotations.NotNull p1: T): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@48ff6a24]
T: Boolean

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5c9af8]
E: JsExpression

public abstract operator fun next(): kotlin.collections.Map.Entry<kotlin.String, org.jetbrains.kotlin.js.translate.intrinsic.functions.basic.FunctionIntrinsicWithReceiverComputed> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@19e98307]
T: Entry<String, FunctionIntrinsicWithReceiverComputed>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e3f8059]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3163de13]
V: FunctionIntrinsicWithReceiverComputed

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.js.coroutine.CoroutineBodyTransformer.TryBlock defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@775de52]
E: TryBlock

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.coroutine.CoroutineBlock defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@813db65]
E: CoroutineBlock

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsExpressionStatement

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsNameRef

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsContinue



@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsVars

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsName

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@64405018]
T: JsName

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@bbfcfed]
V: JsName

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@65e76a70]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsObjectLiteral

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: (kotlin.collections.MutableList<(org.jetbrains.kotlin.js.backend.ast.JsStatement..org.jetbrains.kotlin.js.backend.ast.JsStatement?)>..kotlin.collections.List<(org.jetbrains.kotlin.js.backend.ast.JsStatement..org.jetbrains.kotlin.js.backend.ast.JsStatement?)>)

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: MutableList<JsStatement>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsNew

public final operator fun component2(): org.jetbrains.kotlin.js.coroutine.CoroutineBlock defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@49c050]
T: CoroutineBlock

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsCase

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsDefault

public final operator fun component2(): org.jetbrains.kotlin.js.coroutine.CoroutineBlock defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@57b2d95c]
T: CoroutineBlock

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsExpressionStatement

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsExpressionStatement

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsExpressionStatement

public abstract operator fun next(): kotlin.collections.List<org.jetbrains.kotlin.js.coroutine.CoroutineBlock> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@49cbac37]
T: List<CoroutineBlock>

public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.js.coroutine.CoroutineBlock, org.jetbrains.kotlin.js.coroutine.CoroutineBlock> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6922044a]
T: Pair<CoroutineBlock, CoroutineBlock>

public final operator fun component1(): org.jetbrains.kotlin.js.coroutine.CoroutineBlock defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2231f95e]
A: CoroutineBlock

public final operator fun component2(): org.jetbrains.kotlin.js.coroutine.CoroutineBlock defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@bf8bc25]
B: CoroutineBlock

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@bbfcfed]
V: MutableSet<CoroutineBlock>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@bbfcfed]
V: MutableSet<CoroutineBlock>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsNameRef

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsNameRef

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsThisRef

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.js.coroutine.CoroutineBlock> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5b7a6866]
T: IndexedValue<CoroutineBlock>

public final operator fun component2(): org.jetbrains.kotlin.js.coroutine.CoroutineBlock defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@291d01b0]
T: CoroutineBlock

public abstract fun next(): org.jetbrains.kotlin.js.backend.ast.JsStatement defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@711dc359]
T: JsStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Nothing

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3f1bfe11]
T: Int

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3f1bfe11]
T: Int

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7617ef9a]
T: JsName

public abstract val value: org.jetbrains.kotlin.js.backend.ast.JsName defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@32c7a379]
V: JsName

public abstract operator fun next(): kotlin.Pair<kotlin.collections.List<(org.jetbrains.kotlin.js.backend.ast.JsVars.JsVar..org.jetbrains.kotlin.js.backend.ast.JsVars.JsVar?)>, kotlin.Boolean> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5dc18ff]
T: Pair<List<(org.jetbrains.kotlin.js.backend.ast.JsVars.JsVar..org.jetbrains.kotlin.js.backend.ast.JsVars.JsVar?)>, Boolean>

public final operator fun component1(): kotlin.collections.List<(org.jetbrains.kotlin.js.backend.ast.JsVars.JsVar..org.jetbrains.kotlin.js.backend.ast.JsVars.JsVar?)> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@e5603a9]
A: List<(org.jetbrains.kotlin.js.backend.ast.JsVars.JsVar..org.jetbrains.kotlin.js.backend.ast.JsVars.JsVar?)>

public final operator fun component2(): kotlin.Boolean defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2d851655]
B: Boolean

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@222357c2]
E: JsStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsProgramFragment defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@157e682a]
T: JsProgramFragment

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3e09a3b6]
R: ExpressionDecomposer

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsVars

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsLabel

private final inline fun <T> withNewAdditionalStatements(fn: () -> T): T defined in org.jetbrains.kotlin.js.inline.ExpressionDecomposer[SimpleFunctionDescriptorImpl@33916ea2]
T: Unit

private final inline fun <T> withNewAdditionalStatements(fn: () -> T): T defined in org.jetbrains.kotlin.js.inline.ExpressionDecomposer[SimpleFunctionDescriptorImpl@33916ea2]
T: JsStatement

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72f8ee56]
T: JsIf

private final inline fun <T> withNewAdditionalStatements(fn: () -> T): T defined in org.jetbrains.kotlin.js.inline.ExpressionDecomposer[SimpleFunctionDescriptorImpl@33916ea2]
T: JsStatement

private final inline fun <T> withNewAdditionalStatements(fn: () -> T): T defined in org.jetbrains.kotlin.js.inline.ExpressionDecomposer[SimpleFunctionDescriptorImpl@33916ea2]
T: JsStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsNameRef

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@50fd9391]
T: Int

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@8a42ef5]
E: JsExpression

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.js.backend.ast.JsExpression): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@7b6a412f]
E: JsExpression

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.js.backend.ast.JsExpression): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@7b6a412f]
E: JsExpression

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@8a42ef5]
E: JsExpression

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.js.backend.ast.JsExpression): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@7b6a412f]
E: JsExpression

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@8a42ef5]
E: JsExpression

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.js.backend.ast.JsExpression): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@7b6a412f]
E: JsExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsExpressionStatement


public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsNode defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6d231098]
E: JsNode

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsStatement defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2a4afc43]
E: JsStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsNameRef

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsLabel

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1826583d]
T: JsName

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

public abstract operator fun next(): kotlin.collections.IndexedValue<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@249badc3]
T: IndexedValue<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Nothing

public final fun <T> withFunction(function: org.jetbrains.kotlin.js.backend.ast.JsFunction, body: () -> T): T defined in org.jetbrains.kotlin.js.inline.InlinerCycleReporter[SimpleFunctionDescriptorImpl@3778392a]
T: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@72e6bd80]
E: JsStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean

public final fun <T> withFunction(function: org.jetbrains.kotlin.js.backend.ast.JsFunction, body: () -> T): T defined in org.jetbrains.kotlin.js.inline.InlinerCycleReporter[SimpleFunctionDescriptorImpl@3778392a]
T: Unit


public final fun computeIfAbsent(p0: org.jetbrains.kotlin.js.backend.ast.JsFunction, p1: (org.jetbrains.kotlin.js.backend.ast.JsFunction) -> org.jetbrains.kotlin.js.backend.ast.JsFunction): org.jetbrains.kotlin.js.backend.ast.JsFunction defined in kotlin.collections.MutableMap[SamAdapterExtensionFunctionDescriptorImpl@a9374ff]
V: JsFunction


public final fun computeIfAbsent(p0: kotlin.String, p1: (kotlin.String) -> org.jetbrains.kotlin.js.backend.ast.JsFunction): org.jetbrains.kotlin.js.backend.ast.JsFunction defined in kotlin.collections.MutableMap[SamAdapterExtensionFunctionDescriptorImpl@71351e60]
V: JsFunction

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72f8ee56]
T: JsName

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

public abstract val value: kotlin.Pair<org.jetbrains.kotlin.js.inline.util.FunctionWithWrapper, org.jetbrains.kotlin.js.backend.ast.JsExpression> defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@21b4a64f]
V: Pair<FunctionWithWrapper, JsExpression>

public final val first: org.jetbrains.kotlin.js.inline.util.FunctionWithWrapper defined in kotlin.Pair[DeserializedPropertyDescriptor@3a6ab25c]
A: FunctionWithWrapper

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.js.backend.ast.JsName, org.jetbrains.kotlin.js.backend.ast.JsFunction> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4c7da7e2]
T: Entry<JsName, JsFunction>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e3f8059]
K: JsName

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3163de13]
V: JsFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

public final fun computeIfAbsent(p0: kotlin.String, p1: (kotlin.String) -> org.jetbrains.kotlin.js.backend.ast.JsGlobalBlock): org.jetbrains.kotlin.js.backend.ast.JsGlobalBlock defined in kotlin.collections.MutableMap[SamAdapterExtensionFunctionDescriptorImpl@9708ab3]
V: JsGlobalBlock

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72f8ee56]
T: JsImportedModule

public final fun computeIfAbsent(p0: org.jetbrains.kotlin.js.backend.ast.JsImportedModuleKey, p1: (org.jetbrains.kotlin.js.backend.ast.JsImportedModuleKey) -> org.jetbrains.kotlin.js.backend.ast.JsImportedModule): org.jetbrains.kotlin.js.backend.ast.JsImportedModule defined in kotlin.collections.MutableMap[SamAdapterExtensionFunctionDescriptorImpl@20a5f7b0]
V: JsImportedModule


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: ImportIntoFragmentInliningScope


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: (kotlin.collections.MutableList<(org.jetbrains.kotlin.js.backend.ast.JsStatement..org.jetbrains.kotlin.js.backend.ast.JsStatement?)>..kotlin.collections.List<(org.jetbrains.kotlin.js.backend.ast.JsStatement..org.jetbrains.kotlin.js.backend.ast.JsStatement?)>)

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsProgramFragment defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@425e4a46]
T: JsProgramFragment

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.js.backend.ast.JsStatement> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@30b46d86]
T: IndexedValue<JsStatement>

public final operator fun component2(): org.jetbrains.kotlin.js.backend.ast.JsStatement defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@4ac4df09]
T: JsStatement

public abstract fun next(): org.jetbrains.kotlin.js.inline.clean.CoroutineStateElimination.apply.<no name provided>.visitStatements.IndexHolder defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@517dc417]
T: IndexHolder

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3d21dfc]
T: Int

public abstract fun removeAt(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@629e6600]
E: JsStatement

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.js.backend.ast.JsStatement> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6ab57f0f]
T: IndexedValue<JsStatement>

public final operator fun component2(): org.jetbrains.kotlin.js.backend.ast.JsStatement defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@4fe8704]
T: JsStatement


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsSwitchMember

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.js.backend.ast.JsStatement> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1294b4e8]
T: IndexedValue<JsStatement>

public final operator fun component2(): org.jetbrains.kotlin.js.backend.ast.JsStatement defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@139c7f8f]
T: JsStatement

public abstract fun removeAt(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@448a31f2]
E: JsStatement

public abstract fun removeAt(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@448a31f2]
E: JsStatement

public abstract operator fun next(): () -> kotlin.Boolean defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@d7a4bed]
T: Function0<Boolean>

val opt: () -> kotlin.Boolean defined in org.jetbrains.kotlin.js.inline.clean.FunctionPostProcessor.apply[LocalVariableDescriptor@20260bf1] +++|+++
R: Boolean

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsProgramFragment defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7ef554c6]
T: JsProgramFragment

public final val predicate: (T) -> kotlin.Boolean defined in org.jetbrains.kotlin.js.inline.clean.NodeRemover[PropertyDescriptorImpl@53793615] +++|+++
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsStatement

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.js.backend.ast.JsStatement): org.jetbrains.kotlin.js.backend.ast.JsStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@1b6a9aa2]
E: JsStatement

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.js.backend.ast.JsStatement): org.jetbrains.kotlin.js.backend.ast.JsStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@1b6a9aa2]
E: JsStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6a81c886]
E: JsExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsExpressionStatement

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsExpressionStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

public fun <T> kotlin.sequences.Sequence<T>.last(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@3055f07c]
T: UsageSequence

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsReturn

private final inline fun <T> withNewScope(block: () -> T): T defined in org.jetbrains.kotlin.js.inline.clean.TemporaryVariableElimination.analyze.<no name provided>[SimpleFunctionDescriptorImpl@2ac0ec79]
T: Unit

private final inline fun <T> withNewScope(block: () -> T): T defined in org.jetbrains.kotlin.js.inline.clean.TemporaryVariableElimination.analyze.<no name provided>[SimpleFunctionDescriptorImpl@2ac0ec79]
T: Unit

private final inline fun <T> withNewScope(block: () -> T): T defined in org.jetbrains.kotlin.js.inline.clean.TemporaryVariableElimination.analyze.<no name provided>[SimpleFunctionDescriptorImpl@2ac0ec79]
T: Unit

private final inline fun <T> withNewScope(block: () -> T): T defined in org.jetbrains.kotlin.js.inline.clean.TemporaryVariableElimination.analyze.<no name provided>[SimpleFunctionDescriptorImpl@2ac0ec79]
T: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Nothing


private final inline fun <T> withNewScope(block: () -> T): T defined in org.jetbrains.kotlin.js.inline.clean.TemporaryVariableElimination.analyze.<no name provided>[SimpleFunctionDescriptorImpl@2ac0ec79]
T: Unit

private final inline fun <T> withNewScope(block: () -> T): T defined in org.jetbrains.kotlin.js.inline.clean.TemporaryVariableElimination.analyze.<no name provided>[SimpleFunctionDescriptorImpl@2ac0ec79]
T: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7f37a9e6]
T: JsName

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1008649f]
T: Pair<JsName, JsNode>

public final operator fun component1(): org.jetbrains.kotlin.js.backend.ast.JsName defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2402fdfc]
A: JsName

public final operator fun component2(): org.jetbrains.kotlin.js.backend.ast.JsNode defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1be81aed]
B: JsNode

public abstract fun removeAt(index: kotlin.Int): kotlin.Pair<org.jetbrains.kotlin.js.backend.ast.JsName, org.jetbrains.kotlin.js.backend.ast.JsNode> defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@389430e2]
E: Pair<JsName, JsNode>

public abstract operator fun get(index: kotlin.Int): kotlin.Pair<kotlin.collections.List<(org.jetbrains.kotlin.js.backend.ast.JsVars.JsVar..org.jetbrains.kotlin.js.backend.ast.JsVars.JsVar?)>, kotlin.Boolean> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@143ba444]
E: Pair<List<(org.jetbrains.kotlin.js.backend.ast.JsVars.JsVar..org.jetbrains.kotlin.js.backend.ast.JsVars.JsVar?)>, Boolean>

public final val second: kotlin.Boolean defined in kotlin.Pair[DeserializedPropertyDescriptor@7a838415]
B: Boolean

public abstract operator fun next(): kotlin.Pair<kotlin.collections.List<(org.jetbrains.kotlin.js.backend.ast.JsVars.JsVar..org.jetbrains.kotlin.js.backend.ast.JsVars.JsVar?)>, kotlin.Boolean> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@45257443]
T: Pair<List<(org.jetbrains.kotlin.js.backend.ast.JsVars.JsVar..org.jetbrains.kotlin.js.backend.ast.JsVars.JsVar?)>, Boolean>

public final operator fun component1(): kotlin.collections.List<(org.jetbrains.kotlin.js.backend.ast.JsVars.JsVar..org.jetbrains.kotlin.js.backend.ast.JsVars.JsVar?)> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3fe29802]
A: List<(org.jetbrains.kotlin.js.backend.ast.JsVars.JsVar..org.jetbrains.kotlin.js.backend.ast.JsVars.JsVar?)>

public final operator fun component2(): kotlin.Boolean defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@12fedb54]
B: Boolean

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7bd241ee]
T: JsExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsExpressionStatement

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsVars

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean




@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

public final val second: org.jetbrains.kotlin.js.backend.ast.JsParameter defined in kotlin.Pair[DeserializedPropertyDescriptor@7fd7c294]
B: JsParameter

public final val first: org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.Pair[DeserializedPropertyDescriptor@1a30c5f9]
A: JsExpression

public final val second: org.jetbrains.kotlin.js.backend.ast.JsParameter defined in kotlin.Pair[DeserializedPropertyDescriptor@7fd7c294]
B: JsParameter

public abstract fun next(): org.jetbrains.kotlin.js.backend.ast.JsStatement defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@72d2136a]
T: JsStatement

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@3068adbf]
E: JsStatement

public abstract fun removeAt(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@6c1bed5f]
E: JsStatement

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3e09a3b6]
R: List<JsFunction>

public abstract val value: org.jetbrains.kotlin.js.backend.ast.JsFunction defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@6f7b4654]
V: JsFunction

public abstract val key: org.jetbrains.kotlin.js.backend.ast.JsName defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@66e62091]
K: JsName

public abstract val value: org.jetbrains.kotlin.js.backend.ast.JsFunction defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@77093ec0]
V: JsFunction

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.js.backend.ast.JsName, org.jetbrains.kotlin.js.backend.ast.JsFunction> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3bf3ec91]
T: Entry<JsName, JsFunction>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e3f8059]
K: JsName

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3163de13]
V: JsFunction

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@eb14185]
T: JsName

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@eb14185]
T: JsName

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e3f8059]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3163de13]
V: JsExpression

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72f8ee56]
T: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: CoroutineMetadata

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3e09a3b6]
R: List<JsStatement>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@187933df]
T: JsName

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsName

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsName

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: Scope

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72f8ee56]
T: FragmentInfo

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72f8ee56]
T: InlineFunctionDefinition

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Nothing

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72f8ee56]
T: InlineFunctionDefinition

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: InlineFunctionDefinition

public final fun computeIfAbsent(p0: org.jetbrains.kotlin.js.backend.ast.JsProgramFragment, p1: (org.jetbrains.kotlin.js.backend.ast.JsProgramFragment) -> org.jetbrains.kotlin.js.inline.context.FunctionDefinitionLoader.FragmentInfo): org.jetbrains.kotlin.js.inline.context.FunctionDefinitionLoader.FragmentInfo defined in kotlin.collections.MutableMap[SamAdapterExtensionFunctionDescriptorImpl@db88d38]
V: FragmentInfo

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72f8ee56]
T: JsProgramFragment

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsProgramFragment

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: InlineFunctionDefinition

public abstract operator fun get(index: kotlin.Int): java.io.File defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@9885182]
E: File

public abstract operator fun get(index: kotlin.Int): java.io.File defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@d5ee034]
E: File

public final operator fun component1(): java.io.File defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@102c8b9a]
A: File

public final operator fun component2(): java.io.File defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@776ad64e]
B: File

public abstract operator fun get(index: kotlin.Int): java.io.File defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@d5ee034]
E: File

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

public abstract val value: kotlin.Pair<org.jetbrains.kotlin.js.inline.util.FunctionWithWrapper, org.jetbrains.kotlin.js.backend.ast.JsExpression> defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@4fe2fee4]
V: Pair<FunctionWithWrapper, JsExpression>

public final val second: org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.Pair[DeserializedPropertyDescriptor@5efcf986]
B: JsExpression

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsProgramFragment defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@16fb9a4e]
T: JsProgramFragment

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsProgramFragment defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@51564a4f]
T: JsProgramFragment

public abstract val value: kotlin.Pair<org.jetbrains.kotlin.js.inline.util.FunctionWithWrapper, org.jetbrains.kotlin.js.backend.ast.JsExpression> defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@4eea174d]
V: Pair<FunctionWithWrapper, JsExpression>

public final val first: org.jetbrains.kotlin.js.inline.util.FunctionWithWrapper defined in kotlin.Pair[DeserializedPropertyDescriptor@3a6ab25c]
A: FunctionWithWrapper

public abstract val value: kotlin.Pair<org.jetbrains.kotlin.js.inline.util.FunctionWithWrapper, org.jetbrains.kotlin.js.backend.ast.JsExpression> defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@9759429]
V: Pair<FunctionWithWrapper, JsExpression>

public final val first: org.jetbrains.kotlin.js.inline.util.FunctionWithWrapper defined in kotlin.Pair[DeserializedPropertyDescriptor@3a6ab25c]
A: FunctionWithWrapper

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsProgramFragment defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@66d5d01f]
T: JsProgramFragment

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsProgramFragment defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@28c7f873]
T: JsProgramFragment

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3e09a3b6]
R: MutableList<T>


public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7d5f572]
T: JsName

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<kotlin.String, org.jetbrains.kotlin.js.backend.ast.JsName?> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@33f14b2f]
T: MutableEntry<String, JsName?>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e3f8059]
K: String

public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.js.backend.ast.JsExpression, org.jetbrains.kotlin.js.backend.ast.JsParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@34e4193f]
T: Pair<JsExpression, JsParameter>

public final operator fun component1(): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@c1503a6]
A: JsExpression

public final operator fun component2(): org.jetbrains.kotlin.js.backend.ast.JsParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7214704b]
B: JsParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsName

public abstract fun next(): org.jetbrains.kotlin.js.backend.ast.JsParameter defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@744d08dd]
T: JsParameter

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@66a09ad0]
T: JsName

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsName

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@bbfcfed]
V: ArrayDeque<JsName>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsLabel

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsBreak

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsBinaryOperation

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsBinaryOperation

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsNameRef

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@10cb9ec6]
T: KtFile

public abstract operator fun next(): org.jetbrains.kotlin.js.facade.TranslationUnit defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@57e83b83]
T: TranslationUnit

public final operator fun component1(): org.jetbrains.kotlin.js.backend.ast.JsProgram defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@318f3a8c]
A: JsProgram

public final operator fun component2(): kotlin.collections.List<kotlin.String> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2d505cad]
B: List<String>

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.name.FqName, kotlin.ByteArray> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@39360e23]
T: Entry<FqName, ByteArray>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e3f8059]
K: FqName

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3163de13]
V: ByteArray

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.js.facade.TranslationUnit.SourceFile, org.jetbrains.kotlin.js.translate.general.SourceFileTranslationResult> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@f90d97b]
T: Entry<SourceFile, SourceFileTranslationResult>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e3f8059]
K: SourceFile

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3163de13]
V: SourceFileTranslationResult

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: MutableSet<JsName>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: MutableList<JsStatement>

public abstract operator fun next(): org.jetbrains.kotlin.serialization.js.KotlinJavascriptSerializationUtil.SerializedMetadata.SerializedPackage defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4cf4bd5e]
T: SerializedPackage

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsExpression

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.candidateDescriptor: D[MyPropertyDescriptor@632697fc]
D: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsExpression

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: VariableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: VariableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: VariableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@65e76a70]
R: Boolean

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsExpression

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: FunctionDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: FunctionDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@59f5491c]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@59f5491c]
E: JsExpression


public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@59f5491c]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@59f5491c]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@59f5491c]
E: JsExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@59f5491c]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@59f5491c]
E: JsExpression

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: FunctionDescriptor

public final operator fun component1(): org.jetbrains.kotlin.js.backend.ast.metadata.RangeType defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1aca9051]
A: RangeType

public final operator fun component2(): org.jetbrains.kotlin.js.backend.ast.metadata.RangeKind defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1aba132a]
B: RangeKind

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsBinaryOperation

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsInvocation

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsExpression

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: CallableDescriptor

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72f8ee56]
T: JsExpressionStatement

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.ClassDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@13532239]
T: ClassDescriptor

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1008649f]
T: String

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsName

public final val first: org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.Pair[DeserializedPropertyDescriptor@51f98afe]
A: JsExpression

public final val first: org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.Pair[DeserializedPropertyDescriptor@51f98afe]
A: JsExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

public final val first: org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.Pair[DeserializedPropertyDescriptor@51f98afe]
A: JsExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsName

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.CallableMemberDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5376bc1a]
T: CallableMemberDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.FunctionDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3998943e]
T: FunctionDescriptor












public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.descriptors.FunctionDescriptor, org.jetbrains.kotlin.descriptors.FunctionDescriptor> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4c024a93]
T: Entry<FunctionDescriptor, FunctionDescriptor>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e3f8059]
K: FunctionDescriptor

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3163de13]
V: FunctionDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@16dbf03a]
T: DeclarationDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.backend.common.bridges.Bridge<org.jetbrains.kotlin.descriptors.FunctionDescriptor> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@35acce16]
T: Bridge<FunctionDescriptor>

public final val from: org.jetbrains.kotlin.descriptors.FunctionDescriptor defined in org.jetbrains.kotlin.backend.common.bridges.Bridge[DeserializedPropertyDescriptor@63e6acfd]
Signature: FunctionDescriptor

public final val to: org.jetbrains.kotlin.descriptors.FunctionDescriptor defined in org.jetbrains.kotlin.backend.common.bridges.Bridge[DeserializedPropertyDescriptor@20cf14a]
Signature: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsFunction

public abstract operator fun next(): org.jetbrains.kotlin.js.translate.declaration.ClassTranslator.ConstructorInfo defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7d476cb3]
T: ConstructorInfo

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: ClassInitializerTranslator

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: ConstructorDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: ConstructorDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: ConstructorDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsReturn

public abstract fun next(): (kotlin.collections.MutableList<org.jetbrains.kotlin.js.backend.ast.JsStatement>) -> kotlin.Unit defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@20e0b072]
T: Function1<MutableList<JsStatement>, Unit>

val partGenerator: (kotlin.collections.MutableList<org.jetbrains.kotlin.js.backend.ast.JsStatement>) -> kotlin.Unit defined in org.jetbrains.kotlin.js.translate.declaration.ClassTranslator.generateSecondaryConstructor.<anonymous>[LocalVariableDescriptor@1f14990c] +++|+++
R: Unit

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: ConstructorDescriptor

public final val superCallGenerator: () -> kotlin.Unit defined in org.jetbrains.kotlin.js.translate.declaration.ClassTranslator.ConstructorInfo[PropertyDescriptorImpl@53f40627] +++|+++
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.js.translate.context.DeferredCallSite defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@76ee736e]
T: DeferredCallSite

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.PropertyDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@716215ce]
T: PropertyDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: T

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsReturn

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsInvocation

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsInvocation

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDelegatedSuperTypeEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@16b1a9a2]
T: KtDelegatedSuperTypeEntry

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsBinaryOperation

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDelegatedSuperTypeEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@16b1a9a2]
T: KtDelegatedSuperTypeEntry

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.descriptors.CallableMemberDescriptor, org.jetbrains.kotlin.descriptors.CallableMemberDescriptor> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@b0a05a0]
T: Entry<CallableMemberDescriptor, CallableMemberDescriptor>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e3f8059]
K: CallableMemberDescriptor

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3163de13]
V: CallableMemberDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsReturn

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsReturn

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsCase

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsDefault

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsSwitch



@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsReturn

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsNameRef

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsNameRef

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsFunction

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72f8ee56]
T: JsName

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsInvocation

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsInvocation

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsNameRef

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsNameRef

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsNameRef

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsNameRef

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6a5d7a29]
T: KtCatchClause

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsThrow

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtCatchClause defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@78dfa49]
T: KtCatchClause

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsIf

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72f8ee56]
T: JsName

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsBlock

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72f8ee56]
T: JsExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsInvocation

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.descriptors.DeclarationDescriptor, org.jetbrains.kotlin.js.backend.ast.JsName> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@23db951f]
T: Entry<DeclarationDescriptor, JsName>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e3f8059]
K: DeclarationDescriptor

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3163de13]
V: JsName

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@95aaadd]
T: JsExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsBreak

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsIf

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsIf

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: KtExpression

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Pair<VariableDescriptor?, VariableDescriptor?>

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: CallableDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsVars

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsVars

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsVars

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsVars

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsName

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsName

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsVars

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsVars

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsName

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsVars

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsName

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsName

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsVars

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsVars

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsVars

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72f8ee56]
T: JsFor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsBreak

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsIf

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: (kotlin.collections.MutableList<(org.jetbrains.kotlin.js.backend.ast.JsStatement..org.jetbrains.kotlin.js.backend.ast.JsStatement?)>..kotlin.collections.List<(org.jetbrains.kotlin.js.backend.ast.JsStatement..org.jetbrains.kotlin.js.backend.ast.JsStatement?)>)

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsStatement

public final operator fun component1(): org.jetbrains.kotlin.js.backend.ast.JsSwitch defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6a544cb4]
A: JsSwitch

public final operator fun component2(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5caf94aa]
B: Int

var setWhenStatement: (org.jetbrains.kotlin.js.backend.ast.JsStatement) -> kotlin.Unit defined in org.jetbrains.kotlin.js.translate.expression.WhenTranslator.translate[LocalVariableDescriptor@223d5acb] +++|+++
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsBreak

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsDefault

var setWhenStatement: (org.jetbrains.kotlin.js.backend.ast.JsStatement) -> kotlin.Unit defined in org.jetbrains.kotlin.js.translate.expression.WhenTranslator.translate[LocalVariableDescriptor@223d5acb] +++|+++
R: Unit

var setWhenStatement: (org.jetbrains.kotlin.js.backend.ast.JsStatement) -> kotlin.Unit defined in org.jetbrains.kotlin.js.translate.expression.WhenTranslator.translate[LocalVariableDescriptor@223d5acb] +++|+++
R: Unit

var setWhenStatement: (org.jetbrains.kotlin.js.backend.ast.JsStatement) -> kotlin.Unit defined in org.jetbrains.kotlin.js.translate.expression.WhenTranslator.translate[LocalVariableDescriptor@223d5acb] +++|+++
R: Unit

public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.js.translate.expression.EntryWithConstants /* = kotlin.Pair<kotlin.collections.List<org.jetbrains.kotlin.js.backend.ast.JsExpression>, org.jetbrains.kotlin.psi.KtWhenEntry> */> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@43b74e05]
A: List<Pair<List<JsExpression>, KtWhenEntry>>

public final operator fun component2(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6834d928]
B: Int

public final val first: kotlin.collections.List<org.jetbrains.kotlin.js.backend.ast.JsExpression> defined in kotlin.Pair[DeserializedPropertyDescriptor@dc64a3b]
A: List<JsExpression>

public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.js.backend.ast.JsExpression> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5832dc45]
A: List<JsExpression>

public final operator fun component2(): org.jetbrains.kotlin.psi.KtWhenEntry defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@535919c5]
B: KtWhenEntry

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsCase

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1008649f]
T: JsCase

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsBreak

var subjectSupplier: () -> org.jetbrains.kotlin.js.backend.ast.JsExpression defined in org.jetbrains.kotlin.js.translate.expression.WhenTranslator.translateAsSwitch[LocalVariableDescriptor@525cf996] +++|+++
R: JsExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsSwitch

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.psi.KtWhenEntry defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@7733c4c8]
E: KtWhenEntry

public inline fun <T, R> kotlin.sequences.Sequence<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@1b7f7c5]
R: JsExpression

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@bbfcfed]
V: DeserializedFileTranslationResult

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72f8ee56]
T: JsStatement

public final fun computeIfAbsent(p0: kotlin.String, p1: (kotlin.String) -> org.jetbrains.kotlin.js.backend.ast.JsStatement): org.jetbrains.kotlin.js.backend.ast.JsStatement defined in kotlin.collections.MutableMap[SamAdapterExtensionFunctionDescriptorImpl@4ae7bf23]
V: JsStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

public final val first: kotlin.String defined in kotlin.Pair[DeserializedPropertyDescriptor@76b029bd]
A: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <K, V> kotlin.collections.Map<K, V>.getOrElse(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@ad2180c]
V: JsName

public abstract fun next(): org.jetbrains.kotlin.js.backend.ast.JsNameBinding defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@314f4d3e]
T: JsNameBinding

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72f8ee56]
T: JsName

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@bbfcfed]
V: JsName

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@bbfcfed]
V: JsName

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

public abstract fun next(): org.jetbrains.kotlin.js.backend.ast.JsImportedModule defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@534944f6]
T: JsImportedModule

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsName

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72f8ee56]
T: JsName

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@bbfcfed]
V: JsName

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@bbfcfed]
V: JsName

public abstract val value: org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.MutableMap.MutableEntry[DeserializedPropertyDescriptor@6841ff4f]
V: JsExpression

public abstract fun setValue(newValue: org.jetbrains.kotlin.js.backend.ast.JsExpression): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.MutableMap.MutableEntry[DeserializedSimpleFunctionDescriptor@2e304e20]
V: JsExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsName

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsClassModel

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e3f8059]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3163de13]
V: JsExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsName

public abstract fun next(): org.jetbrains.kotlin.js.backend.ast.JsProgramFragment defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@17673db8]
T: JsProgramFragment

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<kotlin.String, org.jetbrains.kotlin.js.backend.ast.JsExpression> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@48210346]
T: MutableEntry<String, JsExpression>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e3f8059]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3163de13]
V: JsExpression

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e3f8059]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3163de13]
V: JsGlobalBlock

public final val second: org.jetbrains.kotlin.js.backend.ast.JsStatement defined in kotlin.Pair[DeserializedPropertyDescriptor@1d685080]
B: JsStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: (kotlin.collections.MutableList<(org.jetbrains.kotlin.js.backend.ast.JsStatement..org.jetbrains.kotlin.js.backend.ast.JsStatement?)>..kotlin.collections.List<(org.jetbrains.kotlin.js.backend.ast.JsStatement..org.jetbrains.kotlin.js.backend.ast.JsStatement?)>)

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsImportedModule defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@396ad528]
T: JsImportedModule

public abstract fun next(): org.jetbrains.kotlin.js.backend.ast.JsName defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@26894025]
T: JsName

public abstract fun next(): org.jetbrains.kotlin.js.backend.ast.JsName defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@26894025]
T: JsName

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsProgramFragment defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5075fd26]
T: JsProgramFragment

public abstract fun next(): org.jetbrains.kotlin.js.backend.ast.JsNameBinding defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@314f4d3e]
T: JsNameBinding

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsImportedModule defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@73fa77b2]
T: JsImportedModule

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsImportedModule defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5dbe0e6e]
T: JsImportedModule

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e3f8059]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3163de13]
V: JsExpression

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component1(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14ca68ce]
T: JsExpression

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component2(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6c8a0f4]
T: JsExpression

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: CallableDescriptor

public inline fun <T> kotlin.collections.Iterable<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7cdbbf9e]
T: PropertyDescriptor

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@13b6f6e5]
E: JsExpression

public final val applyFun: (left: org.jetbrains.kotlin.js.backend.ast.JsExpression, right: org.jetbrains.kotlin.js.backend.ast.JsExpression) -> org.jetbrains.kotlin.js.backend.ast.JsExpression defined in org.jetbrains.kotlin.js.translate.intrinsic.functions.factories.LongOperationFIF.BaseBinaryIntrinsic[PropertyDescriptorImpl@14da1943] +++|+++
R: JsExpression



public final val applyFun: (left: org.jetbrains.kotlin.js.backend.ast.JsExpression, right: org.jetbrains.kotlin.js.backend.ast.JsExpression) -> org.jetbrains.kotlin.js.backend.ast.JsExpression defined in org.jetbrains.kotlin.js.translate.intrinsic.functions.factories.LongOperationFIF.BaseBinaryIntrinsic[PropertyDescriptorImpl@14da1943] +++|+++
R: JsExpression

public final val applyFun: org.jetbrains.kotlin.js.translate.context.TranslationContext.(receiver: org.jetbrains.kotlin.js.backend.ast.JsExpression) -> org.jetbrains.kotlin.js.backend.ast.JsExpression defined in org.jetbrains.kotlin.js.translate.intrinsic.functions.factories.NumberAndCharConversionFIF.ConversionUnaryIntrinsic[PropertyDescriptorImpl@626542df] +++|+++
R: JsExpression

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: CallableDescriptor

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6f2bed17]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6f2bed17]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6f2bed17]
E: JsExpression

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6a5d7a29]
T: JsExpression

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1008649f]
T: JsExpression

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: CallableDescriptor

public final operator fun component1(): org.jetbrains.kotlin.js.patterns.DescriptorPredicate defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5bf38a78]
A: DescriptorPredicate

public final operator fun component2(): org.jetbrains.kotlin.js.translate.intrinsic.operation.BinaryOperationIntrinsic defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@40900f17]
B: BinaryOperationIntrinsic

public abstract operator fun invoke(p1: org.jetbrains.kotlin.types.KotlinType): (org.jetbrains.kotlin.types.KotlinType) -> (kotlin.Boolean, kotlin.Boolean) -> org.jetbrains.kotlin.js.translate.intrinsic.operation.BinaryOperationIntrinsic defined in kotlin.Function1[FunctionInvokeDescriptor@1172ee32]
R: Function1<KotlinType, Function2<Boolean, Boolean, BinaryOperationIntrinsic>>

public abstract operator fun invoke(p1: org.jetbrains.kotlin.types.KotlinType): (kotlin.Boolean, kotlin.Boolean) -> org.jetbrains.kotlin.js.translate.intrinsic.operation.BinaryOperationIntrinsic defined in kotlin.Function1[FunctionInvokeDescriptor@309d1d25]
R: Function2<Boolean, Boolean, BinaryOperationIntrinsic>

public abstract operator fun invoke(p1: kotlin.Boolean, p2: kotlin.Boolean): org.jetbrains.kotlin.js.translate.intrinsic.operation.BinaryOperationIntrinsic defined in kotlin.Function2[FunctionInvokeDescriptor@2d4cedcb]
R: BinaryOperationIntrinsic

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@5d64468b]
E: JsExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Boolean

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3163de13]
V: JsExpression

public final fun computeIfAbsent(p0: org.jetbrains.kotlin.builtins.PrimitiveType, p1: (org.jetbrains.kotlin.builtins.PrimitiveType) -> org.jetbrains.kotlin.descriptors.ClassDescriptor): org.jetbrains.kotlin.descriptors.ClassDescriptor defined in kotlin.collections.MutableMap[SamAdapterExtensionFunctionDescriptorImpl@4f29e401]
V: ClassDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsNew

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@47c76bf6]
E: JsExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: JsInvocation

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@47c76bf6]
E: JsExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsArrayLiteral

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.psi.ValueArgument defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@65f1585e]
E: ValueArgument

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@16fa430c]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@7d9cb94c]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@7d9cb94c]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@7d9cb94c]
E: JsExpression

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6400beb8]
T: TypeParameterDescriptor

@org.jetbrains.annotations.NotNull public abstract fun getResultingDescriptor(): org.jetbrains.kotlin.descriptors.CallableDescriptor defined in org.jetbrains.kotlin.resolve.calls.model.ResolvedCall[JavaMethodDescriptor@4485fc63]
D: CallableDescriptor

public final operator fun component2(): org.jetbrains.kotlin.resolve.calls.model.ExpressionValueArgument defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@755516b0]
T: ExpressionValueArgument

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@3d4080df]
D: FunctionDescriptor

public abstract operator fun next(): kotlin.collections.IndexedValue<(org.jetbrains.kotlin.psi.ValueArgument..org.jetbrains.kotlin.psi.ValueArgument?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@44293c8]
T: IndexedValue<(org.jetbrains.kotlin.psi.ValueArgument..org.jetbrains.kotlin.psi.ValueArgument?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4456ce01]
R: Unit


public abstract operator fun next(): org.jetbrains.kotlin.descriptors.PackageFragmentDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3df0cdad]
T: PackageFragmentDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.name.FqName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@58c63348]
T: FqName


public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsProgramFragment defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@64c7d910]
T: JsProgramFragment

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: MutableSet<JsName>

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@e8d2f71]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@e8d2f71]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@e8d2f71]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@e8d2f71]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@e8d2f71]
E: JsExpression

public final operator fun component1(): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@31c54529]
A: JsExpression

public final operator fun component1(): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@31c54529]
A: JsExpression

public abstract operator fun next(): kotlin.collections.IndexedValue<T> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@686bc316]
T: IndexedValue<T>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@72f8ee56]
T: JsExpression

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2ea384fa]
T: [@kotlin.jvm.JvmWildcard] PropertyDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsVars

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7995b440]
T: JsNameRef

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@729604f0]
R: ClassId

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@14bc9a12]
T: MutableMap<ClassId, ClassId>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4d3f0617]
K: ClassId

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3d0d3490]
V: ClassId

public abstract operator fun next(): org.jetbrains.kotlin.fir.visitors.generator.DataCollector.NameWithTypeParameters defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@714617e1]
T: NameWithTypeParameters

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2fd2fe49]
T: MutableMap<NameWithTypeParameters, NameWithTypeParameters>

public final val first: kotlin.collections.List<kotlin.String> defined in kotlin.Pair[DeserializedPropertyDescriptor@5b23b52]
A: List<String>

public final val second: kotlin.collections.Map<kotlin.String, kotlin.String> defined in kotlin.Pair[DeserializedPropertyDescriptor@551c187c]
B: Map<String, String>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@63c78286]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@135d90b7]
V: NameWithTypeParameters



public abstract operator fun next(): kotlin.Any defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@18bfc2a0]
T: Any

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7c74ec0c]
T: Printer

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@243bab32]
R: Set<NameWithTypeParameters>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@243bab32]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@243bab32]
R: String

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@71dada0e]
T: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1d960b2d]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1d960b2d]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1d960b2d]
E: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@76d5a4b4]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@76d5a4b4]
R: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@135d90b7]
V: List<K>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@63c78286]
K: K

public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@2a517ae1]
T: String

public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@2a517ae1]
T: String

internal inline fun <T> withPsiSetup(l: org.jetbrains.kotlin.fir.visitors.generator.PsiSetup.() -> T): T defined in org.jetbrains.kotlin.fir.visitors.generator in file PsiSetup.kt[SimpleFunctionDescriptorImpl@addaa2f]
T: Unit

public abstract operator fun next(): org.jetbrains.kotlin.fir.visitors.generator.DataCollector.NameWithTypeParameters defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4221999e]
T: NameWithTypeParameters


public open fun <R, D> accept(visitor: org.jetbrains.kotlin.fir.visitors.FirVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.fir.FirElement[SimpleFunctionDescriptorImpl@51d165be]
R: Unit

public final operator fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.declarations.FirResolvePhase defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@457e01c3]
T: FirResolvePhase

public final operator fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.declarations.FirResolvePhase defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@cbe9e0a]
T: FirResolvePhase

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@174275c1]
R: ClassId

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@174275c1]
R: FirDelegateFieldSymbol<FirProperty>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@174275c1]
R: FirDelegateFieldSymbol<FirVariableImpl>

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@79049099]
T: FirExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@174275c1]
R: ClassId

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@79049099]
T: FirExpression

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.expressions.FirExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@305fb4d]
E: FirExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@38fcaa83]
T: FirDeclarationStatusImpl

public open fun <R, D> accept(visitor: org.jetbrains.kotlin.fir.visitors.FirVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.fir.FirElement[SimpleFunctionDescriptorImpl@51d165be]
R: CompositeTransformResult<FirElement>

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.fir.FirElement> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@268586c6]
T: IndexedValue<FirElement>

public final operator fun component2(): org.jetbrains.kotlin.fir.FirElement defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@445ed730]
T: FirElement

public abstract operator fun next(): org.jetbrains.kotlin.fir.expressions.FirAnnotationCall defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3990c644]
T: FirAnnotationCall

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@174275c1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@416b4622]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@416b4622]
R: String

public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@47d51f60]
T: FirDeclaration


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@174275c1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@174275c1]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.fir.expressions.FirStatement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@77519457]
T: FirStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@174275c1]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.fir.expressions.FirWhenBranch defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7d61e151]
T: FirWhenBranch

public abstract operator fun next(): org.jetbrains.kotlin.fir.expressions.FirCatch defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@20a6eb8a]
T: FirCatch

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@174275c1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@174275c1]
R: Unit

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.fir.types.FirQualifierPart> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@713ed719]
T: IndexedValue<FirQualifierPart>

public final operator fun component2(): org.jetbrains.kotlin.fir.types.FirQualifierPart defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@2f0241df]
T: FirQualifierPart

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7cc26299]
V: Int

public abstract fun next(): T defined in kotlin.collections.MutableListIterator[DeserializedSimpleFunctionDescriptor@25953e30]
T: T

public abstract fun next(): T defined in kotlin.collections.ListIterator[DeserializedSimpleFunctionDescriptor@794ab541]
T: T

public abstract fun next(): T defined in kotlin.collections.ListIterator[DeserializedSimpleFunctionDescriptor@794ab541]
T: T

public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirValueParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@fc5eaa3]
T: FirValueParameter

public abstract operator fun next(): org.jetbrains.kotlin.fir.types.FirTypeRef defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@36df6333]
T: FirTypeRef

public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@67def262]
T: FirDeclaration

public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirTypeParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5fd1d184]
T: FirTypeParameter

public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirValueParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2133c8a2]
T: FirValueParameter

public abstract operator fun next(): org.jetbrains.kotlin.fir.expressions.FirExpression defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@33871543]
T: FirExpression

public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirImport defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@53ad3fc3]
T: FirImport

public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirValueParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3241a4ce]
T: FirValueParameter

public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirTypeParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@646aba3d]
T: FirTypeParameter

public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirValueParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@316016af]
T: FirValueParameter

public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@41ab2c16]
T: FirDeclaration

public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirValueParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@472382c6]
T: FirValueParameter

public abstract operator fun next(): org.jetbrains.kotlin.fir.types.FirTypeRef defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@500005cc]
T: FirTypeRef

public abstract operator fun next(): org.jetbrains.kotlin.fir.expressions.FirAnnotationCall defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@60c15456]
T: FirAnnotationCall

public abstract operator fun next(): org.jetbrains.kotlin.fir.expressions.FirStatement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@35855205]
T: FirStatement

public abstract operator fun next(): org.jetbrains.kotlin.fir.expressions.FirExpression defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@22b85f32]
T: FirExpression

public abstract operator fun next(): org.jetbrains.kotlin.fir.types.FirTypeProjection defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@12b3c6ac]
T: FirTypeProjection

public abstract operator fun next(): org.jetbrains.kotlin.fir.expressions.FirWhenBranch defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@390525e5]
T: FirWhenBranch

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@174275c1]
R: FirConstExpressionImpl<T>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@174275c1]
R: FirConstExpressionImpl<T>


public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirValueParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@59e96b44]
T: FirValueParameter

public abstract operator fun next(): org.jetbrains.kotlin.fir.types.FirQualifierPart defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6cb5e389]
T: FirQualifierPart

public abstract operator fun next(): org.jetbrains.kotlin.fir.types.FirTypeProjection defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@76c88837]
T: FirTypeProjection

public abstract fun next(): org.jetbrains.kotlin.fir.types.FirQualifierPart defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@37ec5cb3]
T: FirQualifierPart

@kotlin.SinceKotlin @kotlin.internal.InlineOnly public suspend inline fun <T> suspendCoroutineUninterceptedOrReturn(crossinline block: (kotlin.coroutines.Continuation<T>) -> kotlin.Any?): T defined in kotlin.coroutines.intrinsics[DeserializedSimpleFunctionDescriptor@313e0da2]
T: Unit

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56757ef2]
T: List<FirSymbolProvider>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56757ef2]
T: List<FirSymbolProvider>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: FirClassDeclaredMemberScope

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@63f0616d]
R: Map<Name, List<FirResolvedImportImpl>>

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.metadata.ProtoBuf.TypeParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@17532047]
T: IndexedValue<TypeParameter>

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.TypeParameter defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@48ab1bc]
T: TypeParameter

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56757ef2]
T: CandidateCollector

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56757ef2]
T: CandidateCollector

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56757ef2]
T: NewConstraintSystemImpl

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56757ef2]
T: NewConstraintSystemImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: List<ConeKotlinType>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: List<ConeKotlinType>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56757ef2]
T: FirMemberDeserializer

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56757ef2]
T: FirMemberDeserializer

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56757ef2]
T: FirSymbolProvider

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56757ef2]
T: FirSymbolProvider

public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5ffb651f]
T: FirDeclaration

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5eb237df]
V: MutableList<FirCallableSymbol<*>>

public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4526ed3c]
T: FirDeclaration

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5eb237df]
V: MutableList<FirCallableSymbol<*>>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@63f0616d]
R: MutableMap<Name, MutableList<FirCallableSymbol<*>>>

public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@56c67de4]
T: FirDeclaration

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@63f0616d]
R: MutableMap<Name, FirClassSymbol>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56757ef2]
T: ReturnTypeCalculatorWithJump

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56757ef2]
T: ReturnTypeCalculatorWithJump

public fun <T> kotlin.Array<out T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@39277e47]
T: ConeKotlinTypeProjection

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.metadata.ProtoBuf.TypeParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@497e5b14]
T: IndexedValue<TypeParameter>

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.TypeParameter defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@3cd9d5b3]
T: TypeParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirTypeParameterImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirFunctionCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirAnonymousFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirTypeParameterImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirResolvedQualifierImpl

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2a494793]
T: Candidate

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirResolvedQualifierImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: FirResolvedTypeRefImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: FirResolvedTypeRefImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirAnnotationCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirGetClassCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: FirResolvedCallableReferenceImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: FirResolvedCallableReferenceImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirFunctionCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirEnumEntryImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirClassImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirTypeAliasImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirMemberPropertyImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirMemberFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirTypeParameterImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirConstructorImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirValueParameterImpl



@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: Nothing


@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56757ef2]
T: Boolean

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56757ef2]
T: Boolean

public final operator fun component1(): org.jetbrains.kotlin.fir.symbols.impl.FirTypeParameterSymbol defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5a1c79b1]
A: FirTypeParameterSymbol

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@bcfd448]
T: MutableList<ConeClassLikeType>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5eb237df]
V: MutableMap<ScopeSessionKey<*>, FirScope>


public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5eb237df]
V: FirScope

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: FirScope

public final operator fun component1(): org.jetbrains.kotlin.fir.symbols.impl.FirTypeParameterSymbol defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@66543c4]
A: FirTypeParameterSymbol

public abstract operator fun next(): org.jetbrains.kotlin.fir.scopes.FirScope defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4e6b682c]
T: FirScope

public abstract operator fun next(): org.jetbrains.kotlin.fir.scopes.FirScope defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@251a9c6a]
T: FirScope

public abstract operator fun next(): org.jetbrains.kotlin.fir.resolve.calls.ImplicitReceiverValue defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5b5c345a]
T: ImplicitReceiverValue

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4bb0f28a]
T: Int

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.fir.resolve.calls.Candidate> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@b28f5d1]
T: IndexedValue<Candidate>

public final operator fun component2(): org.jetbrains.kotlin.fir.resolve.calls.Candidate defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@45c9e616]
T: Candidate

public abstract fun get(index: kotlin.Int): kotlin.Int defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@150d1bf9]
E: Int

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirQualifiedAccessExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: Unit


public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@78ea08ca]
T: KotlinTypeMarker

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: AccumulatingTowerDataConsumer

public final operator fun component1(): org.jetbrains.kotlin.fir.resolve.substitution.ConeSubstitutor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5dcde141]
A: ConeSubstitutor

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.fir.resolve.calls.ConeTypeVariable> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3f908c14]
B: List<ConeTypeVariable>

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.declarations.FirTypeParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@76f272e1]
E: FirTypeParameter

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.resolve.calls.ConeTypeVariable defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@12128e2c]
E: ConeTypeVariable

@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.getOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> T): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5a202255]
T: FirTypeProjection

public abstract operator fun next(): org.jetbrains.kotlin.fir.resolve.calls.TypeParameterBasedTypeVariable defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7cee59c]
T: TypeParameterBasedTypeVariable

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.declarations.FirTypeParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@47b21edf]
E: FirTypeParameter

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.resolve.calls.TypeParameterBasedTypeVariable defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1e33ef2c]
E: TypeParameterBasedTypeVariable

public abstract operator fun next(): org.jetbrains.kotlin.fir.types.FirTypeRef defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@57545f83]
T: FirTypeRef

public abstract operator fun next(): org.jetbrains.kotlin.fir.expressions.FirExpression defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1dea3c83]
T: FirExpression

public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirValueParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1d4864c5]
T: FirValueParameter

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.types.model.TypeConstructorMarker, org.jetbrains.kotlin.resolve.calls.inference.model.VariableWithConstraints> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1304ec4b]
T: Entry<TypeConstructorMarker, VariableWithConstraints>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1f9fb8ce]
K: TypeConstructorMarker

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@739fe17e]
V: VariableWithConstraints

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@9a635b3]
R: Boolean

@kotlin.SinceKotlin public fun <K, V> kotlin.collections.Map<K, V>.getValue(key: K): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2a1e5376]
V: VariableWithConstraints

public abstract operator fun next(): org.jetbrains.kotlin.resolve.calls.model.PostponedResolvedAtomMarker defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6ef58337]
T: PostponedResolvedAtomMarker


public abstract operator fun next(): org.jetbrains.kotlin.fir.expressions.FirStatement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@431156]
T: FirStatement

public abstract operator fun next(): org.jetbrains.kotlin.types.model.KotlinTypeMarker defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@49e56b18]
T: KotlinTypeMarker

public abstract val value: org.jetbrains.kotlin.fir.declarations.FirValueParameter defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@5f9e9a5c]
V: FirValueParameter

public abstract val value: org.jetbrains.kotlin.fir.declarations.FirValueParameter defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@7e5e4b16]
V: FirValueParameter

public final val origin: org.jetbrains.kotlin.fir.resolve.calls.Candidate defined in org.jetbrains.kotlin.resolve.calls.results.FlatSignature[DeserializedPropertyDescriptor@2232ca36]
T: Candidate

public abstract operator fun next(): C defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4d61a570]
T: C




public abstract operator fun next(): org.jetbrains.kotlin.types.model.TypeParameterMarker defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@146f74ab]
T: TypeParameterMarker

public abstract operator fun next(): org.jetbrains.kotlin.fir.types.FirTypeRef defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5cdc8cdd]
T: FirTypeRef

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@9a635b3]
R: TypeSubstitutorMarker


public fun <T> kotlin.Array<out T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@38613203]
T: ConeKotlinTypeProjection

public abstract val key: org.jetbrains.kotlin.types.model.TypeVariableMarker defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@22253aa8]
K: TypeVariableMarker

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: ConeKotlinType

public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.fir.expressions.FirExpression> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@8112967]
A: List<FirExpression>

public final operator fun component2(): org.jetbrains.kotlin.resolve.calls.components.InferenceSession defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3f1369b8]
B: InferenceSession

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: ConeKotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: ConeKotlinType

public abstract operator fun next(): org.jetbrains.kotlin.fir.resolve.calls.ResolutionStage defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3fede068]
T: ResolutionStage

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: Nothing

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.fir.expressions.FirExpression, org.jetbrains.kotlin.fir.declarations.FirValueParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1f25dd27]
T: Entry<FirExpression, FirValueParameter>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1f9fb8ce]
K: FirExpression

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@739fe17e]
V: FirValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirMemberPropertyImpl


public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.fir.resolve.calls.TowerDataConsumer> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6aaa1983]
T: IndexedValue<TowerDataConsumer>

public final operator fun component2(): org.jetbrains.kotlin.fir.resolve.calls.TowerDataConsumer defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@441d0f66]
T: TowerDataConsumer

public abstract fun next(): org.jetbrains.kotlin.fir.resolve.calls.TowerDataConsumer defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@3a2c9641]
T: TowerDataConsumer

public abstract fun next(): org.jetbrains.kotlin.fir.resolve.calls.AccumulatingTowerDataConsumer.TowerData defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@34d7538c]
T: TowerData



public abstract operator fun next(): org.jetbrains.kotlin.fir.resolve.FirSymbolProvider defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@b35a4ad]
T: FirSymbolProvider

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.fir.resolve.FirSymbolProvider defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@23bb5a39]
T: FirSymbolProvider

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirEnumEntryImpl

public inline fun <K, V, VA : V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: (K) -> VA, postCompute: (VA) -> kotlin.Unit): V defined in org.jetbrains.kotlin.fir.resolve in file ResolveUtils.kt[SimpleFunctionDescriptorImpl@2a1181fd]
V: FirClassSymbol

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@36ba341b]
T: FirTypeParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirMemberFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirClassImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirClassSymbol

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5eb237df]
V: FirClassSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: FirClassDeclaredMemberScope

public abstract operator fun next(): kotlin.Triple<K, V?, V?> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@b769563]
T: Triple<K, V?, V?>


public abstract operator fun next(): kotlin.Triple<K, kotlin.collections.List<V>?, kotlin.collections.List<V>?> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@423b3661]
T: Triple<K, List<V>?, List<V>?>

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5baa32e9]
R: FqName

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@36ba341b]
T: FirQualifierPart

public abstract fun removeAt(index: kotlin.Int): org.jetbrains.kotlin.fir.types.FirQualifierPart defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@20bf1ddd]
E: FirQualifierPart

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5eb237df]
V: FirClassLikeSymbol<*>

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4bb0f28a]
T: FirQualifierPart

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@765bcc94]
T: ConeKotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: FirResolvedTypeRef

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.types.ConeKotlinType defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6420983e]
E: ConeKotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: FirResolvedTypeRef

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: FirResolvedTypeRef

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56757ef2]
T: Array<ConeKotlinTypeProjection?>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@56757ef2]
T: Array<ConeKotlinTypeProjection?>

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.fir.types.ConeKotlinTypeProjection> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6745c8e6]
T: IndexedValue<ConeKotlinTypeProjection>

public final operator fun component2(): org.jetbrains.kotlin.fir.types.ConeKotlinTypeProjection defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@6a40bd6d]
T: ConeKotlinTypeProjection

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.fir.types.ConeKotlinTypeProjection> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2e2b9df0]
T: IndexedValue<ConeKotlinTypeProjection>

public final operator fun component2(): org.jetbrains.kotlin.fir.types.ConeKotlinTypeProjection defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@63687e9c]
T: ConeKotlinTypeProjection

public abstract fun removeAt(index: kotlin.Int): org.jetbrains.kotlin.fir.scopes.FirScope defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@118d1bcc]
E: FirScope

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: Unit

protected final inline fun <T> withScopeCleanup(scopes: kotlin.collections.MutableList<*>, crossinline l: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirBodyResolveTransformer[SimpleFunctionDescriptorImpl@66d7c6bc]
T: CompositeTransformResult<FirFile>

protected final inline fun <T> withScopeCleanup(scopes: kotlin.collections.MutableList<*>, crossinline l: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirBodyResolveTransformer[SimpleFunctionDescriptorImpl@66d7c6bc]
T: CompositeTransformResult<FirDeclaration>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirLocalScope

private final inline fun <T> withLabelAndReceiverType(labelName: org.jetbrains.kotlin.name.Name, owner: org.jetbrains.kotlin.fir.FirElement, type: org.jetbrains.kotlin.fir.types.ConeKotlinType, block: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirBodyResolveTransformer[SimpleFunctionDescriptorImpl@24326da2]
T: CompositeTransformResult<FirDeclaration>

protected final inline fun <T> withScopeCleanup(scopes: kotlin.collections.MutableList<*>, crossinline l: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirBodyResolveTransformer[SimpleFunctionDescriptorImpl@66d7c6bc]
T: CompositeTransformResult<FirDeclaration>

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.types.ConeKotlinType defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@52fde07b]
E: ConeKotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: FirResolvedTypeRef

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: FirResolvedTypeRef

protected final inline fun <T> withScopeCleanup(scopes: kotlin.collections.MutableList<*>, crossinline l: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirBodyResolveTransformer[SimpleFunctionDescriptorImpl@66d7c6bc]
T: FirAnonymousFunction

private final inline fun <T> withLabelAndReceiverType(labelName: org.jetbrains.kotlin.name.Name, owner: org.jetbrains.kotlin.fir.FirElement, type: org.jetbrains.kotlin.fir.types.ConeKotlinType, block: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirBodyResolveTransformer[SimpleFunctionDescriptorImpl@24326da2]
T: FirAnonymousFunction

private final inline fun <T> withLabelAndReceiverType(labelName: org.jetbrains.kotlin.name.Name, owner: org.jetbrains.kotlin.fir.FirElement, type: org.jetbrains.kotlin.fir.types.ConeKotlinType, block: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirBodyResolveTransformer[SimpleFunctionDescriptorImpl@24326da2]
T: FirAnonymousFunction

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@9a635b3]
R: KotlinTypeMarker

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@9a635b3]
R: KotlinTypeMarker

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@9a635b3]
R: KotlinTypeMarker

private final fun <T> withContainer(declaration: org.jetbrains.kotlin.fir.declarations.FirDeclaration, f: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirBodyResolveTransformer[SimpleFunctionDescriptorImpl@b9accb8]
T: CompositeTransformResult<FirDeclaration>

protected final inline fun <T> withScopeCleanup(scopes: kotlin.collections.MutableList<*>, crossinline l: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirBodyResolveTransformer[SimpleFunctionDescriptorImpl@66d7c6bc]
T: CompositeTransformResult<FirDeclaration>

protected final inline fun <T> withScopeCleanup(scopes: kotlin.collections.MutableList<*>, crossinline l: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirBodyResolveTransformer[SimpleFunctionDescriptorImpl@66d7c6bc]
T: Single<FirFunction>

private final inline fun <T> withLabelAndReceiverType(labelName: org.jetbrains.kotlin.name.Name, owner: org.jetbrains.kotlin.fir.FirElement, type: org.jetbrains.kotlin.fir.types.ConeKotlinType, block: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirBodyResolveTransformer[SimpleFunctionDescriptorImpl@24326da2]
T: CompositeTransformResult<FirDeclaration>

private final inline fun <T> withLabelAndReceiverType(labelName: org.jetbrains.kotlin.name.Name, owner: org.jetbrains.kotlin.fir.FirElement, type: org.jetbrains.kotlin.fir.types.ConeKotlinType, block: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirBodyResolveTransformer[SimpleFunctionDescriptorImpl@24326da2]
T: CompositeTransformResult<FirDeclaration>

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.declarations.FirValueParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3fcfa68c]
E: FirValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@9a635b3]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirLocalScope

protected final inline fun <T> withScopeCleanup(scopes: kotlin.collections.MutableList<*>, crossinline l: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirBodyResolveTransformer[SimpleFunctionDescriptorImpl@66d7c6bc]
T: Unit

protected final inline fun <T> withScopeCleanup(scopes: kotlin.collections.MutableList<*>, crossinline l: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirBodyResolveTransformer[SimpleFunctionDescriptorImpl@66d7c6bc]
T: Unit

private final fun <T> withContainer(declaration: org.jetbrains.kotlin.fir.declarations.FirDeclaration, f: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirBodyResolveTransformer[SimpleFunctionDescriptorImpl@b9accb8]
T: Unit

protected final inline fun <T> withScopeCleanup(scopes: kotlin.collections.MutableList<*>, crossinline l: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirBodyResolveTransformer[SimpleFunctionDescriptorImpl@66d7c6bc]
T: Single<FirProperty>

public abstract fun removeAt(index: kotlin.Int): org.jetbrains.kotlin.fir.resolve.calls.ImplicitReceiverValue defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@28924f8]
E: ImplicitReceiverValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.fir.FirElement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@47e390cc]
T: FirElement

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@bcfd448]
T: FirFile

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@36ba341b]
T: FirDeclaration


public abstract fun removeAt(index: kotlin.Int): org.jetbrains.kotlin.fir.declarations.FirDeclaration defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@57c9c8b6]
E: FirDeclaration


public abstract fun removeAt(index: kotlin.Int): org.jetbrains.kotlin.fir.declarations.FirRegularClass defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@1e08ba74]
E: FirRegularClass

public open fun <R, D> accept(visitor: org.jetbrains.kotlin.fir.visitors.FirVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.fir.declarations.FirFile[DeserializedSimpleFunctionDescriptor@11f177c1]
R: CompositeTransformResult<FirElement>

protected final inline fun <T> withScopeCleanup(crossinline l: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirSupertypeResolverTransformer.ResolveSuperTypesTask[SimpleFunctionDescriptorImpl@69ec25c1]
T: FirRegularClass

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@bcfd448]
T: FirTypeAlias

protected final inline fun <T> withScopeCleanup(crossinline l: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirSupertypeResolverTransformer.ResolveSuperTypesTask[SimpleFunctionDescriptorImpl@69ec25c1]
T: FirTypeAlias

public abstract operator fun next(): org.jetbrains.kotlin.fir.types.FirTypeRef defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@35cd18e4]
T: FirTypeRef

public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirRegularClass defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@36c091d6]
T: [@kotlin.internal.NoInfer] FirRegularClass

protected final inline fun <T> withScopeCleanup(crossinline l: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirSupertypeResolverTransformer.ResolveSuperTypesTask[SimpleFunctionDescriptorImpl@69ec25c1]
T: CompositeTransformResult<FirDeclaration>

public abstract operator fun next(): org.jetbrains.kotlin.fir.visitors.FirTransformer<kotlin.Nothing?> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@35eb18af]
T: FirTransformer<Nothing?>

public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5681be04]
T: FirFile

protected final inline fun <T> withScopeCleanup(crossinline l: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirTypeResolveTransformer[SimpleFunctionDescriptorImpl@22123d41]
T: CompositeTransformResult<FirFile>

public open fun <R, D> accept(visitor: org.jetbrains.kotlin.fir.visitors.FirVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.fir.declarations.FirTypeParameter[DeserializedSimpleFunctionDescriptor@11027012]
R: CompositeTransformResult<FirElement>

protected final inline fun <T> withScopeCleanup(crossinline l: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirTypeResolveTransformer[SimpleFunctionDescriptorImpl@22123d41]
T: Unit

public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirRegularClass defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@300ec91f]
T: [@kotlin.internal.NoInfer] FirRegularClass

protected final inline fun <T> withScopeCleanup(crossinline l: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirTypeResolveTransformer[SimpleFunctionDescriptorImpl@22123d41]
T: CompositeTransformResult<FirDeclaration>

protected final inline fun <T> withScopeCleanup(crossinline l: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirTypeResolveTransformer[SimpleFunctionDescriptorImpl@22123d41]
T: CompositeTransformResult<FirDeclaration>

protected final inline fun <T> withScopeCleanup(crossinline l: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirTypeResolveTransformer[SimpleFunctionDescriptorImpl@22123d41]
T: CompositeTransformResult<FirDeclaration>

protected final inline fun <T> withScopeCleanup(crossinline l: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirTypeResolveTransformer[SimpleFunctionDescriptorImpl@22123d41]
T: CompositeTransformResult<FirDeclaration>

protected final inline fun <T> withScopeCleanup(crossinline l: () -> T): T defined in org.jetbrains.kotlin.fir.resolve.transformers.FirTypeResolveTransformer[SimpleFunctionDescriptorImpl@22123d41]
T: CompositeTransformResult<FirDeclaration>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: Nothing


public final operator fun component1(): org.jetbrains.kotlin.fir.declarations.FirTypeParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@beb5526]
A: FirTypeParameter

public final operator fun component2(): org.jetbrains.kotlin.fir.declarations.FirTypeParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4bb14899]
B: FirTypeParameter

public final operator fun component1(): org.jetbrains.kotlin.fir.types.FirTypeRef defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@733b3d87]
A: FirTypeRef

public final operator fun component2(): org.jetbrains.kotlin.fir.types.FirTypeRef defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6b8ffccb]
B: FirTypeRef

public final operator fun component1(): org.jetbrains.kotlin.fir.declarations.FirValueParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3a5596be]
A: FirValueParameter

public final operator fun component2(): org.jetbrains.kotlin.fir.declarations.FirValueParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@278f676b]
B: FirValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f30c929]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.fir.symbols.impl.FirCallableSymbol<*> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5727eaac]
T: FirCallableSymbol<*>




public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.impl.FirResolvedImportImpl defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7734c398]
T: FirResolvedImportImpl


public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.impl.FirResolvedImportImpl defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@21197f26]
T: FirResolvedImportImpl

public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirResolvedImport defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@34b47f0f]
T: FirResolvedImport


public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirResolvedImport defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@a1957b0]
T: FirResolvedImport

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5eb237df]
V: FirClassDeclaredMemberScope

public abstract operator fun next(): org.jetbrains.kotlin.fir.symbols.impl.FirCallableSymbol<*> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2e8faca5]
T: FirCallableSymbol<*>


public abstract operator fun next(): org.jetbrains.kotlin.fir.symbols.impl.FirCallableSymbol<*> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@dda50df]
T: FirCallableSymbol<*>



public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5eb237df]
V: FirFunctionSymbol<*>


@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@9a635b3]
R: FirValueParameterImpl

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@9a635b3]
R: FirValueParameterImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@163790ea]
T: FirMemberFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@9a635b3]
R: FirMemberFunctionImpl





public abstract fun next(): org.jetbrains.kotlin.fir.scopes.FirScope defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@48c4ba50]
T: FirScope

public abstract fun next(): org.jetbrains.kotlin.fir.scopes.FirScope defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@2882341d]
T: FirScope







public abstract operator fun next(): org.jetbrains.kotlin.fir.scopes.FirScope defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@636d5a47]
T: FirScope


public abstract operator fun next(): org.jetbrains.kotlin.fir.scopes.FirScope defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@67f10f3c]
T: FirScope


public abstract operator fun next(): org.jetbrains.kotlin.fir.symbols.impl.FirCallableSymbol<*> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@176475c6]
T: FirCallableSymbol<*>


public abstract operator fun next(): org.jetbrains.kotlin.fir.symbols.impl.FirCallableSymbol<*> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@53f4a3d3]
T: FirCallableSymbol<*>


public fun <T> kotlin.Array<out T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@38613203]
T: ConeKotlinTypeProjection

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.declarations.FirTypeParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2108ab85]
E: FirTypeParameter

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.declarations.FirTypeParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2306215a]
E: FirTypeParameter

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.types.FirTypeRef defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3ecc4d2e]
E: FirTypeRef

public final operator fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.types.ConeKotlinTypeProjection defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@77bcf139]
T: ConeKotlinTypeProjection

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4bb0f28a]
T: SimpleTypeMarker

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4bb0f28a]
T: KotlinTypeMarker

public final operator fun component1(): org.jetbrains.kotlin.fir.declarations.FirTypeParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@61f965bc]
A: FirTypeParameter

public final operator fun component2(): org.jetbrains.kotlin.fir.types.ConeKotlinTypeProjection defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@292a3f3e]
B: ConeKotlinTypeProjection

@kotlin.SinceKotlin @kotlin.internal.PlatformDependent public open fun getOrDefault(key: org.jetbrains.kotlin.fir.symbols.ConeClassLikeSymbol, defaultValue: kotlin.collections.List<org.jetbrains.kotlin.fir.types.ConeClassLikeType>): kotlin.collections.List<org.jetbrains.kotlin.fir.types.ConeClassLikeType> defined in kotlin.collections.Map[DeserializedSimpleFunctionDescriptor@eb406c5]
V: List<ConeClassLikeType>

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@9a635b3]
R: ConeClassLikeSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@9a635b3]
R: Int



public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3e32c57f]
T: FirFile

public open fun <R, D> accept(visitor: org.jetbrains.kotlin.fir.visitors.FirVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.fir.declarations.FirFile[DeserializedSimpleFunctionDescriptor@2283ff6c]
R: IrElement

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cb4821e]
V: IrExternalPackageFragment

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrValueParameterImpl

public abstract operator fun next(): org.jetbrains.kotlin.fir.types.FirTypeRef defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@445fa2c]
T: FirTypeRef

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.fir.declarations.FirTypeParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@31b33cd1]
T: IndexedValue<FirTypeParameter>

public final operator fun component2(): org.jetbrains.kotlin.fir.declarations.FirTypeParameter defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@476760a2]
T: FirTypeParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrTypeParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrClassImpl

public inline fun <K, V, VA : V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: (K) -> VA, postCompute: (VA) -> kotlin.Unit): V defined in org.jetbrains.kotlin.fir.resolve[DeserializedSimpleFunctionDescriptor@6e34de3b]
V: IrClass

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrClassImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrTypeParameterImpl

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cb4821e]
V: IrTypeParameter

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.fir.declarations.FirValueParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6ffd8bff]
T: IndexedValue<FirValueParameter>

public final operator fun component2(): org.jetbrains.kotlin.fir.declarations.FirValueParameter defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@e5e0cbf]
T: FirValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrValueParameterImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrValueParameterImpl

public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.fir.declarations.FirValueParameter, org.jetbrains.kotlin.ir.declarations.IrValueParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@24d30186]
T: Pair<FirValueParameter, IrValueParameter>

public final operator fun component1(): org.jetbrains.kotlin.fir.declarations.FirValueParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5393aa6c]
A: FirValueParameter

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@10ce82c]
B: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2cf3ebf1]
R: WrappedFunctionDescriptorWithContainerSource

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2cf3ebf1]
R: WrappedFunctionDescriptorWithContainerSource

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cb4821e]
V: IrConstructor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2cf3ebf1]
R: WrappedPropertyDescriptorWithContainerSource

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2cf3ebf1]
R: WrappedPropertyDescriptorWithContainerSource

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrPropertyImpl

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cb4821e]
V: IrProperty

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrFieldImpl

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4cb4821e]
V: IrField

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrValueParameterImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrVariableImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrConstructor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrProperty

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrField

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrProperty

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6bb3a16f]
T: Fir2IrCallableCache

public abstract fun removeAt(index: kotlin.Int): org.jetbrains.kotlin.fir.backend.Fir2IrCallableCache defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cbb83d1]
E: Fir2IrCallableCache

public abstract fun next(): org.jetbrains.kotlin.fir.backend.Fir2IrCallableCache defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@6ac35909]
T: Fir2IrCallableCache

public abstract fun next(): org.jetbrains.kotlin.fir.backend.Fir2IrCallableCache defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@57090534]
T: Fir2IrCallableCache

public abstract fun next(): org.jetbrains.kotlin.fir.backend.Fir2IrCallableCache defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@23dafbfe]
T: Fir2IrCallableCache

public abstract fun next(): org.jetbrains.kotlin.fir.backend.Fir2IrCallableCache defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@4f918b5d]
T: Fir2IrCallableCache

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6bb3a16f]
T: Fir2IrCallableCache

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6bb3a16f]
T: Fir2IrCallableCache

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6bb3a16f]
T: Fir2IrCallableCache

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6bb3a16f]
T: Fir2IrCallableCache

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@469c6a4a]
T: PackageFragmentDescriptor


public abstract fun removeAt(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrDeclarationParent defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@66ba1ae8]
E: IrDeclarationParent

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6bb3a16f]
T: IrDeclarationParent


public abstract fun removeAt(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrFunction defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4ccd62c3]
E: IrFunction


public abstract fun removeAt(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrProperty defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@39a7574f]
E: IrProperty


public abstract fun removeAt(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrClass defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@3d958da1]
E: IrClass

public abstract fun removeAt(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrVariable defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@6d2521da]
E: IrVariable

public open fun <R, D> accept(visitor: org.jetbrains.kotlin.fir.visitors.FirVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.fir.expressions.FirAnnotationCall[DeserializedSimpleFunctionDescriptor@3d5290b0]
R: IrElement

public open fun <R, D> accept(visitor: org.jetbrains.kotlin.fir.visitors.FirVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.fir.declarations.FirDeclaration[DeserializedSimpleFunctionDescriptor@3bfff26f]
R: IrElement

public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@79cd8b0a]
T: FirDeclaration

public abstract operator fun next(): org.jetbrains.kotlin.fir.types.FirTypeRef defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3a1832f5]
T: FirTypeRef

public abstract operator fun next(): org.jetbrains.kotlin.name.Name defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@73f585f0]
T: Name

public open fun <R, D> accept(visitor: org.jetbrains.kotlin.fir.visitors.FirVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.fir.declarations.FirConstructor[DeserializedSimpleFunctionDescriptor@2a55db44]
R: IrElement

public open fun <R, D> accept(visitor: org.jetbrains.kotlin.fir.visitors.FirVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.fir.expressions.FirAnnotationCall[DeserializedSimpleFunctionDescriptor@3d5290b0]
R: IrElement

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.fir.declarations.FirTypeParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@233232ee]
T: IndexedValue<FirTypeParameter>

public final operator fun component2(): org.jetbrains.kotlin.fir.declarations.FirTypeParameter defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@125c373b]
T: FirTypeParameter

public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.ir.declarations.IrValueParameter, org.jetbrains.kotlin.fir.declarations.FirValueParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2009d811]
T: Pair<IrValueParameter, FirValueParameter>

public final operator fun component1(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@45e3c132]
A: IrValueParameter

public final operator fun component2(): org.jetbrains.kotlin.fir.declarations.FirValueParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@159d5db4]
B: FirValueParameter

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6bb3a16f]
T: IrDeclarationParent

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6bb3a16f]
T: IrDeclarationParent

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrAnonymousInitializer

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6017798f]
R: TypeConstructorMarker

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.fir.expressions.FirExpression> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@163c0fa9]
T: IndexedValue<FirExpression>

public final operator fun component2(): org.jetbrains.kotlin.fir.expressions.FirExpression defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@3789c1a5]
T: FirExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrDelegatingConstructorCallImpl

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6bb3a16f]
T: IrDeclarationParent

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrVariable

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2cf3ebf1]
R: IrExpressionBodyImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2cf3ebf1]
R: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2cf3ebf1]
R: IrSimpleFunction

public open fun <R, D> accept(visitor: org.jetbrains.kotlin.fir.visitors.FirVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.fir.expressions.FirAnnotationCall[DeserializedSimpleFunctionDescriptor@3d5290b0]
R: IrElement

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6017798f]
R: Unit

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@469c6a4a]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrSetFieldImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrFunctionImpl

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6bb3a16f]
T: IrProperty

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6bb3a16f]
T: IrFunction

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrFunction defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@2bd9d5ff]
T: IrFunction

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.fir.expressions.FirExpression> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@44cc721c]
T: IndexedValue<FirExpression>

public final operator fun component2(): org.jetbrains.kotlin.fir.expressions.FirExpression defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@40cb1000]
T: FirExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrCallWithIndexedArgumentsBase

public abstract operator fun next(): org.jetbrains.kotlin.fir.expressions.FirExpression defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7c9fea43]
T: FirExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrErrorCallExpressionImpl

public abstract operator fun next(): org.jetbrains.kotlin.fir.expressions.FirExpression defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@60b932f8]
T: FirExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrErrorCallExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrSetFieldImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrSetFieldImpl

public fun <T> kotlin.sequences.Sequence<T>.first(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@324e0dbe]
T: IrConstructor

public open fun <R, D> accept(visitor: org.jetbrains.kotlin.fir.visitors.FirVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.fir.expressions.FirStatement[DeserializedSimpleFunctionDescriptor@3ce9eea1]
R: IrElement

public open fun <R, D> accept(visitor: org.jetbrains.kotlin.fir.visitors.FirVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.fir.expressions.FirExpression[DeserializedSimpleFunctionDescriptor@2273ae0]
R: IrElement

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@33b03e80]
T: FirStatement

public open fun <R, D> accept(visitor: org.jetbrains.kotlin.fir.visitors.FirVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.fir.expressions.FirVariable[DeserializedSimpleFunctionDescriptor@ba699d8]
R: IrElement

public abstract operator fun next(): org.jetbrains.kotlin.fir.expressions.FirWhenBranch defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2d3bd99e]
T: FirWhenBranch

public open fun <R, D> accept(visitor: org.jetbrains.kotlin.fir.visitors.FirVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.fir.expressions.FirWhenBranch[DeserializedSimpleFunctionDescriptor@5c61c5b]
R: IrElement

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrWhenImpl

private final fun <T> org.jetbrains.kotlin.ir.declarations.IrVariable?.withSubject(f: () -> T): T defined in org.jetbrains.kotlin.fir.backend.Fir2IrVisitor[SimpleFunctionDescriptorImpl@6ae928e1]
T: IrExpressionBase

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6bb3a16f]
T: IrVariable

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrDoWhileLoopImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrWhileLoopImpl


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrBreakContinueBase

public open fun <R, D> accept(visitor: org.jetbrains.kotlin.fir.visitors.FirVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.fir.expressions.FirCatch[DeserializedSimpleFunctionDescriptor@6c1194d0]
R: IrElement

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@230268ab]
T: IrCatchImpl

public final operator fun component2(): org.jetbrains.kotlin.ir.expressions.IrStatementOriginImpl defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@17e80385]
B: IrStatementOriginImpl

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.expressions.FirExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@92842e3]
E: FirExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.expressions.FirExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@92842e3]
E: FirExpression

public final operator fun component1(): org.jetbrains.kotlin.ir.types.IrType defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@5021ee38]
A: IrType

public final operator fun component2(): org.jetbrains.kotlin.ir.symbols.IrSimpleFunctionSymbol defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@afd5b2]
B: IrSimpleFunctionSymbol

public final operator fun component3(): org.jetbrains.kotlin.ir.expressions.IrStatementOriginImpl defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@306b24d8]
C: IrStatementOriginImpl

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.expressions.FirExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@92842e3]
E: FirExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.expressions.FirExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@92842e3]
E: FirExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.expressions.FirExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@92842e3]
E: FirExpression

public final operator fun component1(): org.jetbrains.kotlin.ir.types.IrType defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@38375dc8]
A: IrType

public final operator fun component2(): org.jetbrains.kotlin.ir.expressions.IrTypeOperator defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3941932]
B: IrTypeOperator

public open fun visitResolvedQualifier(resolvedQualifier: org.jetbrains.kotlin.fir.expressions.FirResolvedQualifier, data: kotlin.Any?): org.jetbrains.kotlin.ir.IrElement defined in org.jetbrains.kotlin.fir.visitors.FirVisitor[DeserializedSimpleFunctionDescriptor@3f288ea1]
R: IrElement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b68e3e5]
R: FirClassDeclaredMemberScope

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6eeffc9f]
T: Map<Name, List<Int>>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6eeffc9f]
T: Map<Name, List<Int>>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6eeffc9f]
T: Map<Name, List<Int>>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6eeffc9f]
T: Map<Name, List<Int>>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6eeffc9f]
T: Map<Name, List<Int>>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6eeffc9f]
T: Map<Name, List<Int>>


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: JavaClassFinderImpl

public abstract operator fun next(): org.jetbrains.kotlin.load.java.structure.JavaClassifierType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4e97e030]
T: JavaClassifierType

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.load.java.structure.JavaTypeParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5f90c5d7]
E: JavaTypeParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@37ebb39]
T: List<FirTypeParameter>

public abstract operator fun next(): org.jetbrains.kotlin.load.java.structure.JavaClassifierType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1468696b]
T: JavaClassifierType

public abstract operator fun next(): org.jetbrains.kotlin.load.java.structure.JavaField defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@78050b17]
T: JavaField

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: FirJavaField

public abstract operator fun next(): org.jetbrains.kotlin.load.java.structure.JavaMethod defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@44ad3cfd]
T: JavaMethod

public abstract operator fun next(): org.jetbrains.kotlin.load.java.structure.JavaValueParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@155158f5]
T: JavaValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: FirJavaMethod

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: FirJavaConstructor

public abstract operator fun next(): org.jetbrains.kotlin.load.java.structure.JavaConstructor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@65b4f7e0]
T: JavaConstructor

public abstract operator fun next(): org.jetbrains.kotlin.load.java.structure.JavaValueParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6f6d5c0]
T: JavaValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: FirJavaConstructor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: FirJavaClass

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b68e3e5]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@726668e7]
R: ConeLookupTagBasedType

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@726668e7]
R: ConeLookupTagBasedType

public abstract operator fun next(): org.jetbrains.kotlin.load.java.structure.JavaAnnotationArgument defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5dcfae3c]
T: JavaAnnotationArgument

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: FirAnnotationCallImpl

public abstract operator fun next(): org.jetbrains.kotlin.load.java.structure.JavaAnnotation defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5f498899]
T: JavaAnnotation

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: FirJavaValueParameter

public abstract operator fun next(): org.jetbrains.kotlin.load.java.structure.JavaAnnotationArgument defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5f078d14]
T: JavaAnnotationArgument

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: FirArrayOfCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b68e3e5]
R: FirResolvedCallableReferenceImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b68e3e5]
R: FirResolvedCallableReferenceImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: FirFunctionCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: FirGetClassCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: FirArrayOfCallImpl

public final operator fun component1(): org.jetbrains.kotlin.metadata.jvm.deserialization.JvmNameResolver defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@554a2ff8]
A: JvmNameResolver

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.Package defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@56719f18]
B: Package

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b68e3e5]
R: FirResolvedTypeRefImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b68e3e5]
R: FirResolvedTypeRefImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: FirFunctionCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: FirGetClassCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: FirArrayOfCallImpl

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4654cfa8]
T: FirAnnotationCall

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<org.jetbrains.kotlin.name.Name, org.jetbrains.kotlin.fir.expressions.FirExpression> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@23fdb6b6]
T: MutableEntry<Name, FirExpression>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73fecd24]
K: Name

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@60b2e9b0]
V: FirExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: FirAnnotationCallImpl

public final operator fun component1(): org.jetbrains.kotlin.metadata.jvm.deserialization.JvmNameResolver defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@78d29f24]
A: JvmNameResolver

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.Class defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@12747996]
B: Class

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@52ad62a2]
V: Collection<PackagePartsCacheData>

@kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.getOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> T): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@68350a15]
T: JavaTypeQualifiers

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b68e3e5]
R: IndexedJavaTypeQualifiers


public abstract operator fun next(): org.jetbrains.kotlin.fir.types.FirTypeProjection defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@65bed2f5]
T: FirTypeProjection

public final operator fun component1(): org.jetbrains.kotlin.fir.types.ConeKotlinType defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4d581345]
A: ConeKotlinType

public final operator fun component2(): org.jetbrains.kotlin.fir.types.ConeKotlinType defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5595988b]
B: ConeKotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b68e3e5]
R: NullabilityQualifierWithMigrationStatus

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b68e3e5]
R: NullabilityQualifierWithMigrationStatus

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.java.enhancement.TypeAndDefaultQualifiers defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@76d0eb36]
E: TypeAndDefaultQualifiers

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2e312b3f]
R: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b68e3e5]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b68e3e5]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b68e3e5]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b68e3e5]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@388561d4]
R: ReportLevel

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b68e3e5]
R: EnumMap<QualifierApplicabilityType, NullabilityQualifierWithMigrationStatus?>

public abstract operator fun next(): org.jetbrains.kotlin.load.java.lazy.NullabilityQualifierWithApplicability defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5b09e3fb]
T: NullabilityQualifierWithApplicability

public abstract operator fun next(): org.jetbrains.kotlin.load.java.AnnotationTypeQualifierResolver.QualifierApplicabilityType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6e1e86a2]
T: QualifierApplicabilityType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b68e3e5]
R: ClassId

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b68e3e5]
R: ClassId

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: FirQualifiedAccessExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: FirQualifiedAccessExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b68e3e5]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b68e3e5]
R: Nothing

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@52ad62a2]
V: FirCallableSymbol<*>


public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@52ad62a2]
V: FirCallableSymbol<*>


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: FirJavaField

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@388561d4]
R: FirJavaField

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b68e3e5]
R: Unit

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.fir.declarations.FirValueParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@37cf4f11]
T: IndexedValue<FirValueParameter>

public final operator fun component2(): org.jetbrains.kotlin.fir.declarations.FirValueParameter defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@45c92aca]
T: FirValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: FirValueParameterImpl

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@388561d4]
R: FirValueParameterImpl

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@388561d4]
R: FirValueParameterImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: FirConstructorImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: FirMemberFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2c0e880b]
T: FirAbstractCallableMember<out FirCallableMemberDeclaration<out FirCallableMemberDeclaration<out FirCallableMemberDeclaration<out FirCallableMemberDeclaration<out FirCallableMemberDeclaration<out Any?>>>>>>

public abstract operator fun next(): org.jetbrains.kotlin.fir.declarations.FirValueParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1cb58f09]
T: FirValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b68e3e5]
R: FirJavaEnhancementContext

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b68e3e5]
R: FirJavaEnhancementContext

public final operator fun component1(): org.jetbrains.kotlin.fir.symbols.impl.FirCallableSymbol<*> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@19617d44]
A: FirCallableSymbol<*>

public final operator fun component1(): org.jetbrains.kotlin.fir.symbols.impl.FirCallableSymbol<*> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@19617d44]
A: FirCallableSymbol<*>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@52ad62a2]
V: Map<FirCallableSymbol<*>?, List<FirCallableSymbol<*>>>

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.declarations.FirValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@269c3aa0]
E: FirValueParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.declarations.FirValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@269c3aa0]
E: FirValueParameter

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.fir.declarations.FirValueParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6627f9ee]
E: FirValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@388561d4]
R: Nothing

public final operator fun component1(): org.jetbrains.kotlin.fir.declarations.FirTypeParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4f6708f2]
A: FirTypeParameter

public final operator fun component2(): org.jetbrains.kotlin.fir.declarations.FirTypeParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@366e1f09]
B: FirTypeParameter

public final operator fun component1(): org.jetbrains.kotlin.fir.types.FirTypeRef defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6d066d89]
A: FirTypeRef

public final operator fun component2(): org.jetbrains.kotlin.fir.types.FirTypeRef defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@509baefb]
B: FirTypeRef

public final operator fun component1(): org.jetbrains.kotlin.fir.declarations.FirValueParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@193ecc4]
A: FirValueParameter

public final operator fun component2(): org.jetbrains.kotlin.fir.types.FirTypeRef defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@75a2ad5d]
B: FirTypeRef

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4654cfa8]
T: FirValueParameter




@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b68e3e5]
R: Unit



@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@34bcf93]
R: Visibility

public abstract fun next(): org.jetbrains.kotlin.fir.declarations.FirFunction defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@1646b663]
T: FirFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirReturnExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirTypeParameterImpl


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirFunctionCallImpl


public abstract fun next(): org.jetbrains.kotlin.fir.expressions.FirLoop defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@4254377d]
T: FirLoop


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirStringConcatenationCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirStringConcatenationCallImpl


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirFunctionCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirBlockImpl


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirArraySetCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirFunctionCallImpl


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirArraySetCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirArraySetCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirBlockImpl


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirVariableAssignmentImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirBlockImpl


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirVariableAssignmentImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirOperatorCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirWhenExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirWhenExpressionImpl


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirOperatorCallImpl



@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirTypeOperatorCallImpl

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtWhenCondition defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@625ee198]
T: KtWhenCondition

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirFunctionCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirFunctionCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirQualifiedAccessExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirQualifiedAccessExpressionImpl

public abstract operator fun next(): kotlin.collections.IndexedValue<(org.jetbrains.kotlin.psi.KtDestructuringDeclarationEntry..org.jetbrains.kotlin.psi.KtDestructuringDeclarationEntry?)> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@341ff9d3]
T: IndexedValue<(org.jetbrains.kotlin.psi.KtDestructuringDeclarationEntry..org.jetbrains.kotlin.psi.KtDestructuringDeclarationEntry?)>



@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirVariableImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirBlockImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirVariableImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirQualifiedAccessExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirQualifiedAccessExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirCallableReferenceAccessImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirFunctionCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirFunctionCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirReturnExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirPropertyAccessorImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirQualifiedAccessExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirFunctionCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirPropertyAccessorImpl

public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.psi.KtParameter?, org.jetbrains.kotlin.fir.declarations.FirProperty> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@17be2467]
T: Pair<KtParameter?, FirProperty>

public final operator fun component2(): org.jetbrains.kotlin.fir.declarations.FirProperty defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2137a9e8]
B: FirProperty

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirQualifiedAccessExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirReturnExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirMemberFunctionImpl

public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.psi.KtParameter?, org.jetbrains.kotlin.fir.declarations.FirProperty> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@748c63e1]
T: Pair<KtParameter?, FirProperty>

public final operator fun component2(): org.jetbrains.kotlin.fir.declarations.FirProperty defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@440e0b13]
B: FirProperty

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirQualifiedAccessExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirMemberFunctionImpl

public open fun <R, D> accept(visitor: org.jetbrains.kotlin.psi.KtVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.psi.KtFile[DeserializedSimpleFunctionDescriptor@2a6d6147]
R: FirElement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.psi.KtVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.psi.KtElement[DeserializedSimpleFunctionDescriptor@f5984b2]
R: FirElement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.psi.KtVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.psi.KtElement[DeserializedSimpleFunctionDescriptor@f5984b2]
R: FirElement

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@34bcf93]
R: FirExpression

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@34bcf93]
R: FirExpression

public abstract fun <R : (kotlin.Any..kotlin.Any?), D : (kotlin.Any..kotlin.Any?)> accept(@org.jetbrains.annotations.NotNull visitor: org.jetbrains.kotlin.psi.KtVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.psi.KtExpression[JavaMethodDescriptor@38622707]
R: FirElement

public open fun <R : (kotlin.Any..kotlin.Any?), D : (kotlin.Any..kotlin.Any?)> accept(@org.jetbrains.annotations.NotNull visitor: org.jetbrains.kotlin.psi.KtVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.psi.KtBlockExpression[JavaMethodDescriptor@55c7609f]
R: FirElement

public abstract fun <R : (kotlin.Any..kotlin.Any?), D : (kotlin.Any..kotlin.Any?)> accept(@org.jetbrains.annotations.NotNull visitor: org.jetbrains.kotlin.psi.KtVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.psi.KtExpression[JavaMethodDescriptor@38622707]
R: FirElement

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirQualifiedAccessExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirMemberPropertyImpl

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtSuperTypeListEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@268da97c]
T: KtSuperTypeListEntry

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirDelegatedConstructorCallImpl

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtAnnotationEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6615192]
T: KtAnnotationEntry

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtImportDirective defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@45f5beb0]
T: KtImportDirective

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@508d5f2c]
R: Name

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@508d5f2c]
R: Name

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@47454bf2]
T: KtDeclaration

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@b3d3be4]
T: KtDeclaration

public final inline fun <T> withChildClassName(name: org.jetbrains.kotlin.name.Name, l: () -> T): T defined in org.jetbrains.kotlin.fir.builder.RawFirBuilder[SimpleFunctionDescriptorImpl@5fbe0dcd]
T: FirEnumEntryImpl

public final operator fun component2(): org.jetbrains.kotlin.fir.declarations.FirValueParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@77c242f3]
B: FirValueParameter

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4eb4621c]
T: KtDeclaration

public final inline fun <T> withChildClassName(name: org.jetbrains.kotlin.name.Name, l: () -> T): T defined in org.jetbrains.kotlin.fir.builder.RawFirBuilder[SimpleFunctionDescriptorImpl@5fbe0dcd]
T: FirClassImpl

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@13c9d234]
T: FirTypeRef

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@639a561f]
T: KtDeclaration

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirAnonymousObjectImpl

public final inline fun <T> withChildClassName(name: org.jetbrains.kotlin.name.Name, l: () -> T): T defined in org.jetbrains.kotlin.fir.builder.RawFirBuilder[SimpleFunctionDescriptorImpl@5fbe0dcd]
T: FirTypeAliasImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@508d5f2c]
R: FirLabelImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@508d5f2c]
R: FirLabelImpl

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.fir.expressions.FirStatement> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@22a7f65f]
T: IndexedValue<FirStatement>

public final operator fun component2(): org.jetbrains.kotlin.fir.expressions.FirStatement defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@e4cfb2c]
T: FirStatement

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirAnonymousFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirDelegatedConstructorCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@508d5f2c]
R: FirWrappedDelegateExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@508d5f2c]
R: FirWrappedDelegateExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirVariableImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirMemberPropertyImpl

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtAnnotationEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@622ed8fa]
T: KtAnnotationEntry

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirBlockImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirTryExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirWhenExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirWhenExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirFunctionCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirFunctionCallImpl

public abstract fun <R : (kotlin.Any..kotlin.Any?), D : (kotlin.Any..kotlin.Any?)> accept(@org.jetbrains.annotations.NotNull visitor: org.jetbrains.kotlin.psi.KtVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.psi.KtExpression[JavaMethodDescriptor@38622707]
R: FirElement

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirBlockImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirFunctionCallImpl

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.fir.expressions.FirStatement> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@60ea7bd9]
T: IndexedValue<FirStatement>

public final operator fun component2(): org.jetbrains.kotlin.fir.expressions.FirStatement defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@15e3c893]
T: FirStatement

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirBlockImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirFunctionCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirOperatorCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirTypeOperatorCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirTypeOperatorCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirFunctionCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirOperatorCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirFunctionCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirFunctionCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirQualifiedAccessExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirQualifiedAccessExpressionImpl

public abstract fun <R : (kotlin.Any..kotlin.Any?), D : (kotlin.Any..kotlin.Any?)> accept(@org.jetbrains.annotations.NotNull visitor: org.jetbrains.kotlin.psi.KtVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.psi.KtExpression[JavaMethodDescriptor@38622707]
R: FirElement

public abstract fun <R : (kotlin.Any..kotlin.Any?), D : (kotlin.Any..kotlin.Any?)> accept(@org.jetbrains.annotations.NotNull visitor: org.jetbrains.kotlin.psi.KtVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.psi.KtExpression[JavaMethodDescriptor@38622707]
R: FirElement

public abstract fun <R : (kotlin.Any..kotlin.Any?), D : (kotlin.Any..kotlin.Any?)> accept(@org.jetbrains.annotations.NotNull visitor: org.jetbrains.kotlin.psi.KtVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.psi.KtExpression[JavaMethodDescriptor@38622707]
R: FirElement

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirGetClassCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirCallableReferenceAccessImpl

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtExpression defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@e5e7686]
T: KtExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1f12aa1b]
T: FirArrayOfCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: SymbolBasedAnnotation

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.read(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@2cc9aac0]
T: Unit

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: Sequence<JavaRoot>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: Sequence<JavaRoot>



public abstract operator fun getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@79f2fc70]
T: BindingContext

public abstract operator fun getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): org.jetbrains.kotlin.resolve.BindingContext defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@2c3c212a]
T: BindingContext

public abstract operator fun getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): TypeVariable(T) defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@24f69e43]
T: ModuleDescriptor

public abstract operator fun getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): org.jetbrains.kotlin.descriptors.ModuleDescriptor defined in kotlin.properties.ReadWriteProperty[DeserializedSimpleFunctionDescriptor@780f2df1]
T: ModuleDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: CompilerConfiguration

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: MutableList<VirtualFile>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: List<JavaRoot>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: List<JavaRoot>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: Cache

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: Cache

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: Cache

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: Cache

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: Array<THashMap<String, VirtualFile?>>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: Array<THashMap<String, VirtualFile?>>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: JavaLexer

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: SymbolBasedClassifierType<(javax.lang.model.type.TypeMirror..javax.lang.model.type.TypeMirror?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: TreeBasedPackage

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: TreeBasedPackage

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: KotlinClassifiersCache

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: KotlinClassifiersCache

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: MockKotlinClassifier

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: List<SymbolBasedTypeParameter>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: List<SymbolBasedTypeParameter>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: ArrayList<TypeMirror>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: ArrayList<SymbolBasedClassifierType<TypeMirror>>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: ArrayList<SymbolBasedClassifierType<TypeMirror>>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: ArrayList<TypeMirror>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: ArrayList<SymbolBasedClassifierType<TypeMirror>>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: ArrayList<SymbolBasedClassifierType<TypeMirror>>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: MutableList<out (javax.lang.model.element.Element..javax.lang.model.element.Element?)>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: MutableList<out (javax.lang.model.element.Element..javax.lang.model.element.Element?)>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: Map<Name, SymbolBasedClass>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: Map<Name, SymbolBasedClass>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: JavaAnnotationArgument

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: Map<FqName?, JavaAnnotation>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: Map<FqName?, JavaAnnotation>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: SymbolBasedField

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: SymbolBasedField

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: JavaClass

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: JavaClass

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: JavaClass

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: JavaClass

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: SymbolBasedType<TypeMirror>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: List<TreeBasedAnnotation>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: List<TreeBasedAnnotation>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6dd1e05d]
T: ArrayList<JavaClassifierType>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: ArrayList<JavaClassifierType>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6dd1e05d]
T: ArrayList<JavaClassifierType>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: ArrayList<JavaClassifierType>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: Map<Name, TreeBasedClass>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: Map<Name, TreeBasedClass>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: List<TreeBasedAnnotation>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: List<TreeBasedAnnotation>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: Map<FqName?, JavaAnnotation>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: Map<FqName?, JavaAnnotation>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: List<TreeBasedAnnotation>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: List<TreeBasedAnnotation>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: List<TreeBasedAnnotation>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@35336b77]
T: List<TreeBasedAnnotation>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: JavaType

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: ArrayList<JavaClass>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: MutableList<JavaAnnotation>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: MutableList<JavaType?>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@3463aafc]
T: MessageCollector

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Visibility

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: Properties

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Properties

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Properties

private final fun <T> T?.assertNotNull(lazyMessage: () -> kotlin.String): T defined in org.jetbrains.kotlin.cli.jvm.JvmRuntimeVersionsConsistencyChecker[SimpleFunctionDescriptorImpl@47195f55]
T: String

private final fun <T> T?.assertNotNull(lazyMessage: () -> kotlin.String): T defined in org.jetbrains.kotlin.cli.jvm.JvmRuntimeVersionsConsistencyChecker[SimpleFunctionDescriptorImpl@47195f55]
T: String

private final fun <T> T?.assertNotNull(lazyMessage: () -> kotlin.String): T defined in org.jetbrains.kotlin.cli.jvm.JvmRuntimeVersionsConsistencyChecker[SimpleFunctionDescriptorImpl@47195f55]
T: String

private final fun <T> T?.assertNotNull(lazyMessage: () -> kotlin.String): T defined in org.jetbrains.kotlin.cli.jvm.JvmRuntimeVersionsConsistencyChecker[SimpleFunctionDescriptorImpl@47195f55]
T: String

public abstract operator fun next(): org.jetbrains.kotlin.extensions.CompilerConfigurationExtension defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4101165c]
T: CompilerConfigurationExtension

public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.cli.jvm.index.JavaRoot> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@68fa0049]
A: List<JavaRoot>

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.cli.jvm.index.JavaRoot> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5180b927]
B: List<JavaRoot>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: JvmDependenciesDynamicCompoundIndex

public abstract operator fun next(): org.jetbrains.kotlin.cli.jvm.index.JavaRoot defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@66e56cc0]
T: JavaRoot

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: CompilerConfiguration


public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@5ad0b857]
T: String

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6dd1e05d]
T: GroupingMessageCollector

public abstract fun next(): kotlin.String defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@2687e6ab]
T: String

public abstract fun next(): kotlin.String defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@54456798]
T: String

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<kotlin.String, kotlin.String> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@6718c30f]
T: MutableEntry<String, String>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5bce02ef]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@451ed634]
V: String

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<kotlin.String, kotlin.String> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@7909987b]
T: MutableEntry<String, String>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5bce02ef]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@451ed634]
V: String

public abstract fun next(): kotlin.String defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@6a7b82d7]
T: String

public abstract fun next(): kotlin.String defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@410a5614]
T: String

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@3463aafc]
T: MessageCollector


@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@3463aafc]
T: MessageCollector

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6dd1e05d]
T: KotlinPaths

public abstract fun next(): kotlin.String defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@67979513]
T: String

public abstract fun next(): kotlin.String defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@42bd808a]
T: String

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<kotlin.String, kotlin.String> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@64c10aa8]
T: MutableEntry<String, String>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5bce02ef]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@451ed634]
V: String

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<kotlin.String, kotlin.String> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@7f3189fc]
T: MutableEntry<String, String>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5bce02ef]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@451ed634]
V: String

public abstract fun next(): kotlin.String defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@5436aa80]
T: String

public abstract fun next(): kotlin.String defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@7d86ef9]
T: String

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6dd1e05d]
T: PhaseConfig


public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3c612954]
T: String

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@11fc60f3]
T: KtFile


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: CompilerMessageLocation

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3cc24a3d]
T: Module

public abstract operator fun next(): org.jetbrains.kotlin.backend.common.output.OutputFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@78aa49cc]
T: OutputFile

public abstract operator fun invoke(file: @kotlin.ParameterName org.jetbrains.kotlin.backend.common.output.OutputFile, sources: @kotlin.ParameterName kotlin.collections.List<java.io.File>, output: @kotlin.ParameterName java.io.File): kotlin.Unit defined in kotlin.Function3[FunctionInvokeDescriptor@8552ff]
R: Unit

@org.jetbrains.annotations.NotNull public open operator fun <T : (kotlin.Any..kotlin.Any?)> get(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>, @org.jetbrains.annotations.NotNull p1: T): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@ddf0fdf]
T: MessageCollector

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4bc0a840]
T: KtFile



public abstract operator fun next(): org.jetbrains.kotlin.cli.jvm.JvmRuntimeVersionsConsistencyChecker.KotlinLibraryFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@dfd3f82]
T: KotlinLibraryFile

public abstract fun <T> getFlag(flag: org.jetbrains.kotlin.config.AnalysisFlag<T>): T defined in org.jetbrains.kotlin.config.LanguageVersionSettings[DeserializedSimpleFunctionDescriptor@22142662]
T: Boolean

public abstract operator fun next(): org.jetbrains.kotlin.cli.jvm.JvmRuntimeVersionsConsistencyChecker.KotlinLibraryFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2ecd666e]
T: KotlinLibraryFile

public abstract operator fun next(): org.jetbrains.kotlin.cli.jvm.JvmRuntimeVersionsConsistencyChecker.KotlinLibraryFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7f3d2dbf]
T: KotlinLibraryFile

public abstract operator fun next(): com.intellij.openapi.vfs.VirtualFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6c4cf0f3]
T: VirtualFile

public abstract operator fun next(): org.jetbrains.kotlin.cli.jvm.JvmRuntimeVersionsConsistencyChecker.KotlinLibraryFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@c8bed5e]
T: KotlinLibraryFile

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: File

public abstract operator fun next(): com.intellij.openapi.vfs.VirtualFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@420ae0ce]
T: VirtualFile

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Manifest

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Manifest

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@3463aafc]
T: MessageCollector

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: File

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: File

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4c1daa1a]
T: String

public final operator fun component1(): kotlin.collections.List<java.io.File> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@164fa3a2]
A: List<File>

public final operator fun component2(): kotlin.collections.List<java.io.File> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@45a24a12]
B: List<File>

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@3463aafc]
T: MessageCollector

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6d98af9]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: K2JVMCompilerArguments

public abstract operator fun next(): org.jetbrains.kotlin.cli.common.config.ContentRoot defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1cf8938f]
T: ContentRoot

public abstract operator fun next(): org.jetbrains.kotlin.cli.jvm.compiler.ClasspathRootsResolver.RootWithPrefix defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@58ee0e38]
T: RootWithPrefix

public abstract operator fun next(): com.intellij.openapi.vfs.VirtualFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@126e230f]
T: VirtualFile

public abstract operator fun next(): com.intellij.openapi.vfs.VirtualFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5951c0be]
T: VirtualFile

public final operator fun component1(): com.intellij.openapi.vfs.VirtualFile defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3f054edd]
A: VirtualFile

public final operator fun component2(): com.intellij.psi.PsiJavaModule defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4ac8d777]
B: PsiJavaModule

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Manifest

public abstract operator fun next(): org.jetbrains.kotlin.resolve.jvm.modules.JavaModule.Explicit defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@c9bba03]
T: [@kotlin.internal.NoInfer] Explicit

public abstract operator fun next(): org.jetbrains.kotlin.resolve.jvm.modules.JavaModule defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@581d3a55]
T: JavaModule

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: VirtualFile

public abstract operator fun next(): org.jetbrains.kotlin.resolve.jvm.modules.JavaModule defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4cf59ab6]
T: JavaModule

public abstract fun next(): kotlin.String defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@303646da]
T: String

public abstract operator fun next(): org.jetbrains.kotlin.resolve.jvm.modules.JavaModule.Root defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@57b5028c]
T: Root

public abstract operator fun next(): kotlin.collections.Map.Entry<kotlin.String, org.jetbrains.kotlin.resolve.jvm.modules.JavaModule.Explicit> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@878f38f]
T: Entry<String, Explicit>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5bce02ef]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@451ed634]
V: Explicit

public abstract operator fun next(): kotlin.collections.Map.Entry<kotlin.String, org.jetbrains.kotlin.resolve.jvm.modules.JavaModule.Explicit> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@de5c6a5]
T: Entry<String, Explicit>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5bce02ef]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@451ed634]
V: Explicit

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5bce02ef]
K: FqName

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@451ed634]
V: List<KtFile>

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5b029705]
T: KtFile

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3e9ce916]
T: KtDeclaration




@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Nothing

public abstract operator fun next(): kotlin.collections.Map.Entry<com.intellij.openapi.vfs.VirtualFile, org.jetbrains.kotlin.metadata.jvm.deserialization.PackageParts> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@11a6b43a]
T: Entry<VirtualFile, PackageParts>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5bce02ef]
K: VirtualFile

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@451ed634]
V: PackageParts

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@608aaa31]
T: String

public abstract fun next(): org.jetbrains.kotlin.cli.jvm.compiler.JvmPackagePartProvider.ModuleMappingInfo defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@570e0863]
T: ModuleMappingInfo

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.cli.jvm.index.JavaRoot defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1fc0707]
T: JavaRoot

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6dd1e05d]
T: ByteArrayOutputStream

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: JavaClassImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit


public final fun <T> time(block: () -> T): T defined in org.jetbrains.kotlin.util.PerformanceCounter[DeserializedSimpleFunctionDescriptor@249ec3ac]
T: Array<PsiClass>

public abstract operator fun next(): org.jetbrains.kotlin.name.ClassId defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4ccd69ae]
T: ClassId


@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6d98af9]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.extensions.CollectAdditionalSourcesExtension defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4c1d1b0c]
T: CollectAdditionalSourcesExtension

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@3463aafc]
T: MessageCollector

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: JvmPackagePartProvider

public abstract fun next(): org.jetbrains.kotlin.cli.jvm.compiler.JvmPackagePartProvider defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@1b80b711]
T: JvmPackagePartProvider

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@3463aafc]
T: MessageCollector

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: List<File>

public abstract operator fun next(): org.jetbrains.kotlin.cli.common.config.KotlinSourceRoot defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5a46e739]
T: KotlinSourceRoot

@kotlin.internal.InlineOnly public inline fun <R> synchronized(lock: kotlin.Any, block: () -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2ef3087]
R: Int

@kotlin.internal.InlineOnly public inline fun <R> synchronized(lock: kotlin.Any, block: () -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2ef3087]
R: Int

@kotlin.internal.InlineOnly public inline fun <R> synchronized(lock: kotlin.Any, block: () -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2ef3087]
R: Unit

@kotlin.internal.InlineOnly public inline fun <R> synchronized(lock: kotlin.Any, block: () -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2ef3087]
R: Unit

@kotlin.internal.InlineOnly public inline fun <R> synchronized(lock: kotlin.Any, block: () -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2ef3087]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <R> synchronized(lock: kotlin.Any, block: () -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2ef3087]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@5217ff3e]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@5217ff3e]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: File

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6d98af9]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6d98af9]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6d98af9]
R: Unit

public final operator fun component1(): java.io.File defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@42c30aeb]
A: File

public final operator fun component2(): kotlin.collections.List<java.io.File> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@399c3902]
B: List<File>

@org.jetbrains.annotations.NotNull public open operator fun <T : (kotlin.Any..kotlin.Any?)> get(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>, @org.jetbrains.annotations.NotNull p1: T): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@ddf0fdf]
T: MessageCollector

@org.jetbrains.annotations.NotNull public open operator fun <T : (kotlin.Any..kotlin.Any?)> get(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>, @org.jetbrains.annotations.NotNull p1: T): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@ddf0fdf]
T: Boolean

@org.jetbrains.annotations.NotNull public open operator fun <T : (kotlin.Any..kotlin.Any?)> get(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>, @org.jetbrains.annotations.NotNull p1: T): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@ddf0fdf]
T: Boolean

public final operator fun component1(): kotlin.collections.List<com.intellij.openapi.vfs.VirtualFile> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@640ab46c]
A: List<VirtualFile>

public final operator fun component2(): kotlin.collections.List<com.intellij.openapi.vfs.VirtualFile> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@30d4bc47]
B: List<VirtualFile>

public abstract operator fun next(): org.jetbrains.kotlin.modules.Module defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@30089a18]
T: Module

public abstract operator fun next(): org.jetbrains.kotlin.modules.Module defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1ba07222]
T: Module

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.modules.Module, org.jetbrains.kotlin.codegen.state.GenerationState> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5ddd1897]
T: Entry<Module, GenerationState>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5bce02ef]
K: Module

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@451ed634]
V: GenerationState

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@5217ff3e]
R: Boolean

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@3463aafc]
T: MessageCollector

public abstract operator fun next(): org.jetbrains.kotlin.modules.Module defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@783de727]
T: Module

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@400d6b78]
T: String

public abstract operator fun next(): org.jetbrains.kotlin.modules.Module defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2699d468]
T: Module

public abstract operator fun next(): org.jetbrains.kotlin.modules.JavaRootPath defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@50cc75a5]
T: JavaRootPath

public abstract operator fun next(): org.jetbrains.kotlin.modules.Module defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2434935d]
T: Module

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3b30702b]
T: String

public abstract operator fun next(): org.jetbrains.kotlin.modules.Module defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7896558c]
T: Module

public abstract operator fun next(): org.jetbrains.kotlin.modules.Module defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6d946e97]
T: Module

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6dd1e05d]
T: FirJavaModuleBasedSession

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6dd1e05d]
T: List<FirFile>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: Builder

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.psi.KtFile defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1af87814]
E: KtFile

public abstract operator fun next(): org.jetbrains.kotlin.resolve.jvm.extensions.AnalysisHandlerExtension defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@bf1e740]
T: AnalysisHandlerExtension

public abstract operator fun next(): org.jetbrains.kotlin.resolve.jvm.extensions.AnalysisHandlerExtension defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@373fd7d4]
T: AnalysisHandlerExtension

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Nothing

@org.jetbrains.annotations.NotNull public open operator fun <T : (kotlin.Any..kotlin.Any?)> get(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>, @org.jetbrains.annotations.NotNull p1: T): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@ddf0fdf]
T: JvmTarget

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: JvmBuiltIns

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@3463aafc]
T: String



@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: PackagePartProvider


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: StorageComponentContainer

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@3463aafc]
T: String

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: MutableModuleContext

public abstract operator fun next(): org.jetbrains.kotlin.cli.common.config.KotlinSourceRoot defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7e5346fd]
T: KotlinSourceRoot

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@46bc5aac]
T: File

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: VirtualFile

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@6547a10e]
T: Boolean

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6dd1e05d]
T: JvmDependenciesIndexImpl

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@207d872e]
V: Cache


public final val first: org.jetbrains.kotlin.cli.jvm.index.JvmDependenciesIndexImpl.FindClassRequest defined in kotlin.Pair[DeserializedPropertyDescriptor@690b18e7]
A: FindClassRequest

public final operator fun component1(): org.jetbrains.kotlin.cli.jvm.index.JvmDependenciesIndexImpl.FindClassRequest defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@61e62e42]
A: FindClassRequest

public final operator fun component2(): org.jetbrains.kotlin.cli.jvm.index.JvmDependenciesIndexImpl.SearchResult defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@61b54cfb]
B: SearchResult

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.cli.jvm.index.JvmDependenciesIndexImpl.Cache defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@601b95e]
E: Cache

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.cli.jvm.index.JavaRoot defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3b9dfb0a]
E: JavaRoot

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.cli.jvm.index.JvmDependenciesIndexImpl.Cache defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6c987fa6]
E: Cache

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.cli.jvm.index.JvmDependenciesIndexImpl.Cache defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6c987fa6]
E: Cache

public final operator fun get(index: kotlin.Int): kotlin.collections.MutableMap<kotlin.String, com.intellij.openapi.vfs.VirtualFile?> defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@fe35988]
T: MutableMap<String, VirtualFile?>

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.cli.jvm.index.JavaRoot defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3b9dfb0a]
E: JavaRoot

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@504baaac]
E: String

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.cli.jvm.index.JvmDependenciesIndexImpl.Cache defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@76d73b5a]
E: Cache

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@153667b]
T: String

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.cli.jvm.index.JavaRoot defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@73d1e3e4]
E: JavaRoot

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: VirtualFile

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.cli.jvm.index.JavaRoot defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@73d1e3e4]
E: JavaRoot

public open fun get(index: kotlin.Int): kotlin.collections.List<org.jetbrains.kotlin.name.ClassId> defined in java.util.ArrayList[JavaMethodDescriptor@5838c6c1]
E: List<ClassId>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: MockKotlinField

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: MockKotlinField

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@3463aafc]
T: MessageCollector

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@3463aafc]
T: MessageCollector

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@3463aafc]
T: MessageCollector

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@166026ff]
T: String

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@792ecf62]
T: String

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@3463aafc]
T: MessageCollector

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@3463aafc]
T: MessageCollector

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@3463aafc]
T: MessageCollector

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@3463aafc]
T: MessageCollector

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

public final operator fun component1(): kotlin.String defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@74edf659]
A: String

public final operator fun component2(): kotlin.String defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2061589c]
B: String

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@5217ff3e]
R: List<Path>

public abstract operator fun next(): org.jetbrains.kotlin.resolve.jvm.modules.JavaModuleInfo.Requires defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3f1dea0a]
T: Requires

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7d2b4483]
T: String

public abstract operator fun next(): org.jetbrains.kotlin.resolve.jvm.modules.JavaModuleInfo.Requires defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@af6dbda]
T: Requires

public abstract operator fun next(): org.jetbrains.kotlin.resolve.jvm.modules.JavaModuleInfo.Requires defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@24d495db]
T: Requires

public abstract operator fun next(): org.jetbrains.kotlin.resolve.jvm.modules.JavaModuleInfo.Requires defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@52aac6c7]
T: Requires

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@3463aafc]
T: MessageCollector

public abstract operator fun next(): org.jetbrains.kotlin.compiler.plugin.CommandLineProcessor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4ab3f3fe]
T: CommandLineProcessor

public abstract operator fun next(): org.jetbrains.kotlin.compiler.plugin.AbstractCliOption defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7fea9b5]
T: AbstractCliOption

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@72efcb81]
T: String

public inline fun <T> java.io.File.useLines(charset: java.nio.charset.Charset = ..., block: (kotlin.sequences.Sequence<kotlin.String>) -> T): T defined in kotlin.io[DeserializedSimpleFunctionDescriptor@28bd2fc4]
T: Set<String>

public inline fun <T> java.io.Reader.useLines(block: (kotlin.sequences.Sequence<kotlin.String>) -> T): T defined in kotlin.io[DeserializedSimpleFunctionDescriptor@450db8ba]
T: Set<String>

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@5217ff3e]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@5217ff3e]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@5217ff3e]
R: Nothing

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@3463aafc]
T: MessageCollector

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@420a14f1]
T: String

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@3463aafc]
T: MessageCollector

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@3463aafc]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2ff89724]
R: File

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2ff89724]
R: File

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3a32d4ac]
T: KtFile

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtDeclaration defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3d9493e6]
T: KtDeclaration

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@207d872e]
V: PackageParts

public abstract fun next(): org.jetbrains.kotlin.metadata.jvm.deserialization.PackageParts defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@23878837]
T: PackageParts

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1260273d]
T: DeclarationDescriptor

public final operator fun component1(): org.jetbrains.kotlin.metadata.ProtoBuf.StringTable defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2e588f6d]
A: StringTable

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7ee9b377]
B: QualifiedNameTable

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6d98af9]
R: Unit

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@45a16d6d]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@45a16d6d]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@45a16d6d]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@45a16d6d]
E: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: JavacFileManager

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6d98af9]
R: Boolean

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7ae6cb99]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

public abstract val value: org.jetbrains.kotlin.javac.wrappers.trees.TreeBasedPackage defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@2e2de65b]
V: TreeBasedPackage

public abstract val key: org.jetbrains.kotlin.name.ClassId defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@239a69e8]
K: ClassId

public abstract val value: org.jetbrains.kotlin.javac.wrappers.trees.TreeBasedClass defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@d1e1893]
V: TreeBasedClass

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: SymbolBasedClass

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: SymbolBasedPackage

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Nothing

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7ae6cb99]
T: String

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2e510c3b]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: SymbolBasedClass

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: SymbolBasedClass

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: ArrayList<String>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Nothing

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7ae6cb99]
T: String

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7ae6cb99]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Nothing

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7ae6cb99]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Nothing

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7ae6cb99]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Nothing

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c977dc5]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6dd1e05d]
T: ArrayList<JavaClass>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Nothing

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7ae6cb99]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: MockKotlinClassifier

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: MockKotlinClassifier

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: JavaClass

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: ClassId

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: ClassId

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7ae6cb99]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Nothing

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7f695698]
R: JavaClass

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@63340b30]
T: HashSet<JavaClass>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: SymbolBasedArrayAnnotationArgument

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Visibility

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: List<SymbolBasedValueParameter>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: TreeBasedLiteralAnnotationArgument

public abstract operator fun next(): org.jetbrains.kotlin.load.java.structure.JavaAnnotation defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@49e60352]
T: JavaAnnotation

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1281bc]
R: Boolean

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2effba0a]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@25279db9]
R: File

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@25279db9]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@25279db9]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtImportDirective defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@455e18a5]
T: KtImportDirective

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6b5a94bd]
T: MutableMap<String, JCExpression>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6b5a94bd]
T: ArrayDeque<SignatureNode>

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@94f40f7]
R: Unit

public final operator fun component1(): kotlin.Long defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1963d145]
A: Long

public final operator fun component1(): kotlin.Long defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@ff67e03]
A: Long

public final operator fun component2(): kotlin.collections.Set<org.jetbrains.kotlin.utils.kapt.MemoryLeak> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7a5a3c88]
B: Set<MemoryLeak>

public abstract operator fun next(): org.jetbrains.kotlin.utils.kapt.MemoryLeak defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@77127f88]
T: MemoryLeak

public final operator fun component1(): kotlin.Long defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@603e1ea6]
A: Long

public final operator fun component1(): kotlin.Long defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@16b98376]
A: Long

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.kapt3.stubs.ClassFileToSourceStubConverter.KaptStub> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3cfa4d62]
B: List<KaptStub>

public abstract operator fun next(): org.jetbrains.kotlin.kapt3.stubs.ClassFileToSourceStubConverter.KaptStub defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2407956a]
T: KaptStub

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@56cee7b8]
T: File

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6b5a94bd]
T: StringWriter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4904a0bb]
T: Builder


public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@67101744]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@67101744]
E: String


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b99c1f6]
R: File

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6b5a94bd]
T: Builder

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b99c1f6]
R: Nothing

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6f029869]
T: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@64415a68]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@64415a68]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@64415a68]
E: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b99c1f6]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b99c1f6]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b99c1f6]
R: Nothing


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6b5a94bd]
T: KaptJavaFileObject

public final val first: kotlin.collections.List<org.jetbrains.kotlin.psi.KtImportDirective> defined in kotlin.Pair[DeserializedPropertyDescriptor@44e5e612]
A: List<KtImportDirective>

public final val second: kotlin.collections.List<org.jetbrains.kotlin.psi.KtImportDirective> defined in kotlin.Pair[DeserializedPropertyDescriptor@39c9d058]
B: List<KtImportDirective>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@70628017]
R: List<KtImportDirective>

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtImportDirective defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3c08f9a5]
T: KtImportDirective

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b99c1f6]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b99c1f6]
R: Nothing

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.psi.KtTypeReference> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3b66431c]
B: List<KtTypeReference>

private final fun <T : com.sun.tools.javac.tree.JCTree.JCExpression?> getNonErrorType(type: org.jetbrains.kotlin.types.KotlinType?, kind: org.jetbrains.kotlin.kapt3.stubs.ErrorTypeCorrector.TypeKind, ktTypeProvider: () -> org.jetbrains.kotlin.psi.KtTypeReference?, ifNonError: () -> T): T defined in org.jetbrains.kotlin.kapt3.stubs.ClassFileToSourceStubConverter[SimpleFunctionDescriptorImpl@531dd3d0]
T: JCExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b99c1f6]
R: JCExpression

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtSuperTypeListEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@616bc619]
T: KtSuperTypeListEntry

public abstract fun next(): org.jetbrains.kotlin.psi.KtSuperTypeListEntry defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@1fc358c0]
T: KtSuperTypeListEntry

private final fun <T : com.sun.tools.javac.tree.JCTree.JCExpression?> getNonErrorType(type: org.jetbrains.kotlin.types.KotlinType?, kind: org.jetbrains.kotlin.kapt3.stubs.ErrorTypeCorrector.TypeKind, ktTypeProvider: () -> org.jetbrains.kotlin.psi.KtTypeReference?, ifNonError: () -> T): T defined in org.jetbrains.kotlin.kapt3.stubs.ClassFileToSourceStubConverter[SimpleFunctionDescriptorImpl@531dd3d0]
T: JCExpression

public final operator fun component1(): org.jetbrains.kotlin.kapt3.stubs.SignatureParser.MethodGenericSignature defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@446a5cd0]
A: MethodGenericSignature

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b99c1f6]
R: JCExpression


public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@60ed167c]
E: ValueParameterDescriptor


private final fun <T : com.sun.tools.javac.tree.JCTree.JCExpression?> getNonErrorType(type: org.jetbrains.kotlin.types.KotlinType?, kind: org.jetbrains.kotlin.kapt3.stubs.ErrorTypeCorrector.TypeKind, ktTypeProvider: () -> org.jetbrains.kotlin.psi.KtTypeReference?, ifNonError: () -> T): T defined in org.jetbrains.kotlin.kapt3.stubs.ClassFileToSourceStubConverter[SimpleFunctionDescriptorImpl@531dd3d0]
T: JCExpression

private final fun <T : com.sun.tools.javac.tree.JCTree.JCExpression?> getNonErrorType(type: org.jetbrains.kotlin.types.KotlinType?, kind: org.jetbrains.kotlin.kapt3.stubs.ErrorTypeCorrector.TypeKind, ktTypeProvider: () -> org.jetbrains.kotlin.psi.KtTypeReference?, ifNonError: () -> T): T defined in org.jetbrains.kotlin.kapt3.stubs.ClassFileToSourceStubConverter[SimpleFunctionDescriptorImpl@531dd3d0]
T: JCExpression


public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4a385baf]
R: List<(com.sun.tools.javac.tree.JCTree.JCAnnotation..com.sun.tools.javac.tree.JCTree.JCAnnotation?)>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7b441a5a]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7b441a5a]
K: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b99c1f6]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b99c1f6]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b99c1f6]
R: Nothing

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.psi.KtExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2d24eb8a]
E: KtExpression

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@8a95460]
D: CallableDescriptor

public final val <D : (org.jetbrains.kotlin.descriptors.CallableDescriptor..org.jetbrains.kotlin.descriptors.CallableDescriptor?)> org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<D>.resultingDescriptor: D[MyPropertyDescriptor@8a95460]
D: CallableDescriptor

public final operator fun component2(): org.jetbrains.kotlin.resolve.constants.ConstantValue<*> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@124fe1d2]
B: ConstantValue<*>

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.name.Name, org.jetbrains.kotlin.resolve.constants.ConstantValue<*>> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@13ae9ff1]
T: Entry<Name, ConstantValue<*>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7b441a5a]
K: Name

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@527db144]
V: ConstantValue<*>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b99c1f6]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@70628017]
R: String

@kotlin.SinceKotlin public fun <K, V> kotlin.collections.Map<K, V>.getValue(key: K): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6ee380b0]
V: Pair<KtTypeParameter, KtTypeProjection>

public final operator fun component1(): org.jetbrains.kotlin.psi.KtTypeParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4a634dc2]
A: KtTypeParameter

public final operator fun component2(): org.jetbrains.kotlin.psi.KtTypeProjection defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4a2bcf94]
B: KtTypeProjection

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b99c1f6]
R: Nothing

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@24936796]
T: JCExpression

public final operator fun component1(): kotlin.String defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@19759e7b]
A: String

public final operator fun component2(): kotlin.Boolean defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3572306]
B: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b99c1f6]
R: File

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4c840cde]
V: Pair<String, Boolean>

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<kotlin.String, org.jetbrains.kotlin.kapt3.base.stubs.KotlinPosition> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@7f55a47]
T: MutableEntry<String, KotlinPosition>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7b441a5a]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@527db144]
V: KotlinPosition

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<kotlin.String, kotlin.String> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@38f09e52]
T: MutableEntry<String, String>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7b441a5a]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@527db144]
V: String

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6f029869]
T: SignatureNode

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6f029869]
T: SignatureNode


public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6f029869]
T: SignatureNode


public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6f029869]
T: SignatureNode

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6f029869]
T: SignatureNode

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6f029869]
T: SignatureNode

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b99c1f6]
R: JCExpression

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6f029869]
T: SignatureNode

public abstract fun next(): org.jetbrains.kotlin.kapt3.stubs.SignatureNode defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@23c379cd]
T: SignatureNode

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6f029869]
T: SignatureNode

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6f029869]
T: SignatureNode

public abstract fun next(): org.jetbrains.kotlin.kapt3.stubs.SignatureNode defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@54cb7d9d]
T: SignatureNode

public abstract fun next(): org.jetbrains.kotlin.kapt3.stubs.SignatureNode defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@54cb7d9d]
T: SignatureNode

public abstract fun next(): org.jetbrains.kotlin.kapt3.stubs.SignatureNode defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@54cb7d9d]
T: SignatureNode

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@70628017]
R: String

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2620be84]
T: File

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@71ba1bd9]
T: File

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@71ba1bd9]
T: File

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@71ba1bd9]
T: File

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4ac26751]
T: Path

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3e2132f3]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3e2132f3]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3e2132f3]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3e2132f3]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3e2132f3]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3e2132f3]
R: Boolean

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@57f38a8d]
T: String

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@40bc62c4]
T: ArrayList<CallableMemberDescriptor>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1ef8f56b]
T: ArrayList<AbstractIncrementalCache<ClassName>>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1ef8f56b]
T: File

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1ef8f56b]
T: JvmClassName

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d61544]
R: File

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@49ba6fa2]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@49ba6fa2]
E: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d61544]
R: JvmMetadataVersion

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d61544]
R: JsMetadataVersion

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d61544]
R: JvmMetadataVersion

public abstract operator fun next(): kotlin.reflect.KProperty1<T, *> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3eb34a02]
T: KProperty1<T, *>

public abstract operator fun next(): kotlin.reflect.KParameter defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5f575161]
T: KParameter

public abstract fun call(vararg args: kotlin.Any?): T defined in kotlin.reflect.KFunction[DeserializedSimpleFunctionDescriptor@5adf8e57]
R: T

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d61544]
R: Unit

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@78099629]
T: File

public abstract operator fun next(): org.jetbrains.kotlin.name.FqName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@69939ce1]
T: FqName

public abstract operator fun next(): org.jetbrains.kotlin.name.FqName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4ad6c786]
T: FqName

public abstract operator fun next(): org.jetbrains.kotlin.incremental.AbstractIncrementalCache<ClassName> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@70d63a1d]
T: AbstractIncrementalCache<ClassName>

public abstract operator fun next(): org.jetbrains.kotlin.name.FqName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@69939ce1]
T: FqName

public abstract fun next(): org.jetbrains.kotlin.name.FqName defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@608247a8]
T: FqName

public abstract fun next(): org.jetbrains.kotlin.name.FqName defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@52d22e0]
T: FqName

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d61544]
R: File

public abstract operator fun next(): kotlin.collections.Map.Entry<java.io.File, kotlin.collections.Set<java.io.File>> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6059b5c7]
T: Entry<File, Set<File>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3644c529]
K: File

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b0de9dd]
V: Set<File>

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@77eafe4b]
T: File

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6ea800f8]
V: MutableSet<File>

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<java.io.File, kotlin.collections.MutableSet<java.io.File>> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@32ec6fd4]
T: MutableEntry<File, MutableSet<File>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3644c529]
K: File

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b0de9dd]
V: MutableSet<File>

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<org.jetbrains.kotlin.name.FqName, kotlin.collections.MutableSet<kotlin.String>> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@2f569de]
T: MutableEntry<FqName, MutableSet<String>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3644c529]
K: FqName

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b0de9dd]
V: MutableSet<String>

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<org.jetbrains.kotlin.name.FqName, kotlin.collections.MutableSet<kotlin.String>> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@70f15cf7]
T: MutableEntry<FqName, MutableSet<String>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3644c529]
K: FqName

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b0de9dd]
V: MutableSet<String>

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<org.jetbrains.kotlin.name.FqName, kotlin.Boolean> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@20efd3e]
T: MutableEntry<FqName, Boolean>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3644c529]
K: FqName

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b0de9dd]
V: Boolean

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6ea800f8]
V: MutableSet<R>


val collectMember: kotlin.reflect.KFunction2<@kotlin.ParameterName org.jetbrains.kotlin.name.FqName, @kotlin.ParameterName kotlin.String, kotlin.Unit> defined in org.jetbrains.kotlin.incremental.ChangesCollector.collectAllFromClass[LocalVariableDescriptor@5be1a428] +++|+++
R: Unit

val collectMember: kotlin.reflect.KFunction2<@kotlin.ParameterName org.jetbrains.kotlin.name.FqName, @kotlin.ParameterName kotlin.String, kotlin.Unit> defined in org.jetbrains.kotlin.incremental.ChangesCollector.collectAllFromClass[LocalVariableDescriptor@5be1a428] +++|+++
R: Unit

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6ea800f8]
V: MutableSet<File>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d61544]
R: Unit

public abstract operator fun next(): kotlin.collections.Map.Entry<java.io.File, org.jetbrains.kotlin.incremental.js.TranslationResultValue> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@ed5ad9]
T: Entry<File, TranslationResultValue>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3644c529]
K: File

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b0de9dd]
V: TranslationResultValue

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d61544]
R: Map<ClassId, ProtoData>

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.name.ClassId, org.jetbrains.kotlin.incremental.ProtoData> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1d4d19d9]
T: Entry<ClassId, ProtoData>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3644c529]
K: ClassId

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b0de9dd]
V: ProtoData

public abstract operator fun next(): org.jetbrains.kotlin.name.ClassId defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@682eec36]
T: ClassId

public abstract operator fun next(): kotlin.collections.Map.Entry<java.io.File, kotlin.collections.Map<kotlin.String, kotlin.Long>> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6f9129ee]
T: Entry<File, Map<String, Long>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3644c529]
K: File

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b0de9dd]
V: Map<String, Long>

public abstract operator fun next(): kotlin.collections.Map.Entry<kotlin.String, kotlin.ByteArray> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@48bb710c]
T: Entry<String, ByteArray>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3644c529]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b0de9dd]
V: ByteArray

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5984ec7f]
T: File

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@40bc62c4]
T: HashMap<File, TranslationResultValue>

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3973edf6]
T: String

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@40bc62c4]
T: HashMap<String, ByteArray>

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.name.ClassId, org.jetbrains.kotlin.incremental.ProtoData> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@33266382]
T: Entry<ClassId, ProtoData>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3644c529]
K: ClassId

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b0de9dd]
V: ProtoData

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d61544]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d61544]
R: FqName

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4bf6a43f]
T: String

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2d14a65e]
T: File

public abstract operator fun next(): org.jetbrains.kotlin.resolve.jvm.JvmClassName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@544aa6c0]
T: JvmClassName

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6ea800f8]
V: MutableSet<String>

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<org.jetbrains.kotlin.resolve.jvm.JvmClassName, kotlin.collections.MutableSet<kotlin.String>> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@3e327e7b]
T: MutableEntry<JvmClassName, MutableSet<String>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3644c529]
K: JvmClassName

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b0de9dd]
V: MutableSet<String>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d61544]
R: JvmPackagePartProto

public abstract operator fun next(): org.jetbrains.kotlin.resolve.jvm.JvmClassName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@544aa6c0]
T: JvmClassName

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6846dc9a]
T: String

public final operator fun component1(): org.jetbrains.kotlin.metadata.jvm.deserialization.JvmNameResolver defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1e603781]
A: JvmNameResolver

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.Class defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@74efda58]
B: Class

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1e0b53bc]
T: String

public abstract operator fun next(): K defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@66c1cc72]
T: K

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d61544]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d61544]
R: List<CallableMemberDescriptor>

public abstract operator fun next(): org.jetbrains.kotlin.name.ClassId defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4f23688a]
T: ClassId

public abstract operator fun next(): org.jetbrains.kotlin.load.java.descriptors.JavaClassDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@730690f0]
T: JavaClassDescriptor

public final fun <T> time(block: () -> T): T defined in org.jetbrains.kotlin.util.PerformanceCounter[DeserializedSimpleFunctionDescriptor@d960d50]
T: SerializedJavaClassWithSource

public final fun <T> time(block: () -> T): T defined in org.jetbrains.kotlin.util.PerformanceCounter[DeserializedSimpleFunctionDescriptor@d960d50]
T: SerializedJavaClassWithSource

public final operator fun component1(): org.jetbrains.kotlin.metadata.ProtoBuf.StringTable defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@34ff3651]
A: StringTable

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@74e88d06]
B: QualifiedNameTable

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@537d5b91]
T: ByteArray

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@b1602cb]
T: File

public abstract operator fun next(): org.jetbrains.kotlin.incremental.storage.LookupSymbolKey defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@74ffd627]
T: LookupSymbolKey

public abstract val key: java.io.File defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@709b50f3]
K: File

public abstract operator fun next(): kotlin.collections.Map.Entry<java.io.File, kotlin.Int> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1ceeab0c]
T: Entry<File, Int>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3644c529]
K: File

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b0de9dd]
V: Int

public abstract operator fun next(): org.jetbrains.kotlin.incremental.storage.LookupSymbolKey defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@74ffd627]
T: LookupSymbolKey

public abstract operator fun next(): org.jetbrains.kotlin.incremental.storage.LookupSymbolKey defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2d80f82e]
T: LookupSymbolKey

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d61544]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d61544]
R: Nothing





























@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d61544]
R: Builder

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@18d33066]
R: Services

public abstract operator fun next(): org.jetbrains.kotlin.build.GeneratedFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4ab0a967]
T: GeneratedFile

public abstract operator fun next(): org.jetbrains.kotlin.incremental.ChangeInfo defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6c0e823d]
T: ChangeInfo

public abstract operator fun next(): org.jetbrains.kotlin.name.FqName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@49de9751]
T: FqName

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@58cf804d]
T: String

public abstract operator fun next(): org.jetbrains.kotlin.incremental.LookupSymbol defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@ac44ddc]
T: LookupSymbol

public abstract operator fun next(): org.jetbrains.kotlin.incremental.IncrementalCacheCommon defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@57feb81a]
T: IncrementalCacheCommon

public abstract operator fun next(): org.jetbrains.kotlin.name.FqName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1f87ba60]
T: FqName

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6ea800f8]
V: MutableSet<File>

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<org.jetbrains.kotlin.name.FqName, kotlin.collections.MutableSet<java.io.File>> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@700f258d]
T: MutableEntry<FqName, MutableSet<File>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3644c529]
K: FqName

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b0de9dd]
V: MutableSet<File>

public final operator fun component1(): org.jetbrains.kotlin.metadata.jvm.deserialization.JvmNameResolver defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@702b0fbd]
A: JvmNameResolver

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.Package defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2d065708]
B: Package

public final operator fun component1(): org.jetbrains.kotlin.metadata.jvm.deserialization.JvmNameResolver defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@54fd2a81]
A: JvmNameResolver

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.Class defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@45e9bc7f]
B: Class

public abstract operator fun next(): kotlin.Int defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@63dad32d]
T: Int





public abstract operator fun next(): K defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@58450a5a]
T: K

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@18d33066]
R: Printer

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@18d33066]
R: StringBuilder

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@537d5b91]
T: Collection<File>

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7dc760b9]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d61544]
R: File

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3fba012b]
T: String

public abstract operator fun next(): kotlin.collections.Map.Entry<kotlin.String, T> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2613fb]
T: Entry<String, T>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3644c529]
K: String

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6226033c]
T: String

public final operator fun get(index: kotlin.Int): org.jetbrains.kotlin.incremental.storage.ConstantsMapExternalizer.Kind defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@17a8a572]
T: Kind

private final val newCollection: () -> kotlin.collections.MutableCollection<T> defined in org.jetbrains.kotlin.incremental.storage.CollectionExternalizer[PropertyDescriptorImpl@15849180] +++|+++
R: MutableCollection<T>

@kotlin.SinceKotlin public fun <K, V> kotlin.collections.Map<K, V>.getValue(key: K): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@791037f1]
V: String

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@60b48869]
T: File

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6df533d4]
T: File

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5a4da8bd]
T: File

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@14cd69e5]
T: File

public abstract operator fun next(): org.jetbrains.kotlin.build.JvmSourceRoot defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@17bcedee]
T: JvmSourceRoot

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@bffcb11]
T: String

public inline fun <T : java.lang.AutoCloseable?, R> T.use(block: (T) -> R): R defined in org.jetbrains.kotlin.konan.file in file File.kt[SimpleFunctionDescriptorImpl@2e938281]
R: List<File>





@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2d8459f8]
T: Long


public inline fun <T : java.lang.AutoCloseable?, R> T.use(block: (T) -> R): R defined in org.jetbrains.kotlin.konan.file in file File.kt[SimpleFunctionDescriptorImpl@2e938281]
R: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2d8459f8]
T: MutableList<String>

public fun <T> org.jetbrains.kotlin.konan.file.File.withMutableZipFileSystem(action: (java.nio.file.FileSystem) -> T): T defined in org.jetbrains.kotlin.konan.file in file ZipUtil.kt[SimpleFunctionDescriptorImpl@6d7fbb41]
T: Unit

public inline fun <T : java.lang.AutoCloseable?, R> T.use(block: (T) -> R): R defined in org.jetbrains.kotlin.konan.file in file File.kt[SimpleFunctionDescriptorImpl@2e938281]
R: Unit

public inline fun <T : java.lang.AutoCloseable?, R> T.use(block: (T) -> R): R defined in org.jetbrains.kotlin.konan.file in file File.kt[SimpleFunctionDescriptorImpl@2e938281]
R: Unit

public inline fun <T : java.lang.AutoCloseable?, R> T.use(block: (T) -> R): R defined in org.jetbrains.kotlin.konan.file in file File.kt[SimpleFunctionDescriptorImpl@2e938281]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@30d53eb1]
R: List<String>

public fun <T> printMillisec(message: kotlin.String, body: () -> T): T defined in org.jetbrains.kotlin.konan.util in file Util.kt[SimpleFunctionDescriptorImpl@28d246c1]
T: Unit


@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3c25c43]
T: File

public final fun <T> inPlace(action: (org.jetbrains.kotlin.library.KotlinLibraryLayout) -> T): T defined in org.jetbrains.kotlin.library.impl.BaseLibraryAccess[SimpleFunctionDescriptorImpl@21859ec5]
T: String

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3c25c43]
T: String

public final fun <T> inPlace(action: (org.jetbrains.kotlin.library.KotlinLibraryLayout) -> T): T defined in org.jetbrains.kotlin.library.impl.BaseLibraryAccess[SimpleFunctionDescriptorImpl@21859ec5]
T: Properties

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3c25c43]
T: Properties

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3c25c43]
T: KonanLibraryVersioning

public final fun <T> realFiles(action: (org.jetbrains.kotlin.library.IrKotlinLibraryLayout) -> T): T defined in org.jetbrains.kotlin.library.impl.IrLibraryAccess[SimpleFunctionDescriptorImpl@46825a77]
T: File

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3c25c43]
T: CombinedIrFileReader

public final fun <T> realFiles(action: (org.jetbrains.kotlin.library.IrKotlinLibraryLayout) -> T): T defined in org.jetbrains.kotlin.library.impl.IrLibraryAccess[SimpleFunctionDescriptorImpl@46825a77]
T: File

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3c25c43]
T: SimpleIrTableFileReader

public final fun <T> realFiles(action: (org.jetbrains.kotlin.library.IrKotlinLibraryLayout) -> T): T defined in org.jetbrains.kotlin.library.impl.IrLibraryAccess[SimpleFunctionDescriptorImpl@46825a77]
T: File

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3c25c43]
T: SimpleIrTableFileReader

public final fun <T> realFiles(action: (org.jetbrains.kotlin.library.IrKotlinLibraryLayout) -> T): T defined in org.jetbrains.kotlin.library.impl.IrLibraryAccess[SimpleFunctionDescriptorImpl@46825a77]
T: File

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3c25c43]
T: SimpleIrTableFileReader

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3c25c43]
T: ExtractingBaseLibraryImpl

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3c25c43]
T: ExtractingMetadataLibraryImpl

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3c25c43]
T: ExtractingIrLibraryImpl

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3c25c43]
T: File

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3c25c43]
T: File

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3c25c43]
T: File

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3c25c43]
T: File

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3c25c43]
T: File

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3c25c43]
T: File

public fun <T> org.jetbrains.kotlin.konan.file.File.withMutableZipFileSystem(action: (java.nio.file.FileSystem) -> T): T defined in org.jetbrains.kotlin.konan.file[DeserializedSimpleFunctionDescriptor@31a08bce]
T: Unit

public final val second: kotlin.Int defined in kotlin.Pair[DeserializedPropertyDescriptor@13df2cf4]
B: Int

public final val first: kotlin.Int defined in kotlin.Pair[DeserializedPropertyDescriptor@2cbbeda7]
A: Int

public final val second: kotlin.Int defined in kotlin.Pair[DeserializedPropertyDescriptor@13df2cf4]
B: Int

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@38076696]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5a3ba27a]
V: Int

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@e077b38]
T: SortedSet<String>

public final fun <T> inPlace(action: (org.jetbrains.kotlin.library.MetadataKotlinLibraryLayout) -> T): T defined in org.jetbrains.kotlin.library.impl.MetadataLibraryAccess[SimpleFunctionDescriptorImpl@6bb8a26]
T: SortedSet<String>

public fun <T> org.jetbrains.kotlin.konan.file.File.withZipFileSystem(action: (java.nio.file.FileSystem) -> T): T defined in org.jetbrains.kotlin.konan.file[DeserializedSimpleFunctionDescriptor@5e38d5a7]
T: File

public fun <T> org.jetbrains.kotlin.konan.file.File.withZipFileSystem(action: (java.nio.file.FileSystem) -> T): T defined in org.jetbrains.kotlin.konan.file[DeserializedSimpleFunctionDescriptor@5e38d5a7]
T: File

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5a75f502]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5a75f502]
R: Unit

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3083922a]
E: String

public abstract operator fun next(): kotlin.collections.IndexedValue<kotlin.ByteArray> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6d39f894]
T: IndexedValue<ByteArray>

public final operator fun component2(): kotlin.ByteArray defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@2cd27f07]
T: ByteArray


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6373bce4]
T: IrTypeParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6373bce4]
T: IrValueParameterImpl

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41d2867]
V: IrLoopBase

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: String

@kotlin.internal.InlineOnly public inline fun <R> run(block: () -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5b61f104]
R: Unit

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41d2867]
V: Long

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41d2867]
V: UniqId

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@52eb292e]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@52eb292e]
R: Long

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@52eb292e]
R: Long

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

public final operator fun component2(): kotlin.collections.Collection<org.jetbrains.kotlin.descriptors.DeclarationDescriptor> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5ddf6be5]
B: Collection<DeclarationDescriptor>

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6fc16c2a]
T: [@kotlin.jvm.JvmWildcard] SimpleFunctionDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@789153]
T: DeclarationDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: DeclarationDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: DeclarationDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Boolean

public inline fun <T> kotlin.collections.Iterable<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3ff355f7]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@431d4844]
R: IrSimpleTypeImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@431d4844]
R: IrSimpleTypeImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: IrTypeAliasSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: IrTypeAliasSymbol

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6373bce4]
T: IrVariableImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7598b261]
T: IrConstructorCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6373bce4]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6373bce4]
T: IrTypeOperatorCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6373bce4]
T: IrDynamicOperatorExpressionImpl

public fun <E> kotlin.collections.MutableList<E>.pop(): E defined in org.jetbrains.kotlin.backend.common[DeserializedSimpleFunctionDescriptor@8b1fb21]
E: IrDeclarationParent


private final inline fun <T : org.jetbrains.kotlin.ir.declarations.IrDeclarationParent, R> usingParent(parent: T, block: (T) -> R): R defined in org.jetbrains.kotlin.backend.common.serialization.IrModuleDeserializer[SimpleFunctionDescriptorImpl@13690b9f]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6373bce4]
T: T


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6373bce4]
T: IrEnumEntry

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6373bce4]
T: IrAnonymousInitializerImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6373bce4]
T: IrConstructor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6373bce4]
T: IrLocalDelegatedPropertyImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7598b261]
T: IrSimpleFunction

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7598b261]
T: IrSimpleFunction

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7598b261]
T: IrField

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6373bce4]
T: IrProperty

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: IrStatementOriginImpl

private final inline fun <T : org.jetbrains.kotlin.ir.declarations.IrDeclarationParent, R> usingParent(parent: T, block: (T) -> R): R defined in org.jetbrains.kotlin.backend.common.serialization.IrModuleDeserializer[SimpleFunctionDescriptorImpl@13690b9f]
R: IrDeclaration

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41d2867]
V: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Boolean

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41d2867]
V: Int

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41d2867]
V: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

public abstract fun next(): org.jetbrains.kotlin.backend.common.serialization.proto.IrSymbolData defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@622bbf52]
T: IrSymbolData

public abstract fun next(): org.jetbrains.kotlin.backend.common.serialization.proto.IrType defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@3c7989d8]
T: IrType

public abstract fun next(): kotlin.String defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@1ef686fe]
T: String

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41d2867]
V: IrSymbolData

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41d2867]
V: IrType

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41d2867]
V: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41d2867]
V: IrSymbol

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41d2867]
V: MutableList<IrFile>

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrFile defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2e0dedc0]
E: IrFile

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1a78b37c]
T: UniqIdKey

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7598b261]
T: IrClass

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41d2867]
V: IrDeserializerForModule

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: IrModuleFragment

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@431d4844]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@431d4844]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: String

public final operator fun component1(): kotlin.String defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3bc625dd]
A: String

public final operator fun component2(): kotlin.String defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@b2145f]
B: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: UniqId

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@73f4efb1]
R: Unit

public final val serializeString: (kotlin.String) -> org.jetbrains.kotlin.backend.common.serialization.proto.String defined in org.jetbrains.kotlin.backend.common.serialization.DescriptorReferenceSerializer[PropertyDescriptorImpl@5fc8effb] +++|+++
R: String

public final val serializeString: (kotlin.String) -> org.jetbrains.kotlin.backend.common.serialization.proto.String defined in org.jetbrains.kotlin.backend.common.serialization.DescriptorReferenceSerializer[PropertyDescriptorImpl@5fc8effb] +++|+++
R: String

public final val serializeString: (kotlin.String) -> org.jetbrains.kotlin.backend.common.serialization.proto.String defined in org.jetbrains.kotlin.backend.common.serialization.DescriptorReferenceSerializer[PropertyDescriptorImpl@5fc8effb] +++|+++
R: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7a7814b7]
K: KotlinLibrary

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@29a61552]
V: JsKlibMetadataParts

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6fdc6611]
R: List<ClassId>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6fdc6611]
R: List<ClassId>

@kotlin.SinceKotlin public fun <K, V> kotlin.collections.Map<K, V>.getValue(key: K): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2c48adf3]
V: List<KotlinLibrary>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6ff0282e]
T: ModuleDescriptorImpl

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6baafe2c]
V: ModuleDescriptorImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6fdc6611]
R: DescriptorUniqId

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrFile defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2717a03f]
E: IrFile

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6baafe2c]
V: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6fdc6611]
R: JsKlibMetadataPackageFragment

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6fdc6611]
R: JsKlibMetadataPackageFragment

public abstract operator fun next(): org.jetbrains.kotlin.name.FqName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@25d12b8]
T: FqName

public abstract operator fun next(): org.jetbrains.kotlin.ir.backend.js.lower.serialization.metadata.JsKlibMetadataPackageFragment defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@206a1c9e]
T: [@kotlin.internal.NoInfer] JsKlibMetadataPackageFragment

public final val data: org.jetbrains.kotlin.descriptors.ModuleDescriptor defined in org.jetbrains.kotlin.ir.backend.js.lower.serialization.metadata.JsKlibMetadataModuleDescriptor[PropertyDescriptorImpl@170948fc]
T: ModuleDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.name.FqName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4694c39e]
T: FqName

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7a7814b7]
K: FqName

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@29a61552]
V: PackageFragment

public abstract operator fun next(): kotlin.collections.MutableMap.MutableEntry<org.jetbrains.kotlin.name.FqName, org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3a87a529]
T: MutableEntry<FqName, PackageFragment>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7a7814b7]
K: FqName

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@29a61552]
V: PackageFragment

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@b0fc88a]
T: DeclarationDescriptor

val skip: (org.jetbrains.kotlin.descriptors.DeclarationDescriptor) -> kotlin.Boolean defined in org.jetbrains.kotlin.ir.backend.js.lower.serialization.metadata.JsKlibMetadataSerializationUtil.serializeDescriptors[LocalVariableDescriptor@65bf5895] +++|+++
R: Boolean

public final operator fun component1(): org.jetbrains.kotlin.metadata.ProtoBuf.StringTable defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5af9c23b]
A: StringTable

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@28e305df]
B: QualifiedNameTable

public abstract val value: kotlin.Int defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@163819c2]
V: Int

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.ir.backend.js.lower.serialization.metadata.JsKlibFileMetadata, kotlin.Int> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@375c230]
T: Entry<JsKlibFileMetadata, Int>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7a7814b7]
K: JsKlibFileMetadata

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@29a61552]
V: Int

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2a994ab0]
T: AnnotationDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6fdc6611]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@4bcf1dc6]
T: MutableSet<FqName>

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.DeclarationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5b9e4ca3]
T: DeclarationDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6fdc6611]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6fdc6611]
R: Int

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.ClassifierDescriptorWithTypeParameters defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@414a21e8]
E: ClassifierDescriptorWithTypeParameters

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrFileImpl

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrFileImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrFileImpl

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrFileImpl

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1fabd6fb]
T: SimpleFunctionDescriptor

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1fabd6fb]
T: SimpleFunctionDescriptor

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1fabd6fb]
T: SimpleFunctionDescriptor

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1fabd6fb]
T: SimpleFunctionDescriptor

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1fabd6fb]
T: [@kotlin.jvm.JvmWildcard] PropertyDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrField

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrField

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrField

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrField

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrBreak

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrContinue

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrBlockBody

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrContainerExpression

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrTry

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: Boolean

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@68b53057]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrDelegatingConstructorCall

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrGetValueImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrGetValueImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrGetValueImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrGetValueImpl

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@68b53057]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrCall

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrCompositeImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: JsEmpty

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrSimpleFunctionSymbol

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1fabd6fb]
T: SimpleFunctionDescriptor

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@68b53057]
E: IrValueParameter

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@64b9142]
T: IrConstructorSymbol

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@64b9142]
T: IrConstructorSymbol

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@64b9142]
T: IrConstructorSymbol

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@64b9142]
T: IrConstructorSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrConstructorSymbol

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@64b9142]
T: IrConstructorSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrConstructorSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrClassSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrClassSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrClassSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrClassSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrClassSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrClassSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrClassSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrClassSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrSimpleFunctionSymbol

public inline fun <T> kotlin.collections.Iterable<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2ce284a0]
T: [@kotlin.internal.NoInfer] IrProperty

public inline fun <T> kotlin.collections.Iterable<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@67d430c7]
T: [@kotlin.internal.NoInfer] IrFunction

public inline fun <T> kotlin.collections.Iterable<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@67d430c7]
T: [@kotlin.internal.NoInfer] IrFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrSimpleFunction

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@52f4c930]
T: PropertyDescriptor

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1fabd6fb]
T: SimpleFunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: List<[@kotlin.internal.NoInfer] IrProperty>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: List<[@kotlin.internal.NoInfer] IrProperty>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: [@kotlin.internal.NoInfer] IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: [@kotlin.internal.NoInfer] IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: List<IrConstructorSymbol>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: List<IrConstructorSymbol>

public inline fun <T> kotlin.collections.Iterable<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@67d430c7]
T: IrConstructorSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrConstructorSymbol

public inline fun <T> kotlin.collections.Iterable<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@67d430c7]
T: IrConstructorSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrConstructorSymbol

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrClass

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrClass

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrConstructor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrConstructor

public abstract val value: kotlin.String defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@155df129]
V: String

public inline fun <T> kotlin.collections.Iterable<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@67d430c7]
T: [@kotlin.internal.NoInfer] IrSimpleFunction

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: Map<KFunction1<IrType, Boolean>, IrSimpleFunction>

public abstract val value: kotlin.String defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@1eb5fdab]
V: String

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: Map<KFunction1<IrType, Boolean>, IrSimpleFunction>

public abstract val value: kotlin.String defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@18627ac6]
V: String

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: Map<KFunction1<IrType, Boolean>, IrSimpleFunction>

public abstract val value: kotlin.String defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@54b3a9fa]
V: String

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: Map<KFunction1<IrType, Boolean>, IrSimpleFunction>

public fun <T> kotlin.collections.Iterable<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@544129b1]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.ir.types.IrType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@218c09d5]
T: IrType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.ir.types.IrType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@79fd60d9]
T: IrType

public abstract operator fun next(): org.jetbrains.kotlin.ir.types.IrType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4be3fefa]
T: IrType

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: HashMap<SimpleMemberKey, Function1<IrFunctionAccessExpression, IrExpression>>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: List<IrType>

public abstract operator fun next(): org.jetbrains.kotlin.ir.types.IrType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@ba749f1]
T: IrType

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.ir.expressions.IrExpression> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7d8d4cf3]
T: IndexedValue<IrExpression>

public final operator fun component2(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@11b8c30]
T: IrExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.ir.types.IrType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3ba7ba46]
T: IrType

public abstract operator fun next(): org.jetbrains.kotlin.ir.types.IrType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4c6f6907]
T: IrType

public abstract operator fun next(): org.jetbrains.kotlin.ir.types.IrType defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6d4b3b11]
T: IrType

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@68b53057]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: HashMap<SimpleMemberKey, Function1<IrFunctionAccessExpression, IrExpression>>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: JsName

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5cf57c19]
T: IrValueParameter

public inline fun <T> kotlin.collections.Iterable<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@67d430c7]
T: [@kotlin.internal.NoInfer] IrSimpleFunction


@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: Unit

public inline fun <T> kotlin.collections.Iterable<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2ce284a0]
T: [@kotlin.internal.NoInfer] IrConstructor

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: Unit

public abstract operator fun next(): kotlin.collections.Map.Entry<org.jetbrains.kotlin.ir.symbols.IrClassSymbol, org.jetbrains.kotlin.builtins.PrimitiveType> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7a7abbb5]
T: Entry<IrClassSymbol, PrimitiveType>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@65a4ab0d]
K: IrClassSymbol

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@a44e87c]
V: PrimitiveType

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: Unit

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@212c98e0]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@b3a5eb9]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@57647e54]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@57647e54]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@575e94f0]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@575e94f0]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@575e94f0]
E: JsExpression

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1fabd6fb]
T: JsExpression

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1fabd6fb]
T: JsExpression

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(org.jetbrains.kotlin.builtins.PrimitiveType..org.jetbrains.kotlin.builtins.PrimitiveType?), (kotlin.String..kotlin.String?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@2a1d8e29]
T: MutableEntry<(org.jetbrains.kotlin.builtins.PrimitiveType..org.jetbrains.kotlin.builtins.PrimitiveType?), (kotlin.String..kotlin.String?)>

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1fabd6fb]
T: JsExpression

public inline fun <T> kotlin.collections.Iterable<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@67d430c7]
T: [@kotlin.internal.NoInfer] IrConstructor

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1fabd6fb]
T: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: MutableMap<IrSymbol, Function2<IrCall, [@kotlin.ParameterName] JsGenerationContext, JsExpression>>

public abstract operator fun next(): org.jetbrains.kotlin.ir.declarations.IrPackageFragment defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@65202d32]
T: IrPackageFragment

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrDeclaration defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@295846f4]
T: IrDeclaration

public abstract operator fun next(): org.jetbrains.kotlin.ir.declarations.IrPackageFragment defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2030ffde]
T: IrPackageFragment

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrDeclaration defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@7cf9923b]
T: IrDeclaration

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrDeclaration defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@6a6fdaa5]
T: IrDeclaration

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@16130005]
V: IrField

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrFieldImpl

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@16130005]
V: IrConstructor

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrConstructorImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrValueParameter

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@3addf160]
T: IrValueParameter

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@16130005]
V: IrField

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrSimpleFunction

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@24ae09c7]
R: MutableMap<IrClassifierSymbol, IrSimpleFunctionSymbol>

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1fabd6fb]
T: PropertyDescriptor

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1fabd6fb]
T: SimpleFunctionDescriptor


public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrModuleFragment[DeserializedSimpleFunctionDescriptor@60d4cb48]
R: Unit

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrModuleFragment[DeserializedSimpleFunctionDescriptor@60d4cb48]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrConstructorCallImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrVariableImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrFieldImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrValueParameter

public fun <Context : org.jetbrains.kotlin.backend.common.CommonBackendContext, Input, Output> org.jetbrains.kotlin.backend.common.phaser.CompilerPhase<Context, Input, Output>.invokeToplevel(phaseConfig: org.jetbrains.kotlin.backend.common.phaser.PhaseConfig, context: Context, input: Input): Output defined in org.jetbrains.kotlin.backend.common.phaser[DeserializedSimpleFunctionDescriptor@135587fd]
Output: IrModuleFragment

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrModuleFragment[DeserializedSimpleFunctionDescriptor@60d4cb48]
R: JsNode

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

public final operator fun component2(): org.jetbrains.kotlin.ir.types.IrType defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@5ed5d281]
T: IrType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCallImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrValueParameterImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrTypeParameterImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrFunctionImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrVariableImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Boolean

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrCall


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall


@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrBlockImpl

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@68b53057]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrExpressionBody

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrFunction[DeserializedSimpleFunctionDescriptor@16c96d87]
R: IrElement

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrBlockBodyImpl

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5cf57c19]
T: IrStatement

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrExpressionBody


public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.IrStatement): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@71d09f67]
E: IrStatement

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.IrStatement): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@71d09f67]
E: IrStatement

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrVariable

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5cf57c19]
T: IrStatement

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5cf57c19]
T: IrStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: MutableList<IrStatement>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: MutableList<IrStatement>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: MutableList<IrStatement>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: MutableList<IrStatement>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrSetFieldImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrSetFieldImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrSetFieldImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrGetValueImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrSetFieldImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrSetVariableImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: MutableList<IrStatement>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: MutableList<IrStatement>

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5cf57c19]
T: IrStatement

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrWhileLoop

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrWhileLoop

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrDoWhileLoopImpl

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5cf57c19]
T: IrStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: MutableList<IrStatement>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: MutableList<IrStatement>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrBlockImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrDoWhileLoopImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrDoWhileLoop

public final operator fun component1(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@54bb1a80]
A: IrExpression

public final operator fun component2(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@1c2579e1]
B: IrExpression

public final operator fun component3(): org.jetbrains.kotlin.ir.expressions.IrBranch defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@6fd0d4d5]
C: IrBranch

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrWhenImpl

public final operator fun component1(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@54bb1a80]
A: IrExpression

public final operator fun component2(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@1c2579e1]
B: IrExpression

public final operator fun component3(): org.jetbrains.kotlin.ir.expressions.IrBranch defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@6fd0d4d5]
C: IrBranch

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5cf57c19]
T: IrStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: List<IrStatement>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: List<IrStatement>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrBlockImpl

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@24ae09c7]
R: IrBlockImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrGetFieldImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrGetClassImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrStringConcatenationImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrStringConcatenationImpl

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.ir.expressions.IrExpression?> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@e586325]
T: IndexedValue<IrExpression?>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: MutableList<IrStatement>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: MutableList<IrStatement>

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5cf57c19]
T: IrStatement

public final operator fun component2(): org.jetbrains.kotlin.ir.expressions.IrVarargElement defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@341cf9cf]
T: IrVarargElement

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrSpreadElementImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrSpreadElementImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrVarargImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrVarargImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrCompositeImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrCompositeImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrDynamicMemberExpression

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.expressions.IrExpression): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@69e6b285]
E: IrExpression

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.expressions.IrExpression): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@69e6b285]
E: IrExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrCompositeImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: Unit

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@3e7333db]
E: IrStatement

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5cf57c19]
T: IrStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrBlockImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrBlockImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrTryImpl

public final operator fun component1(): org.jetbrains.kotlin.ir.expressions.IrBranch defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@2d06db54]
A: IrBranch

public final operator fun component2(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@503d4046]
B: IrExpression

public final operator fun component3(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@620dc93e]
C: IrExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrWhenImpl

public final operator fun component1(): org.jetbrains.kotlin.ir.expressions.IrBranch defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@2d06db54]
A: IrBranch

public final operator fun component2(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@503d4046]
B: IrExpression

public final operator fun component3(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@620dc93e]
C: IrExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrWhenImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: FunctionAndSignature

public abstract operator fun next(): org.jetbrains.kotlin.backend.common.bridges.Bridge<org.jetbrains.kotlin.ir.backend.js.lower.FunctionAndSignature> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6831fbe2]
T: Bridge<FunctionAndSignature>

public final operator fun component1(): org.jetbrains.kotlin.ir.backend.js.lower.FunctionAndSignature defined in org.jetbrains.kotlin.backend.common.bridges.Bridge[DeserializedSimpleFunctionDescriptor@11695333]
Signature: FunctionAndSignature

public final operator fun component2(): org.jetbrains.kotlin.ir.backend.js.lower.FunctionAndSignature defined in org.jetbrains.kotlin.backend.common.bridges.Bridge[DeserializedSimpleFunctionDescriptor@6d2a8abb]
Signature: FunctionAndSignature

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrValueParameterImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrValueParameterImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrSimpleFunction

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@68b53057]
E: IrValueParameter


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Unit

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@68b53057]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrBlockBody

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@16130005]
V: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCallImpl

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@16130005]
V: IrSimpleFunction

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@16130005]
V: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrFunction


public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.ir.IrStatement> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@52c45010]
A: List<IrStatement>

public final operator fun component2(): org.jetbrains.kotlin.ir.symbols.IrValueSymbol defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@30b17ca8]
B: IrValueSymbol

val irNull: () -> org.jetbrains.kotlin.ir.expressions.impl.IrConstImpl<kotlin.Nothing?> defined in org.jetbrains.kotlin.ir.backend.js.lower.CallableReferenceLowering.generateFactoryBodyWithGuard[LocalVariableDescriptor@101e705] +++|+++
R: IrConstImpl<Nothing?>

val irCacheValue: () -> org.jetbrains.kotlin.ir.expressions.impl.IrGetValueImpl defined in org.jetbrains.kotlin.ir.backend.js.lower.CallableReferenceLowering.generateFactoryBodyWithGuard[LocalVariableDescriptor@433f0d73] +++|+++
R: IrGetValueImpl

val irNull: () -> org.jetbrains.kotlin.ir.expressions.impl.IrConstImpl<kotlin.Nothing?> defined in org.jetbrains.kotlin.ir.backend.js.lower.CallableReferenceLowering.generateFactoryBodyWithGuard[LocalVariableDescriptor@101e705] +++|+++
R: IrConstImpl<Nothing?>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: MutableList<IrStatement>

val irCacheValue: () -> org.jetbrains.kotlin.ir.expressions.impl.IrGetValueImpl defined in org.jetbrains.kotlin.ir.backend.js.lower.CallableReferenceLowering.generateFactoryBodyWithGuard[LocalVariableDescriptor@433f0d73] +++|+++
R: IrGetValueImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: {Comparable<{Boolean & Int}> & java.io.Serializable}

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: {Comparable<{Boolean & Int}> & java.io.Serializable}

public abstract operator fun next(): kotlin.Pair<kotlin.Int, org.jetbrains.kotlin.ir.declarations.IrValueParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3779dc50]
T: Pair<Int, IrValueParameter>

public final operator fun component1(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@48367c1b]
A: Int

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@63af31e8]
B: IrValueParameter

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.types.IrType defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6d681099]
E: IrType

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: String

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrValueParameter

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5cf57c19]
T: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrValueParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@68b53057]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Unit

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.ir.declarations.IrValueParameter> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3f0e2fd7]
T: IndexedValue<IrValueParameter>

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@2df00a9b]
T: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrValueParameterImpl

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrTypeParameter defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@2126eb08]
T: IrTypeParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrTypeParameterImpl

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.symbols.IrValueParameterSymbol defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@32c66fc5]
E: IrValueParameterSymbol

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.symbols.IrValueParameterSymbol defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6eeee96b]
E: IrValueParameterSymbol

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.symbols.IrValueParameterSymbol defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@32c66fc5]
E: IrValueParameterSymbol

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.symbols.IrValueParameterSymbol defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6eeee96b]
E: IrValueParameterSymbol

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.symbols.IrValueParameterSymbol defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@32c66fc5]
E: IrValueParameterSymbol

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.symbols.IrValueParameterSymbol defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6eeee96b]
E: IrValueParameterSymbol

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.symbols.IrValueParameterSymbol defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6eeee96b]
E: IrValueParameterSymbol

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@68b53057]
E: IrValueParameter


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrDynamicOperatorExpressionImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

public abstract operator fun next(): kotlin.collections.Map.Entry<kotlin.reflect.KFunction1<org.jetbrains.kotlin.ir.types.IrType, kotlin.Boolean>, org.jetbrains.kotlin.ir.declarations.IrSimpleFunction> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1d9c3a0a]
T: Entry<KFunction1<IrType, Boolean>, IrSimpleFunction>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@65a4ab0d]
K: KFunction1<IrType, Boolean>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@a44e87c]
V: IrSimpleFunction

val typePredicate: kotlin.reflect.KFunction1<org.jetbrains.kotlin.ir.types.IrType, kotlin.Boolean> defined in org.jetbrains.kotlin.ir.backend.js.lower.ClassReferenceLowering.getFinalPrimitiveKClass[LocalVariableDescriptor@13626884] +++|+++
R: Boolean

public abstract operator fun next(): kotlin.collections.Map.Entry<kotlin.reflect.KFunction1<org.jetbrains.kotlin.ir.types.IrType, kotlin.Boolean>, org.jetbrains.kotlin.ir.declarations.IrSimpleFunction> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@72951555]
T: Entry<KFunction1<IrType, Boolean>, IrSimpleFunction>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@65a4ab0d]
K: KFunction1<IrType, Boolean>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@a44e87c]
V: IrSimpleFunction

val typePredicate: kotlin.reflect.KFunction1<org.jetbrains.kotlin.ir.types.IrType, kotlin.Boolean> defined in org.jetbrains.kotlin.ir.backend.js.lower.ClassReferenceLowering.getOpenPrimitiveKClass[LocalVariableDescriptor@125b2502] +++|+++
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@64b9142]
T: IrConstructorSymbol

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2655e9ad]
T: IrValueParameter


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrConstructorCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@65a6a9ef]
R: Nothing

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@16130005]
V: IrField

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrGetFieldImpl

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@16130005]
V: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrCall

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrFieldImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrFieldImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrConstructorImpl

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@68b53057]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrDelegatingConstructorCall

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@65a4ab0d]
K: IrConstructorSymbol

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@a44e87c]
V: IrConstructor

public inline fun <T> kotlin.collections.Iterable<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@67d430c7]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.ir.declarations.IrEnumEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5cb441a2]
T: [@kotlin.internal.NoInfer] IrEnumEntry

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrFunctionAccessExpression

public abstract operator fun next(): org.jetbrains.kotlin.ir.declarations.IrEnumEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3540dc97]
T: [@kotlin.internal.NoInfer] IrEnumEntry

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrExpressionBodyImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrField

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrSetFieldImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrSetFieldImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrBlockBody

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrSimpleFunction

public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.ir.declarations.IrEnumEntry, org.jetbrains.kotlin.ir.declarations.IrField> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@54b5e126]
T: Pair<[@kotlin.internal.NoInfer] IrEnumEntry, IrField>

public final operator fun component1(): org.jetbrains.kotlin.ir.declarations.IrEnumEntry defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@c27518b]
A: [@kotlin.internal.NoInfer] IrEnumEntry

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrField defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3c056ffa]
B: IrField

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrSimpleFunction

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@16130005]
V: IrSimpleFunction

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrField defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3f34dc15]
E: IrField

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrSimpleFunction

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@68b53057]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrBlockBody

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrBlockBody

public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.ir.declarations.IrEnumEntry, org.jetbrains.kotlin.ir.declarations.IrVariable> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@cdd0be0]
T: Pair<[@kotlin.internal.NoInfer] IrEnumEntry, IrVariable>

public final operator fun component1(): org.jetbrains.kotlin.ir.declarations.IrEnumEntry defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@33d0537]
A: [@kotlin.internal.NoInfer] IrEnumEntry

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrVariable defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3d560d59]
B: IrVariable

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrSetVariableImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrSetVariableImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrBlockBody

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrExpressionBodyImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrField

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Boolean

public inline fun <T> kotlin.sequences.Sequence<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@5015a079]
T: IrFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

public inline fun <T> kotlin.collections.Iterable<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2ce284a0]
T: IrSimpleFunction

public abstract val value: org.jetbrains.kotlin.ir.declarations.IrFunction defined in kotlin.collections.MutableMap.MutableEntry[DeserializedPropertyDescriptor@242d910b]
V: IrFunction

public inline fun <T> kotlin.collections.Iterable<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2ce284a0]
T: MutableEntry<IrFunction, IrFunction>

public abstract val key: org.jetbrains.kotlin.ir.declarations.IrFunction defined in kotlin.collections.MutableMap.MutableEntry[DeserializedPropertyDescriptor@b6eeb40]
K: IrFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrFunctionReferenceImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCallImpl

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@16130005]
V: IrPackageFragment

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrPackageFragment

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@16130005]
V: IrPackageFragment

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrPackageFragment

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrDeclaration defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@160a4968]
T: IrDeclaration

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrTry

public abstract operator fun next(): org.jetbrains.kotlin.ir.expressions.IrCatch defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7744141f]
T: IrCatch

val pendingException: () -> org.jetbrains.kotlin.ir.expressions.impl.IrGetValueImpl defined in org.jetbrains.kotlin.ir.backend.js.lower.MultipleCatchesLowering.lower.<no name provided>.visitTry[LocalVariableDescriptor@307858e4] +++|+++
R: IrGetValueImpl

val pendingException: () -> org.jetbrains.kotlin.ir.expressions.impl.IrGetValueImpl defined in org.jetbrains.kotlin.ir.backend.js.lower.MultipleCatchesLowering.lower.<no name provided>.visitTry[LocalVariableDescriptor@307858e4] +++|+++
R: IrGetValueImpl

val castedPendingException: () -> org.jetbrains.kotlin.ir.expressions.impl.IrExpressionBase defined in org.jetbrains.kotlin.ir.backend.js.lower.MultipleCatchesLowering.lower.<no name provided>.visitTry[LocalVariableDescriptor@6d90d66b] +++|+++
R: IrExpressionBase

val pendingException: () -> org.jetbrains.kotlin.ir.expressions.impl.IrGetValueImpl defined in org.jetbrains.kotlin.ir.backend.js.lower.MultipleCatchesLowering.lower.<no name provided>.visitTry[LocalVariableDescriptor@307858e4] +++|+++
R: IrGetValueImpl

val pendingException: () -> org.jetbrains.kotlin.ir.expressions.impl.IrGetValueImpl defined in org.jetbrains.kotlin.ir.backend.js.lower.MultipleCatchesLowering.lower.<no name provided>.visitTry[LocalVariableDescriptor@307858e4] +++|+++
R: IrGetValueImpl

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2655e9ad]
T: IrCatch

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5cf57c19]
T: IrCatch

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrCatchImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrTryImpl

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@16130005]
V: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrField

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrDelegatingConstructorCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrBlockBodyImpl

public inline fun <T> kotlin.collections.Iterable<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@67d430c7]
T: [@kotlin.internal.NoInfer] IrSimpleFunction

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrProperty

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: List<IrSimpleFunction>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: List<IrSimpleFunction>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrCall

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrCall

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrCallableReference

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrCallableReference

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Unit


@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrFunctionImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrFunctionImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrValueParameterImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrGetValueImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrGetValueImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrGetValueImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrGetValueImpl

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@16130005]
V: ConstructorPair

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrTypeParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@5ea3a289]
E: IrTypeParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@68b53057]
E: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrCall

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5cf57c19]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrBlockBodyImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrSimpleFunction

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrSimpleFunction

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrFile[DeserializedSimpleFunctionDescriptor@2f769e56]
R: IrElement

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@16130005]
V: ConstructorPair

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCallImpl

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@16130005]
V: ConstructorPair

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5cf57c19]
T: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrGetValueImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCallImpl

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrDeclaration defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@51f1bbed]
T: IrDeclaration

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@16130005]
V: FunctionWithBody

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall


@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: FunctionWithBody


@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: FunctionWithBody

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCompositeImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrTryImpl

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@7938af57]
T: [@kotlin.internal.NoInfer] IrConstructor

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrConstructorCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrConstructorCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: IrConstructorCallImpl

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@68b53057]
E: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrCallImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrExpression

val argument: () -> org.jetbrains.kotlin.ir.expressions.IrExpressionWithCopy defined in org.jetbrains.kotlin.ir.backend.js.lower.TypeOperatorLowering.lower.<no name provided>.lowerImplicitNotNull[LocalVariableDescriptor@4f78812e] +++|+++
R: IrExpressionWithCopy

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

val argument: () -> org.jetbrains.kotlin.ir.expressions.IrExpressionWithCopy defined in org.jetbrains.kotlin.ir.backend.js.lower.TypeOperatorLowering.lower.<no name provided>.lowerImplicitNotNull[LocalVariableDescriptor@4f78812e] +++|+++
R: IrExpressionWithCopy

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrCompositeImpl

val argument: () -> org.jetbrains.kotlin.ir.expressions.IrExpressionWithCopy defined in org.jetbrains.kotlin.ir.backend.js.lower.TypeOperatorLowering.lower.<no name provided>.lowerCast[LocalVariableDescriptor@3779dc15] +++|+++
R: IrExpressionWithCopy

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrCompositeImpl




@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrWhen

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrWhen

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrWhen

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrWhen

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@24ae09c7]
R: IrExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrCompositeImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrExpression

val argument: () -> org.jetbrains.kotlin.ir.expressions.IrExpressionWithCopy defined in org.jetbrains.kotlin.ir.backend.js.lower.TypeOperatorLowering.lower.<no name provided>.lowerIntegerCoercion[LocalVariableDescriptor@15b90d57] +++|+++
R: IrExpressionWithCopy

val argument: () -> org.jetbrains.kotlin.ir.expressions.IrExpressionWithCopy defined in org.jetbrains.kotlin.ir.backend.js.lower.TypeOperatorLowering.lower.<no name provided>.lowerIntegerCoercion[LocalVariableDescriptor@15b90d57] +++|+++
R: IrExpressionWithCopy

val argument: () -> org.jetbrains.kotlin.ir.expressions.IrExpressionWithCopy defined in org.jetbrains.kotlin.ir.backend.js.lower.TypeOperatorLowering.lower.<no name provided>.lowerIntegerCoercion[LocalVariableDescriptor@15b90d57] +++|+++
R: IrExpressionWithCopy

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

val argument: () -> org.jetbrains.kotlin.ir.expressions.IrExpressionWithCopy defined in org.jetbrains.kotlin.ir.backend.js.lower.TypeOperatorLowering.lower.<no name provided>.lowerIntegerCoercion[LocalVariableDescriptor@15b90d57] +++|+++
R: IrExpressionWithCopy

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrCompositeImpl

public abstract val key: org.jetbrains.kotlin.ir.symbols.IrClassSymbol defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@39a19882]
K: IrClassSymbol

@kotlin.SinceKotlin public fun <K, V> kotlin.collections.Map<K, V>.getValue(key: K): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@52659177]
V: IrSimpleFunctionSymbol

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCallImpl

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@7938af57]
T: IrConstructor

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrConstructorCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@65a6a9ef]
R: IrConstructorCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@65a6a9ef]
R: IrConstructorCallImpl

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@65a6a9ef]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@65a6a9ef]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.ir.expressions.IrVarargElement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@49d66de]
T: IrVarargElement

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@65a6a9ef]
R: Nothing

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2655e9ad]
T: IrExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCallImpl

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@68b53057]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@65a6a9ef]
R: IrExpression

public abstract operator fun next(): org.jetbrains.kotlin.ir.backend.js.lower.calls.CallsTransformer defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1d6dc1e5]
T: CallsTransformer



@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: PrimitiveType

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCallImpl


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Boolean

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@68b53057]
E: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: List<[@kotlin.internal.NoInfer] IrSimpleFunction>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrDynamicOperatorExpressionImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrDynamicOperatorExpressionImpl


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: Boolean


@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: Function1<IrFunctionAccessExpression, IrExpression>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrValueParameter


@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: Function1<IrFunctionAccessExpression, IrExpression>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrValueParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@68b53057]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@65a6a9ef]
R: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCallImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCallImpl



@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrDynamicOperatorExpressionImpl


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrTryImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrDoWhileLoopImpl

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@16130005]
V: IrFieldSymbol

@kotlin.SinceKotlin public fun <K, V> kotlin.collections.Map<K, V>.getValue(key: K): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@52659177]
V: IrField

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@16130005]
V: IrFieldSymbol

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

public abstract operator fun next(): org.jetbrains.kotlin.ir.declarations.IrConstructor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1cb1ea31]
T: IrConstructor

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrFunctionAccessExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrFunctionAccessExpression

public final val action: (org.jetbrains.kotlin.ir.backend.js.lower.coroutines.SuspendState) -> org.jetbrains.kotlin.ir.expressions.IrExpression defined in org.jetbrains.kotlin.ir.backend.js.lower.coroutines.DispatchPointTransformer[PropertyDescriptorImpl@2c11719b] +++|+++
R: IrExpression

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall


public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.IrStatement): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@71d09f67]
E: IrStatement

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.ir.IrStatement): org.jetbrains.kotlin.ir.IrStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@71d09f67]
E: IrStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Unit


@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

public abstract operator fun next(): org.jetbrains.kotlin.ir.expressions.IrBranch defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@74768506]
T: IrBranch

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrSetVariable

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrTypeOperatorCall

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrVariable

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrGetField

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrGetClass

public inline fun <T, R> kotlin.Array<out T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2dfb1f03]
R: Int

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlin.ir.expressions.IrExpression?> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@758436a1]
T: IndexedValue<IrExpression?>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrVariable

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrSetFieldImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrSetFieldImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrStringConcatenationImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrStringConcatenationImpl

public final operator fun component1(): org.jetbrains.kotlin.ir.backend.js.lower.coroutines.SuspendState defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3b0f59c8]
A: SuspendState

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrReturn

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrThrow

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrSetVariableImpl

public fun <E> kotlin.collections.MutableList<E>.pop(): E defined in org.jetbrains.kotlin.backend.common[DeserializedSimpleFunctionDescriptor@478f955e]
E: SuspendState

public abstract operator fun next(): org.jetbrains.kotlin.ir.expressions.IrCatch defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5ccc1b70]
T: IrCatch

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrVariable

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: IrSetVariableImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCall

private final val receiver: () -> org.jetbrains.kotlin.ir.expressions.IrExpression defined in org.jetbrains.kotlin.ir.backend.js.lower.coroutines.LiveLocalsTransformer[PropertyDescriptorImpl@5b476f57] +++|+++
R: IrExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrGetFieldImpl

private final val receiver: () -> org.jetbrains.kotlin.ir.expressions.IrExpression defined in org.jetbrains.kotlin.ir.backend.js.lower.coroutines.LiveLocalsTransformer[PropertyDescriptorImpl@5b476f57] +++|+++
R: IrExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrSetFieldImpl

private final val receiver: () -> org.jetbrains.kotlin.ir.expressions.IrExpression defined in org.jetbrains.kotlin.ir.backend.js.lower.coroutines.LiveLocalsTransformer[PropertyDescriptorImpl@5b476f57] +++|+++
R: IrExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrSetFieldImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7f551c04]
R: IrSetFieldImpl

public abstract operator fun invoke(p1: org.jetbrains.kotlin.ir.expressions.IrReturn): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Function1[FunctionInvokeDescriptor@56283f9f]
R: IrExpression

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrVariable

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrVariable

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrDoWhileLoopImpl

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrDoWhileLoopImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrDoWhileLoopImpl

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2480519f]
T: IrDoWhileLoopImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCompositeImpl

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: IrCompositeImpl

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrSimpleFunction[DeserializedSimpleFunctionDescriptor@260e93e4]
R: JsFunction

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrConstructor[DeserializedSimpleFunctionDescriptor@104420b8]
R: JsFunction

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpressionBody[DeserializedSimpleFunctionDescriptor@300d0c13]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrVariable[DeserializedSimpleFunctionDescriptor@48ff94fd]
R: JsStatement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrVarargElement[DeserializedSimpleFunctionDescriptor@23ebe5b6]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrFunction[DeserializedSimpleFunctionDescriptor@16c96d87]
R: JsFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: JsFunction

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@24ae09c7]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5cf57c19]
T: IrValueParameter

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1fabd6fb]
T: JsExpression

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1fabd6fb]
T: JsExpression

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5cf57c19]
T: JsStatement

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.js.backend.ast.JsStatement): org.jetbrains.kotlin.js.backend.ast.JsStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@16e89a9b]
E: JsStatement

public abstract operator fun set(index: kotlin.Int, element: org.jetbrains.kotlin.js.backend.ast.JsStatement): org.jetbrains.kotlin.js.backend.ast.JsStatement defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@16e89a9b]
E: JsStatement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrStatement[DeserializedSimpleFunctionDescriptor@6dada211]
R: JsStatement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrStatement[DeserializedSimpleFunctionDescriptor@6dada211]
R: JsStatement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.IrStatement[DeserializedSimpleFunctionDescriptor@6dada211]
R: JsStatement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: JsNameRef

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: JsNameRef

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: JsNameRef

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: JsNameRef

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall[DeserializedSimpleFunctionDescriptor@7155b505]
R: JsExpression

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1fabd6fb]
T: JsStatement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsStatement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: JsCatch

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsStatement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public final operator fun component2(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@93b559]
B: IrExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsStatement

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: JsCase

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@b8e9a12]
T: JsSwitchMember

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: JsLabel

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: JsLabel

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: JsLabel

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: JsLabel

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrDeclaration[DeserializedSimpleFunctionDescriptor@520c5208]
R: JsStatement

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrFile[DeserializedSimpleFunctionDescriptor@2f769e56]
R: JsBlock

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrFile defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@2dab5547]
T: IrFile

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrDeclaration defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@43eafbf3]
T: IrDeclaration

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: JsObjectLiteral

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@65a6a9ef]
R: List<IrPackageFragment>

public final operator fun component1(): kotlin.collections.MutableList<org.jetbrains.kotlin.js.backend.ast.JsStatement> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@15835551]
A: MutableList<JsStatement>

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.js.backend.ast.JsImportedModule> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@56bb8ee5]
B: List<JsImportedModule>

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@65a6a9ef]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@65a6a9ef]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@65a6a9ef]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: List<JsStatement>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: List<JsStatement>


public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrFile defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@172e1777]
T: IrFile



@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Nothing

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrDeclaration defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@587f538a]
T: IrDeclaration

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrDeclaration[DeserializedSimpleFunctionDescriptor@520c5208]
R: JsStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Unit

public abstract fun next(): org.jetbrains.kotlin.ir.declarations.IrProperty defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@5cb948dc]
T: IrProperty

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.declarations.IrSimpleFunction[DeserializedSimpleFunctionDescriptor@260e93e4]
R: JsFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@45c0bf06]
T: JsFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Unit

public inline fun <T> kotlin.collections.Iterable<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2ce284a0]
T: [@kotlin.internal.NoInfer] IrSimpleFunction

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6ced180b]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6ced180b]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6ced180b]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6ced180b]
E: JsExpression


public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsImportedModule defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5b097e54]
T: JsImportedModule

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsImportedModule defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2fa41600]
T: JsImportedModule

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: T

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression


public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrBody[DeserializedSimpleFunctionDescriptor@48d31ff]
R: JsStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Unit


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Nothing

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1fabd6fb]
T: JsExpression

public final operator fun component1(): org.jetbrains.kotlin.ir.declarations.IrSimpleFunction defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2c0ddb59]
A: IrSimpleFunction

public final operator fun component2(): org.jetbrains.kotlin.ir.declarations.IrClass defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@56408c3e]
B: IrClass

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: List<JsExpression>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: List<JsExpression>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Nothing

public abstract fun <R, D> accept(visitor: org.jetbrains.kotlin.ir.visitors.IrElementVisitor<R, D>, data: D): R defined in org.jetbrains.kotlin.ir.expressions.IrExpression[DeserializedSimpleFunctionDescriptor@640d09f8]
R: JsExpression


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: JsStatement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: JsStatement

public abstract val value: kotlin.String defined in org.jetbrains.kotlin.ir.expressions.IrConst[DeserializedPropertyDescriptor@4622a9cf]
T: String

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1fabd6fb]
T: IrValueParameter

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1fabd6fb]
T: IrTypeArgument

public final val first: kotlin.String defined in kotlin.Pair[DeserializedPropertyDescriptor@4b7ee1de]
A: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Unit

public final val second: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction defined in kotlin.Pair[DeserializedPropertyDescriptor@183398b1]
B: IrSimpleFunction

public final operator fun component1(): org.jetbrains.kotlin.ir.declarations.IrDeclaration defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@73ff1615]
A: IrDeclaration

public final operator fun component2(): kotlin.String defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@156ec6c8]
B: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Unit

public final operator fun component1(): org.jetbrains.kotlin.ir.declarations.IrDeclaration defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@761672e1]
A: IrDeclaration

public final operator fun component2(): org.jetbrains.kotlin.ir.backend.js.utils.NameTable<org.jetbrains.kotlin.ir.declarations.IrDeclaration> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@53484cf0]
B: NameTable<IrDeclaration>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5247a49c]
R: Char

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1bd4d529]
E: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@43d16dea]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@43d16dea]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@43d16dea]
R: Unit

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@b442d72]
E: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@b442d72]
E: JsExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@43d16dea]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@43d16dea]
R: Nothing

public final operator fun component1(): org.jetbrains.kotlin.js.backend.ast.JsFunction defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1a8293d7]
A: JsFunction

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.js.dce.Context.Node> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@60b8e889]
B: List<Node>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@43d16dea]
R: Nothing

public final operator fun component1(): org.jetbrains.kotlin.js.backend.ast.JsFunction defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1a8293d7]
A: JsFunction

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.js.dce.Context.Node> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@60b8e889]
B: List<Node>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@43d16dea]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@43d16dea]
R: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1a0e7364]
T: Node

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@8f2959b]
T: JsReturn

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@43d16dea]
R: Nothing

public abstract operator fun next(): kotlin.Pair<(org.jetbrains.kotlin.js.backend.ast.JsParameter..org.jetbrains.kotlin.js.backend.ast.JsParameter?), org.jetbrains.kotlin.js.backend.ast.JsExpression> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@21d971c0]
T: Pair<(org.jetbrains.kotlin.js.backend.ast.JsParameter..org.jetbrains.kotlin.js.backend.ast.JsParameter?), JsExpression>

public final operator fun component2(): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@19267e49]
B: JsExpression

public abstract operator fun next(): kotlin.Pair<(org.jetbrains.kotlin.js.backend.ast.JsParameter..org.jetbrains.kotlin.js.backend.ast.JsParameter?), org.jetbrains.kotlin.js.dce.Context.Node> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6a31f97b]
T: Pair<(org.jetbrains.kotlin.js.backend.ast.JsParameter..org.jetbrains.kotlin.js.backend.ast.JsParameter?), Node>

public final operator fun component2(): org.jetbrains.kotlin.js.dce.Context.Node defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@78dfca24]
B: Node

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@43d16dea]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@43d16dea]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@43d16dea]
R: Unit

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<org.jetbrains.kotlin.js.backend.ast.JsName, org.jetbrains.kotlin.js.backend.ast.metadata.SpecialFunction> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@520b013a]
T: MutableEntry<JsName, SpecialFunction>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6cb5145e]
K: JsName

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@a4031d3]
V: SpecialFunction

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@323e3f44]
R: Node

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@43d16dea]
R: Nothing

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10b90aba]
V: Node

public final operator fun component1(): kotlin.String defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@70cfcfd2]
A: String

public final operator fun component2(): org.jetbrains.kotlin.js.dce.Context.Node defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3b49289c]
B: Node

public final operator fun component1(): kotlin.collections.List<kotlin.Pair<kotlin.String, org.jetbrains.kotlin.js.dce.Context.Node>> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@13180a9e]
A: List<Pair<String, Node>>

public final operator fun component2(): kotlin.collections.List<kotlin.Pair<kotlin.String, org.jetbrains.kotlin.js.dce.Context.Node>> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6a64554d]
B: List<Pair<String, Node>>

public abstract operator fun next(): kotlin.Pair<kotlin.String, org.jetbrains.kotlin.js.dce.Context.Node> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3b5e9956]
T: Pair<String, Node>

public final operator fun component1(): kotlin.String defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@70cfcfd2]
A: String

public final operator fun component2(): org.jetbrains.kotlin.js.dce.Context.Node defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3b49289c]
B: Node

public abstract operator fun next(): kotlin.Pair<kotlin.String, org.jetbrains.kotlin.js.dce.Context.Node> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7a0883aa]
T: Pair<String, Node>

public final operator fun component1(): kotlin.String defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@70cfcfd2]
A: String

public final operator fun component2(): org.jetbrains.kotlin.js.dce.Context.Node defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3b49289c]
B: Node

public fun <T> kotlin.sequences.Sequence<T>.last(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@558a0374]
T: Node

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@f7f0bee]
T: JsName

public abstract fun next(): kotlin.String defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@8651f20]
T: String

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@323e3f44]
R: Node

public final val reader: () -> java.io.InputStream defined in org.jetbrains.kotlin.js.dce.InputResource[PropertyDescriptorImpl@43766ab0] +++|+++
R: InputStream

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@43d16dea]
R: InputStreamReader

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@571e7e3a]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@7afb5753]
R: Nothing

public final val reader: () -> java.io.InputStream defined in org.jetbrains.kotlin.js.dce.InputResource[PropertyDescriptorImpl@43766ab0] +++|+++
R: InputStream

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@43d16dea]
R: SourceMapParseResult


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@43d16dea]
R: Unit

public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.js.dce.InputFile, org.jetbrains.kotlin.js.backend.ast.JsGlobalBlock> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3ca3cbee]
T: Pair<InputFile, JsGlobalBlock>

public final operator fun component1(): org.jetbrains.kotlin.js.dce.InputFile defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4c2b871b]
A: InputFile

public final operator fun component2(): org.jetbrains.kotlin.js.backend.ast.JsGlobalBlock defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@50ea2da8]
B: JsGlobalBlock

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1da5edb1]
R: Unit

private final val logConsumer: (org.jetbrains.kotlin.js.dce.DCELogLevel, kotlin.String) -> kotlin.Unit defined in org.jetbrains.kotlin.js.dce.DeadCodeElimination.Companion.Reporter[PropertyDescriptorImpl@64702bb7] +++|+++
R: Unit

private final val logConsumer: (org.jetbrains.kotlin.js.dce.DCELogLevel, kotlin.String) -> kotlin.Unit defined in org.jetbrains.kotlin.js.dce.DeadCodeElimination.Companion.Reporter[PropertyDescriptorImpl@64702bb7] +++|+++
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@43d16dea]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@43d16dea]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@43d16dea]
R: Unit


public final operator fun component1(): kotlin.String defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7c54c9a2]
A: String

public final operator fun component2(): org.jetbrains.kotlin.js.dce.Context.Node defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2ede2b55]
B: Node

public abstract fun next(): org.jetbrains.kotlin.js.backend.ast.JsFunction defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@68d89613]
T: JsFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@43d16dea]
R: Unit

public abstract fun next(): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@172ca853]
T: JsExpression

public abstract fun next(): org.jetbrains.kotlin.js.dce.Context.Node defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@723751a4]
T: Node

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@323e3f44]
R: Node

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@43d16dea]
R: Unit

public abstract fun next(): org.jetbrains.kotlin.js.backend.ast.JsExpression defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@172ca853]
T: JsExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@43d16dea]
R: Nothing

private final val logConsumer: (org.jetbrains.kotlin.js.dce.DCELogLevel, kotlin.String) -> kotlin.Unit defined in org.jetbrains.kotlin.js.dce.ReachabilityTracker[PropertyDescriptorImpl@10600b6b] +++|+++
R: Unit



public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@54a7c546]
T: String

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@63c12576]
T: MessageCollector

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7fc7b8ad]
T: String

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3fa6163a]
T: String

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@63c12576]
T: MessageCollector

public abstract operator fun next(): org.jetbrains.kotlin.js.dce.InputFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@67be466d]
T: InputFile

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@26705ecb]
R: Nothing

public abstract operator fun next(): org.jetbrains.kotlin.js.dce.Context.Node defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3ecbd2ca]
T: Node

public abstract operator fun next(): org.jetbrains.kotlin.js.dce.InputFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3a7ab074]
T: InputFile

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@26705ecb]
R: Unit

public final val lastModified: () -> kotlin.Long defined in org.jetbrains.kotlin.js.dce.InputResource[DeserializedPropertyDescriptor@5c21de0d] +++|+++
R: Long

public final val reader: () -> java.io.InputStream defined in org.jetbrains.kotlin.js.dce.InputResource[DeserializedPropertyDescriptor@6c29fabb] +++|+++
R: InputStream

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@cf148b]
R: Long

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@cf148b]
R: Long

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@cf148b]
R: Long

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@cf148b]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@26705ecb]
R: InputResource

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@26705ecb]
R: InputResource

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@26705ecb]
R: InputResource

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@26705ecb]
R: InputResource

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@cf148b]
R: List<InputFile>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@26705ecb]
R: InputResource

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@26705ecb]
R: InputResource

public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@2b6d0c9c]
T: String

public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@2b6d0c9c]
T: String

public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@2b6d0c9c]
T: String

public abstract fun next(): java.io.File defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@305fa387]
T: File

public abstract operator fun next(): org.jetbrains.kotlin.js.backend.ast.JsStatement defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3c6d390a]
T: JsStatement

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: Unit

public final val result: org.jetbrains.kotlin.daemon.common.ReplStateFacade defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult.Good[PropertyDescriptorImpl@36290ed2]
R: ReplStateFacade

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: CallResult<Set<String>>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: CallResult<Int>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: CallResult<Int>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: CallResult<ReplStateFacadeAsync>

public final val result: org.jetbrains.kotlin.daemon.common.ReplStateFacadeAsync defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult.Good[PropertyDescriptorImpl@7b27b1e9]
R: ReplStateFacadeAsync

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: CallResult<Long>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: CallResult<DaemonOptions>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: CallResult<String>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: CallResult<DaemonJVMOptions>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: CallResult<Nothing>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: CallResult<List<String>>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: CallResult<Int>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: CallResult<Nothing>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: CallResult<Nothing>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: CallResult<Boolean>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: Unit

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: CallResult<Nothing>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: CallResult<ReplCheckResult>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: CallResult<ReplCompileResult>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: Boolean

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: Unit

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@20604463]
V: SimplePerfCountersWithTotal

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@20604463]
V: SimplePerfCountersWithTotal

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: Int

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: Int

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: ILineId

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: List<ILineId>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@69d24250]
T: List<ILineId>

public abstract fun get(receiver: C): kotlin.Boolean defined in kotlin.reflect.KMutableProperty1[DeserializedSimpleFunctionDescriptor@d28fe5f]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1b742ea2]
R: OSKind

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e581829]
T: Int

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e581829]
T: Int

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e581829]
T: Long

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e581829]
T: ServerLoopbackSocketFactory

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e581829]
T: ClientLoopbackSocketFactory

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3e581829]
T: String

public final operator fun component1(): java.io.File defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@187ffc1e]
A: File


public final operator fun component1(): java.io.File defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@187ffc1e]
A: File






public abstract fun get(): org.jetbrains.kotlin.daemon.common.DaemonJVMOptions defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[SimpleFunctionDescriptorImpl@7e554206]
R: DaemonJVMOptions

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1b742ea2]
R: DaemonWithMetadata




public final val skipIf: (V) -> kotlin.Boolean defined in org.jetbrains.kotlin.daemon.common.PropMapper[PropertyDescriptorImpl@512e9926] +++|+++
R: Boolean

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14cb5869]
T: String

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14cb5869]
T: String

public abstract fun get(receiver: C): kotlin.collections.MutableCollection<kotlin.String> defined in kotlin.reflect.KMutableProperty1[DeserializedSimpleFunctionDescriptor@695d88db]
R: MutableCollection<String>

public abstract fun get(receiver: C): kotlin.collections.MutableCollection<kotlin.String> defined in kotlin.reflect.KMutableProperty1[DeserializedSimpleFunctionDescriptor@695d88db]
R: MutableCollection<String>


public final operator fun component1(): kotlin.Boolean defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@5b5b0839]
A: Boolean

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1b0a3c3c]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1b742ea2]
R: Pair<Boolean, Pair<PropMapper<*, *, *>, String?>>

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1b0a3c3c]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1b742ea2]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1b742ea2]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1b742ea2]
R: Boolean

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14cb5869]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1b742ea2]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1b742ea2]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1b742ea2]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1b742ea2]
R: Long

public abstract fun get(receiver: org.jetbrains.kotlin.daemon.common.DaemonJVMOptions): kotlin.String defined in kotlin.reflect.KMutableProperty1[DeserializedSimpleFunctionDescriptor@36eb457c]
R: String

public abstract fun get(receiver: org.jetbrains.kotlin.daemon.common.DaemonJVMOptions): kotlin.String defined in kotlin.reflect.KMutableProperty1[DeserializedSimpleFunctionDescriptor@36eb457c]
R: String

public abstract fun get(receiver: org.jetbrains.kotlin.daemon.common.DaemonJVMOptions): kotlin.String defined in kotlin.reflect.KMutableProperty1[DeserializedSimpleFunctionDescriptor@36eb457c]
R: String

public abstract fun get(receiver: org.jetbrains.kotlin.daemon.common.DaemonJVMOptions): kotlin.String defined in kotlin.reflect.KMutableProperty1[DeserializedSimpleFunctionDescriptor@36eb457c]
R: String

public final val first: kotlin.Long defined in kotlin.Pair[DeserializedPropertyDescriptor@339c9ced]
A: Long

public final val second: kotlin.Long defined in kotlin.Pair[DeserializedPropertyDescriptor@2f50d3d0]
B: Long

public final val first: kotlin.Long defined in kotlin.Pair[DeserializedPropertyDescriptor@339c9ced]
A: Long

public final val second: kotlin.Long defined in kotlin.Pair[DeserializedPropertyDescriptor@2f50d3d0]
B: Long

public final val first: kotlin.Long defined in kotlin.Pair[DeserializedPropertyDescriptor@339c9ced]
A: Long

public final val second: kotlin.Long defined in kotlin.Pair[DeserializedPropertyDescriptor@2f50d3d0]
B: Long

public abstract fun get(receiver: org.jetbrains.kotlin.daemon.common.DaemonJVMOptions): kotlin.String defined in kotlin.reflect.KMutableProperty1[DeserializedSimpleFunctionDescriptor@36eb457c]
R: String

public abstract fun get(receiver: org.jetbrains.kotlin.daemon.common.DaemonJVMOptions): kotlin.String defined in kotlin.reflect.KMutableProperty1[DeserializedSimpleFunctionDescriptor@36eb457c]
R: String

public abstract fun get(receiver: org.jetbrains.kotlin.daemon.common.DaemonJVMOptions): kotlin.String defined in kotlin.reflect.KMutableProperty1[DeserializedSimpleFunctionDescriptor@36eb457c]
R: String

public fun <T> kotlin.Array<out T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@17d4a4f4]
T: String

public inline fun <T, R> kotlin.Array<out T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1258d646]
R: File

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1b742ea2]
R: String

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@915a157]
R: File

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component1(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@409afcc7]
T: Long

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component1(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@409afcc7]
T: Long

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component2(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5e96c01c]
T: Long

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component3(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3358172]
T: Long

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component1(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@409afcc7]
T: Long

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component2(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5e96c01c]
T: Long

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component3(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3358172]
T: Long

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component4(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3236e197]
T: Long

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7beeac0e]
T: File

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7beeac0e]
T: File

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7beeac0e]
T: File

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7beeac0e]
T: IncrementalJvmCache

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7beeac0e]
T: File

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7beeac0e]
T: IncrementalJsCache

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7beeac0e]
T: InputsCache

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7beeac0e]
T: LookupStorage

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@138bbe5f]
T: String

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@138bbe5f]
T: String

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@f27a320]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@53fb69d5]
R: BuildDiffsStorage

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@f27a320]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@f27a320]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.incremental.BuildDifference defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2f4381e2]
T: BuildDifference

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@f27a320]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@f27a320]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.incremental.LookupSymbol defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6afb5018]
T: LookupSymbol

public abstract operator fun next(): org.jetbrains.kotlin.name.FqName defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@41b24a72]
T: FqName

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@f27a320]
R: BuildInfo

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@f27a320]
R: BuildInfo

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@f27a320]
R: Unit

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@583d6c8e]
T: File

public abstract fun next(): org.jetbrains.kotlin.incremental.storage.BasicMapsOwner defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@6f5b2704]
T: BasicMapsOwner

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@163d6e03]
T: File

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7beeac0e]
T: Builder

public final operator fun component1(): kotlin.collections.List<java.io.File> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2d944c44]
A: List<File>

public final operator fun component2(): kotlin.collections.List<java.io.File> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1bf39e6c]
B: List<File>

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@e5969c8]
R: Boolean

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@1c3ddb09]
T: String

public inline fun <R> withJsIC(fn: () -> R): R defined in org.jetbrains.kotlin.incremental in file IncrementalJsCompilerRunner.kt[SimpleFunctionDescriptorImpl@2ad1a846]
R: ExitCode

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@53fb69d5]
R: String

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7beeac0e]
T: Builder

public inline fun <R> withIC(enabled: kotlin.Boolean = ..., fn: () -> R): R defined in org.jetbrains.kotlin.incremental in file IncrementalJvmCompilerRunner.kt[SimpleFunctionDescriptorImpl@840dd1e]
R: ExitCode

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@53fb69d5]
R: String

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6570f75c]
T: File

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@92e130]
T: File

public abstract operator fun next(): org.jetbrains.kotlin.build.GeneratedFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@63ac0194]
T: GeneratedFile

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7beeac0e]
T: Builder

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3e3cbfd8]
T: File

public abstract operator fun next(): org.jetbrains.kotlin.build.GeneratedFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5e5a835e]
T: GeneratedFile

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5fd35475]
T: File

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@58b6799e]
T: File

public final val value: kotlin.collections.Set<java.io.File> defined in org.jetbrains.kotlin.incremental.util.Either.Success[PropertyDescriptorImpl@7be73a56]
T: Set<File>

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5dd5fa86]
T: File

public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.incremental.BuildDifference> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@436c1060]
A: List<BuildDifference>

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.incremental.BuildDifference> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@37b4d9f9]
B: List<BuildDifference>

public abstract operator fun next(): org.jetbrains.kotlin.incremental.BuildDifference defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4d93c76b]
T: BuildDifference

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@704bcbe2]
T: File

public abstract fun next(): java.io.File defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@1e16e51b]
T: File

public final val value: kotlin.collections.Set<java.io.File> defined in org.jetbrains.kotlin.incremental.util.Either.Success[PropertyDescriptorImpl@6e1bbbfe]
T: Set<File>

public final val value: kotlin.collections.Set<java.io.File> defined in org.jetbrains.kotlin.incremental.util.Either.Success[PropertyDescriptorImpl@40325ad2]
T: Set<File>

public final val value: kotlin.collections.Set<java.io.File> defined in org.jetbrains.kotlin.incremental.util.Either.Success[PropertyDescriptorImpl@4428d155]
T: Set<File>

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7b95ef47]
V: Set<File>

public final val value: kotlin.collections.Set<java.io.File> defined in org.jetbrains.kotlin.incremental.util.Either.Success[PropertyDescriptorImpl@24c6b0fe]
T: Set<File>

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@f27a320]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@f27a320]
R: Unit

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4a10953c]
T: File

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@53fb69d5]
R: Boolean

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@75bd1003]
T: String

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@28eb7af7]
T: Collection<File>

public abstract suspend fun await(): org.jetbrains.kotlin.daemon.common.experimental.socketInfrastructure.Server.State defined in kotlinx.coroutines.Deferred[DeserializedSimpleFunctionDescriptor@7ddd5b24]
T: State




















public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2aeaaace]
T: CallResult<Set<String>>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2aeaaace]
T: Boolean

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2aeaaace]
T: CallResult<Long>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2aeaaace]
T: CallResult<DaemonOptions>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2aeaaace]
T: CallResult<String>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2aeaaace]
T: CallResult<DaemonJVMOptions>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2aeaaace]
T: CallResult<Nothing>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2aeaaace]
T: CallResult<List<String>>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2aeaaace]
T: CallResult<Int>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2aeaaace]
T: CallResult<Nothing>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2aeaaace]
T: CallResult<Nothing>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2aeaaace]
T: CallResult<Boolean>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2aeaaace]
T: CallResult<Int>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2aeaaace]
T: Unit

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2aeaaace]
T: CallResult<Int>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2aeaaace]
T: CallResult<Nothing>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2aeaaace]
T: CallResult<ReplStateFacadeRMIWrapper>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2aeaaace]
T: CallResult<ReplCheckResult>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2aeaaace]
T: CallResult<ReplCompileResult>












public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2aeaaace]
T: Unit






@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@1c0346ff]
R: ByteArray

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompileServiceClientSideImpl.<init>.<no name provided>[SimpleFunctionDescriptorImpl@3bfbb43b]
T: KeepAliveAcknowledgement<*>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6053f899]
T: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3ea925e4]
R: Any

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3c9e167e]
T: ServerLoopbackSocketFactoryKtor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3c9e167e]
T: ClientLoopbackSocketFactoryKtor

public final operator fun component1(): java.rmi.registry.Registry defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2637ae67]
A: Registry

public final operator fun component2(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@28e18265]
B: Int

public final operator fun component1(): java.io.File defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7f634eb0]
A: File


public final operator fun component1(): java.io.File defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7f634eb0]
A: File





public abstract fun get(): org.jetbrains.kotlin.daemon.common.DaemonJVMOptions defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@7f3dd187]
R: DaemonJVMOptions

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3ea925e4]
R: DaemonWithMetadataAsync





public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompileServiceClientSideImpl[SimpleFunctionDescriptorImpl@100bd0fe]
T: CallResult<Set<String>>

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompileServiceClientSideImpl[SimpleFunctionDescriptorImpl@100bd0fe]
T: CallResult<Int>

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompileServiceClientSideImpl[SimpleFunctionDescriptorImpl@100bd0fe]
T: CallResult<Int>

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompileServiceClientSideImpl[SimpleFunctionDescriptorImpl@100bd0fe]
T: Boolean

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompileServiceClientSideImpl[SimpleFunctionDescriptorImpl@100bd0fe]
T: CallResult<Long>

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompileServiceClientSideImpl[SimpleFunctionDescriptorImpl@100bd0fe]
T: CallResult<DaemonOptions>

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompileServiceClientSideImpl[SimpleFunctionDescriptorImpl@100bd0fe]
T: CallResult<String>

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompileServiceClientSideImpl[SimpleFunctionDescriptorImpl@100bd0fe]
T: CallResult<DaemonJVMOptions>

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompileServiceClientSideImpl[SimpleFunctionDescriptorImpl@100bd0fe]
T: CallResult<Nothing>

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompileServiceClientSideImpl[SimpleFunctionDescriptorImpl@100bd0fe]
T: CallResult<List<String>>

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompileServiceClientSideImpl[SimpleFunctionDescriptorImpl@100bd0fe]
T: CallResult<Int>

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompileServiceClientSideImpl[SimpleFunctionDescriptorImpl@100bd0fe]
T: CallResult<Nothing>

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompileServiceClientSideImpl[SimpleFunctionDescriptorImpl@100bd0fe]
T: CallResult<Nothing>

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompileServiceClientSideImpl[SimpleFunctionDescriptorImpl@100bd0fe]
T: CallResult<Boolean>

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompileServiceClientSideImpl[SimpleFunctionDescriptorImpl@100bd0fe]
T: CallResult<Nothing>

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompileServiceClientSideImpl[SimpleFunctionDescriptorImpl@100bd0fe]
T: CallResult<ReplStateFacadeAsync>

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompileServiceClientSideImpl[SimpleFunctionDescriptorImpl@100bd0fe]
T: CallResult<ReplCheckResult>

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompileServiceClientSideImpl[SimpleFunctionDescriptorImpl@100bd0fe]
T: CallResult<ReplCompileResult>

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompilerCallbackServicesFacadeClientSideImpl[SimpleFunctionDescriptorImpl@749265e5]
T: Boolean

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompilerCallbackServicesFacadeClientSideImpl[SimpleFunctionDescriptorImpl@749265e5]
T: Boolean

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompilerCallbackServicesFacadeClientSideImpl[SimpleFunctionDescriptorImpl@749265e5]
T: Boolean

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompilerCallbackServicesFacadeClientSideImpl[SimpleFunctionDescriptorImpl@749265e5]
T: Collection<String>

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompilerCallbackServicesFacadeClientSideImpl[SimpleFunctionDescriptorImpl@749265e5]
T: Collection<String>

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompilerCallbackServicesFacadeClientSideImpl[SimpleFunctionDescriptorImpl@749265e5]
T: String

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompilerCallbackServicesFacadeClientSideImpl[SimpleFunctionDescriptorImpl@749265e5]
T: Boolean

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.common.experimental.CompilerCallbackServicesFacadeClientSideImpl[SimpleFunctionDescriptorImpl@749265e5]
T: Boolean

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2aeaaace]
T: Socket

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3ea925e4]
R: SecurityData

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@1c0346ff]
R: Unit

public abstract suspend fun await(): kotlin.Any defined in kotlinx.coroutines.CompletableDeferred[DeserializedSimpleFunctionDescriptor@3ede9e43]
T: Any

public abstract suspend fun await(): org.jetbrains.kotlin.daemon.common.experimental.socketInfrastructure.DefaultAuthorizableClient.MessageReply<*> defined in kotlinx.coroutines.CompletableDeferred[DeserializedSimpleFunctionDescriptor@3cec46f6]
T: MessageReply<*>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6053f899]
T: ExpectReplyQuery

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6053f899]
T: MessageReply<*>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6053f899]
T: IOPair

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2aeaaace]
T: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6053f899]
T: State

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6053f899]
T: State

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@1c0346ff]
R: Unit

public final val first: kotlin.Byte defined in kotlin.Pair[DeserializedPropertyDescriptor@28d133e0]
A: Byte

public final val second: kotlin.Byte defined in kotlin.Pair[DeserializedPropertyDescriptor@45f18e1c]
B: Byte

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component1(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@377e8cff]
T: Int

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component2(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@34b8a507]
T: Int

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component3(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4bd3acb7]
T: Int

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component4(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@9b45fad]
T: Int

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6053f899]
T: Int

public abstract suspend fun await(): kotlin.ByteArray defined in kotlinx.coroutines.CompletableDeferred[DeserializedSimpleFunctionDescriptor@2f60780d]
T: ByteArray

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3ea925e4]
R: String

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@1c0346ff]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@1c0346ff]
R: Unit







public inline fun <R> withIC(enabled: kotlin.Boolean = ..., fn: () -> R): R defined in org.jetbrains.kotlin.incremental[DeserializedSimpleFunctionDescriptor@3eaa358b]
R: CallResult<Int>

public inline fun <R> withIC(enabled: kotlin.Boolean = ..., fn: () -> R): R defined in org.jetbrains.kotlin.incremental[DeserializedSimpleFunctionDescriptor@3eaa358b]
R: CallResult<Int>

public inline fun <R> withJsIC(fn: () -> R): R defined in org.jetbrains.kotlin.incremental[DeserializedSimpleFunctionDescriptor@72805f1a]
R: CallResult<Int>

@kotlin.internal.InlineOnly public inline fun <R> run(block: () -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5c3ee9cc]
R: CallResult<Int>

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@6241af78]
T: Unit

public final operator fun component1(): java.rmi.registry.Registry defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@60723bb6]
A: Registry

public final operator fun component2(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3985f2bd]
B: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@e169a93]
R: Pair<CompileServiceImpl, Int>

public final val shutdownAction: suspend () -> kotlin.Any defined in org.jetbrains.kotlin.daemon.experimental.CompileServiceTaskScheduler.ExclusiveTask[PropertyDescriptorImpl@2f80ea47] +++|+++
R: Any

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b64a679]
R: Deferred<Unit>

public final val action: suspend () -> kotlin.Any defined in org.jetbrains.kotlin.daemon.experimental.CompileServiceTaskScheduler.OrdinaryTask[PropertyDescriptorImpl@3deab6c] +++|+++
R: Any

public abstract suspend fun await(): kotlin.Boolean defined in kotlinx.coroutines.CompletableDeferred[DeserializedSimpleFunctionDescriptor@1dc16627]
T: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@e169a93]
R: Pair<CompileServiceServerSideImpl, Int>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b64a679]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b64a679]
R: List<File>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2835df51]
T: CompilerConfiguration

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2a1faec0]
T: ReplFactoryExtension

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@82fded7]
T: ReplCompiler

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@82fded7]
T: RemoteReplStateFacadeServer

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: ByteArray

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: MutableMap<File, TranslationResultValue>

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: IntArray

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: MutableMap<String, ByteArray>

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: Boolean

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: Boolean

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@22a6feff]
T: Long

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@75fae19c]
R: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@22a6feff]
T: SecurityData

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: Boolean

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@5b38350e]
T: Boolean

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: Boolean

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@5b38350e]
T: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b64a679]
R: Pair<String, Boolean>

public final operator fun component1(): kotlin.String defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4110cd5a]
A: String

public final operator fun component2(): kotlin.Boolean defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@33ed5a38]
B: Boolean

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@5b38350e]
T: Unit

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@82fded7]
T: K2JVMCompiler

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@82fded7]
T: K2JSCompiler

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@82fded7]
T: K2MetadataCompiler


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b64a679]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@6241af78]
T: Int

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.read(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@581f3578]
T: Boolean

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2835df51]
T: ClientOrSessionProxy<Any>

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@6241af78]
T: Boolean

public abstract val key: kotlin.Int defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@7d26c7a9]
K: Int

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@6241af78]
T: Unit

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.read(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@581f3578]
T: Unit

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@6241af78]
T: Boolean

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.read(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@581f3578]
T: List<String>

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@6241af78]
T: Unit

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.read(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@581f3578]
T: Unit

public final operator fun get(index: kotlin.Int): org.jetbrains.kotlin.daemon.CompileServiceImplBase.Aliveness defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@55791e70]
T: Aliveness



protected final inline fun <R> checkedCompile(daemonMessageReporter: org.jetbrains.kotlin.daemon.report.DaemonMessageReporter, rpcProfiler: org.jetbrains.kotlin.daemon.common.Profiler, body: () -> R): R defined in org.jetbrains.kotlin.daemon.CompileServiceImplBase[SimpleFunctionDescriptorImpl@238dbdff]
R: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@e169a93]
R: CallResult<Int>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b64a679]
R: Unit

public abstract operator fun next(): kotlin.collections.Map.Entry<kotlin.Any?, org.jetbrains.kotlin.daemon.common.PerfCounters> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@51cdff50]
T: Entry<Any?, PerfCounters>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@925b04b]
V: PerfCounters

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b64a679]
R: Unit



public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@302a4867]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@e169a93]
R: ModulesApiHistoryBase


@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2835df51]
T: Int

public abstract fun get(): kotlin.collections.List<kotlin.String> defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@a00c6a0]
R: List<String>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b64a679]
R: Unit

public abstract fun get(): kotlin.collections.List<kotlin.String> defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@4a46207d]
R: List<String>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b64a679]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b64a679]
R: Any

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4311a0e5]
R: Unit

public final val onShutdown: () -> kotlin.Unit defined in org.jetbrains.kotlin.daemon.CompileServiceImpl[PropertyDescriptorImpl@4312a987] +++|+++
R: Unit


protected final inline fun <R> checkedCompile(daemonMessageReporter: org.jetbrains.kotlin.daemon.report.DaemonMessageReporter, rpcProfiler: org.jetbrains.kotlin.daemon.common.Profiler, body: () -> R): R defined in org.jetbrains.kotlin.daemon.CompileServiceImpl[SimpleFunctionDescriptorImpl@546188f1]
R: Int

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.read(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@581f3578]
T: CallResult<R>


@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.read(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@581f3578]
T: Unit

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@6241af78]
T: CallResult<R>


@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@6241af78]
T: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b64a679]
R: Unit

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@82fded7]
T: K2JVMCompiler

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@82fded7]
T: K2JSCompiler

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@82fded7]
T: K2MetadataCompiler

public final operator fun component1(): org.jetbrains.kotlin.daemon.CompileServiceImplBase defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7cd5e217]
A: CompileServiceImplBase

public final operator fun component2(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7b35ef99]
B: Int

protected open fun <T> runSynchronized(block: () -> T): T defined in org.jetbrains.kotlin.daemon.KotlinCompileDaemonBase[SimpleFunctionDescriptorImpl@47ffb982]
T: Unit

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@6241af78]
T: RemoteReplStateFacadeServer

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b64a679]
R: Good<R>

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.read(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@581f3578]
T: CallResult<R>


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b64a679]
R: List<ComponentRegistrar>

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@75fae19c]
R: Unit

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: Unit

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: Collection<String>

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: Collection<String>

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: String

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: Unit

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: Unit

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: Unit

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: Unit

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: Unit

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: Int

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: Int

public inline fun <K, V> kotlin.collections.MutableMap<K, V>.getOrPut(key: K, defaultValue: () -> V): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@547755be]
V: MutableSet<Any>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@20730a5]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@925b04b]
V: MutableSet<Any>

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: Unit

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: Unit

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: Unit

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@29cdea77]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2835df51]
T: Int

public abstract fun get(): kotlin.collections.List<kotlin.String> defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@24fd790f]
R: List<String>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b64a679]
R: Unit

public open fun get(): kotlin.collections.List<kotlin.String> defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult.Good[DeserializedSimpleFunctionDescriptor@3fea8c64]
R: List<String>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b64a679]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b64a679]
R: Any

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@5b38350e]
T: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4311a0e5]
R: Unit

public final val onShutdown: () -> kotlin.Unit defined in org.jetbrains.kotlin.daemon.experimental.CompileServiceServerSideImpl[PropertyDescriptorImpl@30c66b26] +++|+++
R: Unit

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@5b38350e]
T: CallResult<Unit>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@5b38350e]
T: CallResult<Unit>

public abstract suspend fun await(): kotlin.Any defined in kotlinx.coroutines.CompletableDeferred[DeserializedSimpleFunctionDescriptor@1c23e70a]
T: Any


public abstract suspend fun await(): kotlin.Boolean defined in kotlinx.coroutines.CompletableDeferred[DeserializedSimpleFunctionDescriptor@2305f763]
T: Boolean

public abstract suspend fun await(): kotlin.Any defined in kotlinx.coroutines.CompletableDeferred[DeserializedSimpleFunctionDescriptor@68e65adb]
T: Any


public abstract suspend fun await(): kotlin.Any defined in kotlinx.coroutines.CompletableDeferred[DeserializedSimpleFunctionDescriptor@59f772d4]
T: Any


public abstract suspend fun await(): kotlin.Unit defined in kotlinx.coroutines.Deferred[DeserializedSimpleFunctionDescriptor@19d962af]
T: Unit

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@6241af78]
T: RemoteReplStateFacadeServerSide

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b64a679]
R: Good<R>

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.read(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@581f3578]
T: CallResult<R>

public fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasureBlocking(obj: kotlin.Any?, body: suspend () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@64b7476e]
R: Collection<String>

public fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasureBlocking(obj: kotlin.Any?, body: suspend () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@64b7476e]
R: Collection<String>

public fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasureBlocking(obj: kotlin.Any?, body: suspend () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@64b7476e]
R: String

public fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasureBlocking(obj: kotlin.Any?, body: suspend () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@64b7476e]
R: Unit

public fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasureBlocking(obj: kotlin.Any?, body: suspend () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@64b7476e]
R: Unit

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.experimental.RemoteReplStateFacadeClientSide[DeserializedSimpleFunctionDescriptor@3677de0e]
T: Int

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.experimental.RemoteReplStateFacadeClientSide[DeserializedSimpleFunctionDescriptor@3677de0e]
T: Int

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.experimental.RemoteReplStateFacadeClientSide[DeserializedSimpleFunctionDescriptor@3677de0e]
T: ILineId

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.experimental.RemoteReplStateFacadeClientSide[DeserializedSimpleFunctionDescriptor@3677de0e]
T: List<ILineId>

public open suspend fun <T> readMessage(id: kotlin.Int): T defined in org.jetbrains.kotlin.daemon.experimental.RemoteReplStateFacadeClientSide[DeserializedSimpleFunctionDescriptor@3677de0e]
T: List<ILineId>


public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@28e3647]
T: File

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b64a679]
R: String




public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@91b9bfe]
T: File

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4b64a679]
R: String

public abstract val key: java.io.File defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@3f8f7a61]
K: File

public abstract val value: org.jetbrains.kotlin.incremental.js.TranslationResultValue defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@6a1a9da4]
V: TranslationResultValue

public abstract val value: org.jetbrains.kotlin.incremental.js.TranslationResultValue defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@6a1a9da4]
V: TranslationResultValue

public abstract val value: org.jetbrains.kotlin.incremental.js.TranslationResultValue defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@6a1a9da4]
V: TranslationResultValue

public abstract fun get(): kotlin.Int defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@4827d360]
R: Int

public abstract operator fun invoke(p1: java.io.File, p2: kotlin.collections.List<java.io.File>): kotlin.Unit defined in kotlin.Function2[FunctionInvokeDescriptor@796a869c]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@17312d78]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.incremental.components.LookupInfo defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7ce0127c]
T: LookupInfo

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2ee63066]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70d574ab]
V: ByteArray

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@17312d78]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@17312d78]
R: File

public abstract fun get(): kotlin.Int defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@21e6a330]
R: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@17312d78]
R: CompileServiceSession

public final operator fun component2(): org.jetbrains.kotlin.daemon.common.DaemonJVMOptions defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@a5de3ce]
B: DaemonJVMOptions

public abstract fun get(): kotlin.Int defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@21e6a330]
R: Int

public abstract fun get(): kotlin.Int defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@3031ff95]
R: Int

public abstract fun get(): kotlin.Int defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@15d01d2d]
R: Int

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@6622c099]
R: Int

public abstract fun get(): kotlin.Int defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@785ad6a1]
R: Int

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@6622c099]
R: Int

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4e98b571]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@17312d78]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@17312d78]
R: Unit

public abstract fun get(): kotlin.Long defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@71be40cf]
R: Long

public abstract fun get(): kotlin.Int defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@3031ff95]
R: Int

public abstract fun get(): kotlin.Long defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@71be40cf]
R: Long

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@17312d78]
R: List<(kotlin.String..kotlin.String?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@17312d78]
R: Pair<CompileService, DaemonJVMOptions>

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@22e4b052]
R: DaemonJVMOptions

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@cd29a28]
T: File

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@17312d78]
R: String

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6c4b5251]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@17312d78]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@17312d78]
R: Unit

public fun <T> kotlin.Array<out T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4f05cfc7]
T: String

public abstract fun get(): org.jetbrains.kotlin.daemon.common.ReplStateFacade defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@b9f7ce3]
R: ReplStateFacade

public abstract fun get(): org.jetbrains.kotlin.cli.common.repl.ReplCheckResult defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@6bfa37df]
R: ReplCheckResult

public abstract fun get(): org.jetbrains.kotlin.cli.common.repl.ReplCompileResult defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@1f4cf742]
R: ReplCompileResult

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@cd29a28]
T: List<ILineId>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@cd29a28]
T: List<ILineId>

public abstract fun get(): kotlin.Int defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@aed632a]
R: Int

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2df1f1e2]
T: Int

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2df1f1e2]
T: Int

public abstract operator fun next(): org.jetbrains.kotlin.incremental.components.LookupInfo defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@324462f7]
T: LookupInfo

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@dfcf24e]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@dfcf24e]
R: File

public abstract fun get(): kotlin.Int defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@66d5e31c]
R: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@dfcf24e]
R: CompileServiceSessionAsync

public abstract suspend fun await(): kotlin.Pair<org.jetbrains.kotlin.daemon.common.CompileServiceAsync?, org.jetbrains.kotlin.daemon.common.DaemonJVMOptions> defined in kotlinx.coroutines.Deferred[DeserializedSimpleFunctionDescriptor@21a0cf98]
T: Pair<CompileServiceAsync?, DaemonJVMOptions>

public final operator fun component2(): org.jetbrains.kotlin.daemon.common.DaemonJVMOptions defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3b3aac9b]
B: DaemonJVMOptions

public abstract fun get(): kotlin.Int defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@66d5e31c]
R: Int

public abstract fun get(): kotlin.Int defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@36b29ef5]
R: Int

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2df1f1e2]
T: Int

public inline fun <R> org.jetbrains.kotlin.daemon.common.Profiler.withMeasure(obj: kotlin.Any?, body: () -> R): R defined in org.jetbrains.kotlin.daemon.common[DeserializedSimpleFunctionDescriptor@48f63934]
R: Int

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1a3f36ae]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@dfcf24e]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@dfcf24e]
R: Unit

public abstract fun get(): kotlin.Long defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@4f8bc353]
R: Long

public abstract fun get(): kotlin.Int defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@36b29ef5]
R: Int

public abstract fun get(): kotlin.Long defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@4f8bc353]
R: Long

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2df1f1e2]
T: Unit

@kotlin.internal.InlineOnly public inline fun <R> synchronized(lock: kotlin.Any, block: () -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2da96976]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@dfcf24e]
R: List<(kotlin.String..kotlin.String?)>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@dfcf24e]
R: Pair<CompileServiceAsync, DaemonJVMOptions>

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2c54895d]
R: DaemonJVMOptions

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@dfcf24e]
R: String

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@2fe94307]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@dfcf24e]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@dfcf24e]
R: Unit

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2df1f1e2]
T: Any

public abstract fun get(): org.jetbrains.kotlin.daemon.common.ReplStateFacadeAsync defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@639789ae]
R: ReplStateFacadeAsync

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2df1f1e2]
T: ReplStateFacadeAsync

public abstract fun get(): org.jetbrains.kotlin.cli.common.repl.ReplCheckResult defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@57546a16]
R: ReplCheckResult

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2df1f1e2]
T: ReplCheckResult

public abstract fun get(): org.jetbrains.kotlin.cli.common.repl.ReplCompileResult defined in org.jetbrains.kotlin.daemon.common.CompileService.CallResult[DeserializedSimpleFunctionDescriptor@7229446f]
R: ReplCompileResult

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2df1f1e2]
T: ReplCompileResult

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2df1f1e2]
T: ReplHistoryRecord<Unit>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1d0124c2]
T: List<ILineId>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2df1f1e2]
T: List<ILineId>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@1d0124c2]
T: List<ILineId>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2df1f1e2]
T: List<ILineId>

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@65fd95a4]
T: KtFile

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3d5ed445]
T: Builder

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3d5ed445]
T: Builder

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3d5ed445]
T: Builder

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3d5ed445]
T: Builder

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@41ad3411]
T: String

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@41ad3411]
T: String

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@3d5ed445]
T: LinkedHashMap<Key<*>, Any?>





@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@42a9a3d2]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@42a9a3d2]
R: Int

public abstract operator fun invoke(p1: kotlin.script.experimental.api.ScriptConfigurationRefinementContext): kotlin.script.experimental.api.ResultWithDiagnostics<kotlin.script.experimental.api.ScriptCompilationConfiguration> defined in kotlin.Function1[FunctionInvokeDescriptor@6e7acee0]
R: ResultWithDiagnostics<ScriptCompilationConfiguration>

public abstract operator fun invoke(p1: kotlin.script.experimental.api.ScriptConfigurationRefinementContext): kotlin.script.experimental.api.ResultWithDiagnostics<kotlin.script.experimental.api.ScriptCompilationConfiguration> defined in kotlin.Function1[FunctionInvokeDescriptor@2c66193b]
R: ResultWithDiagnostics<ScriptCompilationConfiguration>

public inline fun <R> kotlin.script.experimental.api.ResultWithDiagnostics<R>.valueOr(body: (kotlin.script.experimental.api.ResultWithDiagnostics.Failure) -> kotlin.Nothing): R defined in kotlin.script.experimental.api in file errorHandling.kt[SimpleFunctionDescriptorImpl@183fe0f1]
R: ScriptCompilationConfiguration

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@259be2ed]
R: ScriptCompilationConfiguration

public abstract operator fun invoke(p1: kotlin.script.experimental.api.ScriptConfigurationRefinementContext): kotlin.script.experimental.api.ResultWithDiagnostics<kotlin.script.experimental.api.ScriptCompilationConfiguration> defined in kotlin.Function1[FunctionInvokeDescriptor@6e7acee0]
R: ResultWithDiagnostics<ScriptCompilationConfiguration>


public inline fun <R> kotlin.script.experimental.api.ResultWithDiagnostics<R>.valueOr(body: (kotlin.script.experimental.api.ResultWithDiagnostics.Failure) -> kotlin.Nothing): R defined in kotlin.script.experimental.api in file errorHandling.kt[SimpleFunctionDescriptorImpl@183fe0f1]
R: Configuration

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@259be2ed]
R: Configuration

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4274faf1]
T: ScriptEvaluationContextData

public abstract operator fun invoke(hostConfiguration: @kotlin.ParameterName kotlin.script.experimental.host.ScriptingHostConfiguration): kotlin.script.experimental.api.ScriptEvaluationContextData defined in kotlin.Function1[FunctionInvokeDescriptor@3b49755d]
R: ScriptEvaluationContextData

public abstract operator fun invoke(p1: kotlin.script.experimental.api.ScriptEvaluationConfigurationRefinementContext): kotlin.script.experimental.api.ResultWithDiagnostics<kotlin.script.experimental.api.ScriptEvaluationConfiguration> defined in kotlin.Function1[FunctionInvokeDescriptor@6dcc8d54]
R: ResultWithDiagnostics<ScriptEvaluationConfiguration>

public open fun <T> runInCoroutineContext(block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlin.script.experimental.host.BasicScriptingHost[SimpleFunctionDescriptorImpl@605ad655]
T: ResultWithDiagnostics<EvaluationResult>



public abstract operator fun next(): kotlin.script.experimental.api.ScriptSourceNamedFragment defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2651a466]
T: ScriptSourceNamedFragment

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@42a9a3d2]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@42a9a3d2]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@42a9a3d2]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@42a9a3d2]
R: Boolean

public final operator fun component2(): kotlin.reflect.KClass<*> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@696b937f]
B: KClass<*>

public final operator fun component2(): kotlin.reflect.KType defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@474b1a6d]
B: KType

public final operator fun component2(): kotlin.String defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@40d8bf53]
B: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@42a9a3d2]
R: T

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@42a9a3d2]
R: List<V>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@42a9a3d2]
R: List<V>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@42a9a3d2]
R: Map<K, V>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@42a9a3d2]
R: Map<K, V>


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@179cf222]
R: URLClassLoader

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@179cf222]
R: File

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@179cf222]
R: List<File>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7496a82d]
T: List<File>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7496a82d]
T: List<File>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@179cf222]
R: File

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7496a82d]
T: File

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@7496a82d]
T: File

public inline fun <R> kotlin.script.experimental.api.ResultWithDiagnostics<R>.valueOr(body: (kotlin.script.experimental.api.ResultWithDiagnostics.Failure) -> kotlin.Nothing): R defined in kotlin.script.experimental.api[DeserializedSimpleFunctionDescriptor@772765f]
R: ScriptEvaluationConfiguration

public final operator fun component1(): kotlin.String defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@50bfa68b]
A: String

public final operator fun component2(): kotlin.script.experimental.api.KotlinType defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7979ba57]
B: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@179cf222]
R: Value

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@179cf222]
R: Success<EvaluationResult>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@179cf222]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@179cf222]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@179cf222]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@179cf222]
R: Location

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@179cf222]
R: Location

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@179cf222]
R: Position

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@428a0765]
T: ResolveResult

public final val value: kotlin.script.experimental.api.ScriptCompilationConfiguration defined in kotlin.script.experimental.api.ResultWithDiagnostics.Success[DeserializedPropertyDescriptor@46e3b1e2]
R: ScriptCompilationConfiguration

public final val onConfigurationUpdated: (kotlin.script.experimental.api.SourceCode, kotlin.script.experimental.api.ScriptCompilationConfiguration) -> kotlin.Unit defined in kotlin.script.experimental.jvm.impl.BridgeDependenciesResolver[PropertyDescriptorImpl@22d762a3] +++|+++
R: Unit


@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@78805da4]
R: Nothing

public inline fun <T, R> kotlin.sequences.Sequence<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@50025494]
R: Sequence<CompiledScript<*>>

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@bfa16e3]
R: KJvmCompiledScript<*>

public final val first: kotlin.String defined in kotlin.Pair[DeserializedPropertyDescriptor@196c9989]
A: String

public final val first: kotlin.String defined in kotlin.Pair[DeserializedPropertyDescriptor@196c9989]
A: String

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@428a0765]
T: ResultWithDiagnostics<EvaluationResult>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@179cf222]
R: File

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@32b9f7cd]
T: String

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@bfa16e3]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@bfa16e3]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@30401e83]
T: ArrayList<File>

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3f298969]
T: File

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5496cba7]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@179cf222]
R: File

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: ScriptCompilationConfigurationFromDefinition

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: ScriptEvaluationConfigurationFromDefinition

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: KotlinScriptDefinitionAdapterFromNewAPI


@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: List<File>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: URLClassLoader

public final val first: kotlin.String defined in kotlin.Pair[DeserializedPropertyDescriptor@1f16fcf6]
A: String

public final val second: kotlin.reflect.KType defined in kotlin.Pair[DeserializedPropertyDescriptor@4595002f]
B: KType

public fun <T> kotlin.script.experimental.util.PropertiesCollection.getOrError(key: kotlin.script.experimental.util.PropertiesCollection.Key<T>): T defined in kotlin.script.experimental.util[DeserializedSimpleFunctionDescriptor@24b2801b]
T: KotlinType

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: GetScriptingClass

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: KClass<*>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: BridgeDependenciesResolver

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: List<KClass<out Annotation>>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: List<KType>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4f0fa17c]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@42c4edd7]
V: KotlinType

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: List<Pair<String, KType>>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: ScriptingHostConfiguration

private final val messageReporter: org.jetbrains.kotlin.scripting.definitions.MessageReporter /* = (kotlin.script.experimental.api.ScriptDiagnostic.Severity, kotlin.String) -> kotlin.Unit */ defined in org.jetbrains.kotlin.scripting.definitions.LazyScriptDefinitionFromDiscoveredClass[PropertyDescriptorImpl@5a1deb2] +++|+++
R: Unit

private final val messageReporter: org.jetbrains.kotlin.scripting.definitions.MessageReporter /* = (kotlin.script.experimental.api.ScriptDiagnostic.Severity, kotlin.String) -> kotlin.Unit */ defined in org.jetbrains.kotlin.scripting.definitions.LazyScriptDefinitionFromDiscoveredClass[PropertyDescriptorImpl@5a1deb2] +++|+++
R: Unit

private final val messageReporter: org.jetbrains.kotlin.scripting.definitions.MessageReporter /* = (kotlin.script.experimental.api.ScriptDiagnostic.Severity, kotlin.String) -> kotlin.Unit */ defined in org.jetbrains.kotlin.scripting.definitions.LazyScriptDefinitionFromDiscoveredClass[PropertyDescriptorImpl@5a1deb2] +++|+++
R: Unit

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: Pair<ScriptCompilationConfiguration, ScriptEvaluationConfiguration>

public final val first: kotlin.script.experimental.api.ScriptCompilationConfiguration defined in kotlin.Pair[DeserializedPropertyDescriptor@dd711bb]
A: ScriptCompilationConfiguration

public final val second: kotlin.script.experimental.api.ScriptEvaluationConfiguration defined in kotlin.Pair[DeserializedPropertyDescriptor@3e15a18b]
B: ScriptEvaluationConfiguration

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@501a0b6]
R: String

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: String

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: String

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@6f717c8]
T: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@131b22eb]
R: Sequence<ScriptDefinition>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: Regex

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: DependenciesResolver

public final val first: kotlin.reflect.KParameter defined in kotlin.Pair[DeserializedPropertyDescriptor@53a28d63]
A: KParameter

public final val first: kotlin.reflect.KParameter defined in kotlin.Pair[DeserializedPropertyDescriptor@53a28d63]
A: KParameter

public final val second: kotlin.reflect.KParameter defined in kotlin.Pair[DeserializedPropertyDescriptor@401a5b18]
B: KParameter

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: List<KClass<out Annotation>>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: List<ScriptExpectedLocation>

public abstract fun call(vararg args: kotlin.Any?): kotlin.script.templates.ScriptTemplateAdditionalCompilerArgumentsProvider defined in kotlin.reflect.KFunction[DeserializedSimpleFunctionDescriptor@23431c6e]
R: ScriptTemplateAdditionalCompilerArgumentsProvider

public final val first: kotlin.String defined in kotlin.Pair[DeserializedPropertyDescriptor@5dc4458]
A: String

public final val second: org.jetbrains.kotlin.types.KotlinType defined in kotlin.Pair[DeserializedPropertyDescriptor@65f260d8]
B: KotlinType

public final val scriptCompilationConfiguration: () -> kotlin.script.experimental.api.ScriptCompilationConfiguration defined in org.jetbrains.kotlin.scripting.resolve.LazyScriptDescriptor[PropertyDescriptorImpl@40ad2bf9] +++|+++
R: ScriptCompilationConfiguration

private final val scriptingHostConfiguration: () -> kotlin.script.experimental.host.ScriptingHostConfiguration defined in org.jetbrains.kotlin.scripting.resolve.LazyScriptDescriptor[PropertyDescriptorImpl@4106b471] +++|+++
R: ScriptingHostConfiguration

public final val scriptCompilationConfiguration: () -> kotlin.script.experimental.api.ScriptCompilationConfiguration defined in org.jetbrains.kotlin.scripting.resolve.LazyScriptDescriptor[PropertyDescriptorImpl@40ad2bf9] +++|+++
R: ScriptCompilationConfiguration

public final val scriptCompilationConfiguration: () -> kotlin.script.experimental.api.ScriptCompilationConfiguration defined in org.jetbrains.kotlin.scripting.resolve.LazyScriptDescriptor[PropertyDescriptorImpl@40ad2bf9] +++|+++
R: ScriptCompilationConfiguration

public final val scriptCompilationConfiguration: () -> kotlin.script.experimental.api.ScriptCompilationConfiguration defined in org.jetbrains.kotlin.scripting.resolve.LazyScriptDescriptor[PropertyDescriptorImpl@40ad2bf9] +++|+++
R: ScriptCompilationConfiguration

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@501a0b6]
R: List<ClassDescriptor>

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.ClassDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5e4f91e0]
T: ClassDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@501a0b6]
R: FilteredAnnotations

private final val scriptClassAnnotations: () -> org.jetbrains.kotlin.descriptors.annotations.Annotations defined in org.jetbrains.kotlin.scripting.resolve.LazyScriptDescriptor[PropertyDescriptorImpl@7ce2e4f5] +++|+++
R: Annotations


@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: Iterable<Annotation>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: String

public final val properties: () -> kotlin.collections.List<org.jetbrains.kotlin.scripting.resolve.ScriptProvidedPropertyDescriptor> defined in org.jetbrains.kotlin.scripting.resolve.ScriptProvidedPropertiesDescriptor[PropertyDescriptorImpl@427663dd] +++|+++
R: List<ScriptProvidedPropertyDescriptor>

public final val scriptCompilationConfiguration: () -> kotlin.script.experimental.api.ScriptCompilationConfiguration defined in org.jetbrains.kotlin.scripting.resolve.LazyScriptDescriptor[PropertyDescriptorImpl@40ad2bf9] +++|+++
R: ScriptCompilationConfiguration

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4f0fa17c]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@42c4edd7]
V: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@501a0b6]
R: Pair<String, ClassDescriptor>

public final operator fun component1(): kotlin.String defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2e167718]
A: String

public final operator fun component2(): org.jetbrains.kotlin.descriptors.ClassDescriptor defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@28bfade1]
B: ClassDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: String

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: List<File>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ab3a1f]
T: List<File>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@501a0b6]
R: ScriptCompilationConfiguration

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@79590eaa]
T: PropertyGetterDescriptorImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@79590eaa]
T: PropertySetterDescriptorImpl

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@6f717c8]
T: Unit

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.read(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@a679242]
T: Sequence<String>

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.read(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@a679242]
T: Boolean

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@6f717c8]
T: Boolean

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.read(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@a679242]
T: Unit

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@6f717c8]
T: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@501a0b6]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@501a0b6]
R: Boolean

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@63e99165]
T: File



@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@18e449ea]
R: Unit


public abstract fun next(): java.io.File defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@433070f7]
T: File



public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@63e99165]
T: File



@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@18e449ea]
R: Unit


public abstract fun next(): java.io.File defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@71870b7f]
T: File



public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.scripting.definitions.ScriptDefinition> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@6c2d3d25]
A: List<ScriptDefinition>

public final operator fun component2(): kotlin.collections.List<kotlin.String> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1669b4f5]
B: List<String>

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6fc6bd73]
T: File



@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@18e449ea]
R: DefinitionsLoadPartitionResult


public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.scripting.definitions.ScriptDefinition> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@50286e69]
A: List<ScriptDefinition>

public final operator fun component2(): kotlin.collections.List<kotlin.String> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@542f865a]
B: List<String>

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6fc6bd73]
T: File



@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@18e449ea]
R: DefinitionsLoadPartitionResult


public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4ac40c9b]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@501a0b6]
R: ByteArray

public abstract fun next(): org.jetbrains.kotlin.scripting.definitions.BinAnnData defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@114d5152]
T: BinAnnData





public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5bab9162]
T: BinAnnData

public inline fun <R> kotlin.script.experimental.api.ResultWithDiagnostics<R>.valueOr(body: (kotlin.script.experimental.api.ResultWithDiagnostics.Failure) -> kotlin.Nothing): R defined in kotlin.script.experimental.api[DeserializedSimpleFunctionDescriptor@4d842f37]
R: ScriptCompilationConfigurationWrapper

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@3c0638e1]
T: ResolveResult

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@501a0b6]
R: ApiChangeDependencyResolverWrapper

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@501a0b6]
R: Nothing

public abstract fun callBy(args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): T defined in kotlin.reflect.KFunction[DeserializedSimpleFunctionDescriptor@71b04bfb]
R: T

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@79590eaa]
T: List<KFunction<*>>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@501a0b6]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@501a0b6]
R: ReplResultPropertyDescriptor

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@75ba40f0]
E: String

public final val scriptCompilationConfiguration: () -> kotlin.script.experimental.api.ScriptCompilationConfiguration defined in org.jetbrains.kotlin.scripting.resolve.LazyScriptDescriptor[PropertyDescriptorImpl@40ad2bf9] +++|+++
R: ScriptCompilationConfiguration

public final val scriptCompilationConfiguration: () -> kotlin.script.experimental.api.ScriptCompilationConfiguration defined in org.jetbrains.kotlin.scripting.resolve.LazyScriptDescriptor[PropertyDescriptorImpl@40ad2bf9] +++|+++
R: ScriptCompilationConfiguration

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@501a0b6]
R: String

private final val scriptingClassGetter: () -> kotlin.script.experimental.host.GetScriptingClass defined in org.jetbrains.kotlin.scripting.resolve.LazyScriptDescriptor[PropertyDescriptorImpl@5d813caa] +++|+++
R: GetScriptingClass

private final val scriptingHostConfiguration: () -> kotlin.script.experimental.host.ScriptingHostConfiguration defined in org.jetbrains.kotlin.scripting.resolve.LazyScriptDescriptor[PropertyDescriptorImpl@4106b471] +++|+++
R: ScriptingHostConfiguration

private final val scriptImplicitReceivers: () -> kotlin.collections.List<org.jetbrains.kotlin.descriptors.ClassDescriptor> defined in org.jetbrains.kotlin.scripting.resolve.LazyScriptDescriptor[PropertyDescriptorImpl@63d49ef0] +++|+++
R: List<ClassDescriptor>

private final val scriptProvidedProperties: () -> org.jetbrains.kotlin.scripting.resolve.ScriptProvidedPropertiesDescriptor defined in org.jetbrains.kotlin.scripting.resolve.LazyScriptDescriptor[PropertyDescriptorImpl@395f58c9] +++|+++
R: ScriptProvidedPropertiesDescriptor

public final val properties: () -> kotlin.collections.List<org.jetbrains.kotlin.scripting.resolve.ScriptProvidedPropertyDescriptor> defined in org.jetbrains.kotlin.scripting.resolve.ScriptProvidedPropertiesDescriptor[PropertyDescriptorImpl@427663dd] +++|+++
R: List<ScriptProvidedPropertyDescriptor>

private final val scriptOuterScope: () -> org.jetbrains.kotlin.resolve.scopes.LexicalScope defined in org.jetbrains.kotlin.scripting.resolve.LazyScriptDescriptor[PropertyDescriptorImpl@79eebf62] +++|+++
R: LexicalScope

private final val memberScope: () -> org.jetbrains.kotlin.scripting.resolve.ScriptProvidedPropertiesDescriptor.ScriptProvidedPropertiesMemberScope defined in org.jetbrains.kotlin.scripting.resolve.ScriptProvidedPropertiesDescriptor[PropertyDescriptorImpl@34b37c5c] +++|+++
R: ScriptProvidedPropertiesMemberScope

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@501a0b6]
R: File

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@501a0b6]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@501a0b6]
R: Boolean

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@3c0638e1]
T: ResolveResult

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@501a0b6]
R: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@501a0b6]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@501a0b6]
R: Annotation

public fun <T> kotlin.collections.Iterable<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@25c066a2]
T: KFunction<Annotation>

public abstract fun callBy(args: kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?>): kotlin.Annotation defined in kotlin.reflect.KFunction[DeserializedSimpleFunctionDescriptor@24d9d821]
R: Annotation

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6cebdb9e]
T: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5126fbf3]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5126fbf3]
E: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@27d8fe2d]
R: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5126fbf3]
E: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@27d8fe2d]
R: String

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@75e4640e]
T: ReplCodeAnalyzer

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@203c24bb]
T: CompilerConfiguration

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2d490f8f]
R: KotlinCoreEnvironment

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@2152f00a]
T: MessageCollector

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@193207be]
R: Unit

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@75e4640e]
T: GenericReplCompiler

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@75e4640e]
T: GenericReplCompilingEvaluator

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@75e4640e]
T: IReplStageState<*>

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@2152f00a]
T: MessageCollector

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6cf0173d]
T: String

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6cf0173d]
T: ScriptDefinition

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@27d8fe2d]
R: Boolean

public abstract operator fun next(): kotlin.script.experimental.api.ScriptDiagnostic defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@30915b91]
T: ScriptDiagnostic

public inline fun <R> kotlin.script.experimental.api.ResultWithDiagnostics<R>.valueOr(body: (kotlin.script.experimental.api.ResultWithDiagnostics.Failure) -> kotlin.Nothing): R defined in kotlin.script.experimental.api[DeserializedSimpleFunctionDescriptor@3a172a80]
R: CompiledScript<*>

public abstract operator fun next(): kotlin.script.experimental.api.ScriptDiagnostic defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@30915b91]
T: ScriptDiagnostic

public inline fun <R> kotlin.script.experimental.api.ResultWithDiagnostics<R>.valueOr(body: (kotlin.script.experimental.api.ResultWithDiagnostics.Failure) -> kotlin.Nothing): R defined in kotlin.script.experimental.api[DeserializedSimpleFunctionDescriptor@3a172a80]
R: EvaluationResult

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@2c07796b]
T: ExitCode

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@27d8fe2d]
R: File

public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.scripting.definitions.ScriptDefinition> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@572a3a44]
A: List<ScriptDefinition>

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.scripting.definitions.ScriptDefinition> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1d1c6ca]
B: List<ScriptDefinition>

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@5b7b6526]
T: Unit

public abstract operator fun next(): org.jetbrains.kotlin.scripting.definitions.ScriptDefinitionsSource defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@407789fe]
T: ScriptDefinitionsSource

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@5b7b6526]
T: Unit

public final val value: org.jetbrains.kotlin.scripting.resolve.ScriptCompilationConfigurationWrapper defined in kotlin.script.experimental.api.ResultWithDiagnostics.Success[DeserializedPropertyDescriptor@70aac03f]
R: ScriptCompilationConfigurationWrapper

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@32e1dbca]
T: KtFile

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@416980ec]
T: KtFile

@org.jetbrains.annotations.NotNull public open fun <T : (kotlin.Any..kotlin.Any?)> getNotNull(@org.jetbrains.annotations.NotNull p0: org.jetbrains.kotlin.config.CompilerConfigurationKey<(T..T?)>): T defined in org.jetbrains.kotlin.config.CompilerConfiguration[JavaMethodDescriptor@2152f00a]
T: MessageCollector

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@27d8fe2d]
R: ByteArrayInputStream

public inline fun <R> kotlin.script.experimental.api.ResultWithDiagnostics<R>.valueOr(body: (kotlin.script.experimental.api.ResultWithDiagnostics.Failure) -> kotlin.Nothing): R defined in kotlin.script.experimental.api[DeserializedSimpleFunctionDescriptor@3a172a80]
R: SharedScriptCompilationContext

public inline fun <R> kotlin.script.experimental.api.ResultWithDiagnostics<R>.valueOr(body: (kotlin.script.experimental.api.ResultWithDiagnostics.Failure) -> kotlin.Nothing): R defined in kotlin.script.experimental.api[DeserializedSimpleFunctionDescriptor@3a172a80]
R: KtFile

public inline fun <R> kotlin.script.experimental.api.ResultWithDiagnostics<R>.valueOr(body: (kotlin.script.experimental.api.ResultWithDiagnostics.Failure) -> kotlin.Nothing): R defined in kotlin.script.experimental.api[DeserializedSimpleFunctionDescriptor@3a172a80]
R: KtFile

public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.psi.KtFile> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2e1984c7]
A: List<KtFile>

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.scripting.compiler.plugin.dependencies.ScriptsCompilationDependencies.SourceDependencies> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@eec29d9]
B: List<SourceDependencies>

public final val item: org.jetbrains.kotlin.descriptors.ScriptDescriptor defined in org.jetbrains.kotlin.cli.common.repl.ReplHistoryRecord[DeserializedPropertyDescriptor@7fc4ae5e]
T: ScriptDescriptor

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@203c24bb]
T: GenerationState

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6cf0173d]
T: KtFile

public inline fun <R> kotlin.script.experimental.api.ResultWithDiagnostics<R>.valueOr(body: (kotlin.script.experimental.api.ResultWithDiagnostics.Failure) -> kotlin.Nothing): R defined in kotlin.script.experimental.api[DeserializedSimpleFunctionDescriptor@3a172a80]
R: ScriptCompilationConfiguration

public inline fun <R> kotlin.script.experimental.api.ResultWithDiagnostics<R>.valueOr(body: (kotlin.script.experimental.api.ResultWithDiagnostics.Failure) -> kotlin.Nothing): R defined in kotlin.script.experimental.api[DeserializedSimpleFunctionDescriptor@3a172a80]
R: ScriptCompilationConfiguration

public inline fun <R> kotlin.script.experimental.api.ResultWithDiagnostics<R>.valueOr(body: (kotlin.script.experimental.api.ResultWithDiagnostics.Failure) -> kotlin.Nothing): R defined in kotlin.script.experimental.api[DeserializedSimpleFunctionDescriptor@3a172a80]
R: KtFile

public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.psi.KtFile> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2e1984c7]
A: List<KtFile>

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.scripting.compiler.plugin.dependencies.ScriptsCompilationDependencies.SourceDependencies> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@eec29d9]
B: List<SourceDependencies>

val getScriptConfiguration: (org.jetbrains.kotlin.psi.KtFile) -> kotlin.script.experimental.api.ScriptCompilationConfiguration defined in org.jetbrains.kotlin.scripting.compiler.plugin.impl.compileImpl[LocalVariableDescriptor@2310c286] +++|+++
R: ScriptCompilationConfiguration

public final val value: kotlin.script.experimental.jvm.impl.KJvmCompiledScript<kotlin.Any> defined in kotlin.script.experimental.api.ResultWithDiagnostics.Success[DeserializedPropertyDescriptor@549c4103]
R: KJvmCompiledScript<Any>

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@26ac103a]
T: ResultWithDiagnostics<KJvmCompiledScript<Any>>

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6cf0173d]
T: KtFile

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6cf0173d]
T: KtFile

public final operator fun component1(): kotlin.script.experimental.api.ScriptCompilationConfiguration defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@13d23eb1]
A: ScriptCompilationConfiguration

public final operator fun component2(): org.jetbrains.kotlin.config.CompilerConfiguration defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4f4e5]
B: CompilerConfiguration

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@27d8fe2d]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@27d8fe2d]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@27d8fe2d]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@203c24bb]
T: CompilerConfiguration


@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@26ac103a]
T: ResultWithDiagnostics<T>



@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@27d8fe2d]
R: KJvmCompiledScript<Any>



@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@26ac103a]
T: Throwable

public final operator fun component1(): org.jetbrains.kotlin.cli.common.repl.ILineId defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@78038fbc]
A: ILineId

public final operator fun component2(): org.jetbrains.kotlin.cli.common.repl.ReplCodeLine defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@bae8dc7]
B: ReplCodeLine

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@203c24bb]
T: LightVirtualFile

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@5b7b6526]
T: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2d490f8f]
R: Pair<KtFile, DiagnosticMessageHolder>

public final operator fun component1(): org.jetbrains.kotlin.psi.KtFile defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2d9735d4]
A: KtFile

public final operator fun component2(): org.jetbrains.kotlin.scripting.compiler.plugin.repl.messages.DiagnosticMessageHolder defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4d426e10]
B: DiagnosticMessageHolder

public final val item: org.jetbrains.kotlin.descriptors.ScriptDescriptor defined in org.jetbrains.kotlin.cli.common.repl.ReplHistoryRecord[DeserializedPropertyDescriptor@28968521]
T: ScriptDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@27d8fe2d]
R: String

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@5b7b6526]
T: Nothing

public final val second: org.jetbrains.kotlin.scripting.compiler.plugin.repl.ReplCodeAnalyzer.ResettableAnalyzerState.LineInfo.SuccessfulLine defined in kotlin.Pair[DeserializedPropertyDescriptor@5a7d7c8b]
B: SuccessfulLine

public final val first: org.jetbrains.kotlin.cli.common.repl.ReplCodeLine defined in kotlin.Pair[DeserializedPropertyDescriptor@27048ac3]
A: ReplCodeLine

public final val first: org.jetbrains.kotlin.cli.common.repl.ReplCodeLine defined in kotlin.Pair[DeserializedPropertyDescriptor@68ae23dd]
A: ReplCodeLine

public inline fun <T> kotlin.sequences.Sequence<T>.first(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@412ca13c]
T: HierarchicalScope

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@193207be]
R: Unit

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4f3f3243]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4f3f3243]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4f3f3243]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4f3f3243]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4f3f3243]
E: String

public final operator fun component1(): org.jetbrains.kotlin.cli.common.repl.ILineId defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@18219414]
A: ILineId

public final operator fun component2(): org.jetbrains.kotlin.cli.common.repl.ReplCodeLine defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@30405e88]
B: ReplCodeLine

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@27d8fe2d]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@5b7b6526]
T: Unit

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@5b7b6526]
T: Compilation

public abstract fun next(): kotlin.Pair<org.jetbrains.kotlin.diagnostics.Diagnostic, kotlin.String> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@1824c5a2]
T: Pair<Diagnostic, String>

public final operator fun component1(): org.jetbrains.kotlin.diagnostics.Diagnostic defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@370f4364]
A: Diagnostic

public final operator fun component2(): kotlin.String defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4f6bc753]
B: String

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@9e84df0]
T: CompileService

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6bc84113]
R: KotlinRemoteReplCompilerClient

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@9e84df0]
T: KotlinRemoteReplCompilerClient

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@9e84df0]
T: GenericReplCompilingEvaluator

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@95c92f0]
T: CompilerConfiguration

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@9e84df0]
T: GenericReplCompiler

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@9e84df0]
T: GenericReplCompilingEvaluator

public abstract operator fun next(): java.io.File defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@291f1b48]
T: File

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@95c92f0]
T: Any

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@95c92f0]
T: Any

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@95c92f0]
T: Any

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@24c39f54]
T: FlatLibDirectoryResolver

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6bc84113]
R: File

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6bc84113]
R: List<File>

public abstract fun next(): java.io.File defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@d082677]
T: File

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6bc84113]
R: File

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@6bc84113]
R: FlatLibDirectoryResolver

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@35ca70c7]
R: MavenArtifactCoordinates

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@35ca70c7]
R: Boolean

public abstract operator fun invoke(p1: kotlin.String): kotlin.Unit defined in kotlin.Function1[FunctionInvokeDescriptor@1f813a61]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@35ca70c7]
R: DefaultArtifact

public abstract operator fun invoke(p1: kotlin.String): kotlin.Unit defined in kotlin.Function1[FunctionInvokeDescriptor@1f813a61]
R: Unit

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@28d239ec]
T: ScriptCompilationConfiguration

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@28d239ec]
T: ScriptEvaluationConfiguration

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@28d239ec]
T: JvmReplCompiler

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@28d239ec]
T: GenericReplCompilingEvaluatorBase

public final val item: kotlin.Pair<kotlin.reflect.KClass<*>?, kotlin.Any?> defined in org.jetbrains.kotlin.cli.common.repl.ReplHistoryRecord[DeserializedPropertyDescriptor@675cc7c3]
T: Pair<KClass<*>?, Any?>

public final operator fun component1(): kotlin.reflect.KFunction<*> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@1ad435f]
A: KFunction<*>

public final operator fun component2(): kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.Any?> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4b778a10]
B: Map<KParameter, Any?>

public abstract operator fun next(): kotlin.reflect.KFunction<*> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4f4d381b]
T: KFunction<*>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@14c61829]
T: MutableMap<(kotlin.String..kotlin.String?), (kotlin.Any..kotlin.Any?)>

public abstract fun next(): kotlin.collections.MutableMap.MutableEntry<(kotlin.String..kotlin.String?), (kotlin.Any..kotlin.Any?)> defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@16101d4f]
T: MutableEntry<(kotlin.String..kotlin.String?), (kotlin.Any..kotlin.Any?)>

public abstract operator fun next(): kotlin.collections.Map.Entry<kotlin.String, kotlin.script.experimental.api.KotlinType> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@61b815bc]
T: Entry<String, KotlinType>

public abstract val key: kotlin.String defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@44be5170]
K: String

public abstract val key: kotlin.String defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@44be5170]
K: String

public abstract val key: kotlin.String defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@44be5170]
K: String

public abstract val key: kotlin.String defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@44be5170]
K: String

public abstract val key: kotlin.String defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@44be5170]
K: String

public abstract val key: kotlin.String defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@44be5170]
K: String

public abstract val key: kotlin.String defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@44be5170]
K: String

public abstract operator fun next(): kotlin.collections.Map.Entry<kotlin.String, kotlin.ByteArray> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6d4b8539]
T: Entry<String, ByteArray>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5638920a]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6d66323e]
V: ByteArray

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@14c61829]
T: File

public abstract operator fun next(): kotlin.collections.Map.Entry<kotlin.String, kotlin.ByteArray> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@f3f7e82]
T: Entry<String, ByteArray>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5638920a]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6d66323e]
V: ByteArray

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@334ade63]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T : java.io.Closeable?, R> T.use(block: (T) -> R): R defined in kotlin.io[DeserializedSimpleFunctionDescriptor@334ade63]
R: Unit

public final val value: kotlin.Boolean defined in kotlin.script.experimental.api.ResultWithDiagnostics.Success[DeserializedPropertyDescriptor@16c156c0]
R: Boolean

public final val value: kotlin.Boolean defined in kotlin.script.experimental.api.ResultWithDiagnostics.Success[DeserializedPropertyDescriptor@6b6efa00]
R: Boolean

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@532897f4]
T: ReplCheckResult

public final val value: kotlin.script.experimental.api.CompiledScript<*> defined in kotlin.script.experimental.api.ResultWithDiagnostics.Success[DeserializedPropertyDescriptor@388363f6]
R: CompiledScript<*>

public final val value: kotlin.script.experimental.api.CompiledScript<*> defined in kotlin.script.experimental.api.ResultWithDiagnostics.Success[DeserializedPropertyDescriptor@388363f6]
R: CompiledScript<*>

public final val second: kotlin.script.experimental.api.KotlinType defined in kotlin.Pair[DeserializedPropertyDescriptor@5e6649f6]
B: KotlinType

public final val value: kotlin.script.experimental.api.CompiledScript<*> defined in kotlin.script.experimental.api.ResultWithDiagnostics.Success[DeserializedPropertyDescriptor@388363f6]
R: CompiledScript<*>

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@532897f4]
T: ReplCompileResult

public final val item: kotlin.Pair<kotlin.reflect.KClass<*>?, kotlin.Any?> defined in org.jetbrains.kotlin.cli.common.repl.ReplHistoryRecord[DeserializedPropertyDescriptor@69c45a59]
T: Pair<KClass<*>?, Any?>

public fun <T> runBlocking(context: kotlin.coroutines.CoroutineContext = ..., block: suspend kotlinx.coroutines.CoroutineScope.() -> T): T defined in kotlinx.coroutines[DeserializedSimpleFunctionDescriptor@50cec1ea]
T: ResultWithDiagnostics<EvaluationResult>

public final val value: kotlin.script.experimental.api.EvaluationResult defined in kotlin.script.experimental.api.ResultWithDiagnostics.Success[DeserializedPropertyDescriptor@5b41cb3e]
R: EvaluationResult

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2b03b601]
R: String

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@532897f4]
T: ReplEvalResult

@kotlin.internal.InlineOnly public inline fun <T> java.util.concurrent.locks.ReentrantReadWriteLock.write(action: () -> T): T defined in kotlin.concurrent[DeserializedSimpleFunctionDescriptor@532897f4]
T: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@65d282be]
R: Boolean

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@73f49853]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@73f49853]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@73f49853]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@73f49853]
E: String

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@e71e0fd]
T: IBiblioResolver

public abstract fun next(): org.apache.ivy.plugins.resolver.URLResolver defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@246d1a02]
T: URLResolver

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@34945d8b]
T: URLResolver

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ba6b678]
T: ChainResolver

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@e71e0fd]
T: IvySettings

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@e71e0fd]
T: ResolveOptions

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@e71e0fd]
T: File

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@65d282be]
R: String

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@e71e0fd]
T: URLResolver

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@ba6b678]
T: List<File>

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5524e9ad]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@18b972be]
T: ClassConstructorDescriptorImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5dbf5514]
R: Unit

public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@558cb35c]
T: String

public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@558cb35c]
T: String

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@27004b12]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@3c63efa0]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@42961c3e]
T: KotlinLexer

public abstract operator fun next(): org.jetbrains.kotlin.sourceSections.TokenRange defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@5a8bf738]
T: TokenRange

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@2bf0b3d]
R: Unit

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@5f09c3bd]
E: IrValueParameter

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1b389f38]
E: SerializableProperty

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@5f09c3bd]
E: IrValueParameter

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@53ea1eba]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: Pair<IrProperty, IrExpression>

public final operator fun component1(): org.jetbrains.kotlin.ir.declarations.IrProperty defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@431d32e6]
A: IrProperty

public final operator fun component2(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@f9d52be]
B: IrExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@134cea0c]
T: IrDelegatingConstructorCallImpl

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.PropertyDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@666a6c81]
E: PropertyDescriptor

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.PropertyDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@666a6c81]
E: PropertyDescriptor

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7cdf09f1]
T: IrTypeArgument

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@53c96f45]
R: Function1<SerializableProperty, IrExpression?>

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@e5111ad]
T: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: IrFunctionSymbol

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@5f09c3bd]
E: IrValueParameter

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@5f09c3bd]
E: IrValueParameter

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@151ea114]
T: IndexedValue<SerializableProperty>

public final operator fun component2(): org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@11c221de]
T: SerializableProperty

public final operator fun component1(): org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@306dc50b]
A: IrFunctionSymbol

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.ir.expressions.IrExpression> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@224302ab]
B: List<IrExpression>

public final operator fun component1(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@59262e15]
A: IrExpression

public final operator fun component2(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@61781cf5]
B: KotlinType

public abstract fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrValueParameter defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@5f09c3bd]
E: IrValueParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: IrFunctionSymbol

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrVariable defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2a1b53b6]
E: IrVariable

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrVariable defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3a9616a7]
E: IrVariable

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.declarations.IrVariable defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3a9616a7]
E: IrVariable

public final operator fun component1(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@42512e5d]
A: Int

public final operator fun component2(): org.jetbrains.kotlin.ir.expressions.IrExpression defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@20f21982]
B: IrExpression

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6323e74d]
T: IrWhileLoopImpl

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@7e9f9a9a]
T: FunctionDescriptor

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@7f0cbf4c]
E: SerializableProperty

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@e5111ad]
T: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: JsName

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@e5111ad]
T: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: JsName

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@e5111ad]
T: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: JsExpression

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@e5111ad]
T: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: JsName

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@e5111ad]
T: FunctionDescriptor

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@e5111ad]
T: FunctionDescriptor

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7122219]
T: IndexedValue<SerializableProperty>

public final operator fun component2(): org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@48a9db39]
T: SerializableProperty

public inline fun <T> kotlin.sequences.Sequence<T>.single(predicate: (T) -> kotlin.Boolean): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@7e9f9a9a]
T: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: JsName

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsNameRef defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@39ae606]
E: JsNameRef

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@e5111ad]
T: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: JsName

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@e5111ad]
T: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: JsName

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsNameRef defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@540e9c06]
E: JsNameRef

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsNameRef defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@540e9c06]
E: JsNameRef

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsNameRef defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@540e9c06]
E: JsNameRef

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsNameRef defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@540e9c06]
E: JsNameRef

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsNameRef defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@540e9c06]
E: JsNameRef

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsNameRef defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@39ae606]
E: JsNameRef

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: JsExpression

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@e5111ad]
T: FunctionDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: JsName

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@e90b30f]
T: Set<KotlinType>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@e90b30f]
T: Map<KotlinType, ClassDescriptor>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: Nothing

public final operator fun component2(): kotlin.Boolean defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@29f8cc92]
B: Boolean

public final val first: kotlin.collections.List<org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty> defined in kotlin.Pair[DeserializedPropertyDescriptor@36d9f212]
A: List<SerializableProperty>

public final val first: kotlin.collections.List<org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty> defined in kotlin.Pair[DeserializedPropertyDescriptor@36d9f212]
A: List<SerializableProperty>

public final val second: kotlin.collections.List<org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty> defined in kotlin.Pair[DeserializedPropertyDescriptor@470ff3c0]
B: List<SerializableProperty>

public final val second: kotlin.collections.List<org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty> defined in kotlin.Pair[DeserializedPropertyDescriptor@470ff3c0]
B: List<SerializableProperty>

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@53c96f45]
R: List<SerializableProperty>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: Unit



@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@134cea0c]
T: TypeTranslator

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6323e74d]
T: IrSimpleFunction



@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: IrFunctionAccessExpression

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6323e74d]
T: IrMemberAccessExpression

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@134cea0c]
T: IrMemberAccessExpression


public inline fun <T, D : org.jetbrains.kotlin.descriptors.DeclarationDescriptor> org.jetbrains.kotlin.ir.util.SymbolTable.withScope(owner: D, block: org.jetbrains.kotlin.ir.util.SymbolTable.(D) -> T): T defined in org.jetbrains.kotlin.ir.util[DeserializedSimpleFunctionDescriptor@41babba2]
T: Unit

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6323e74d]
T: T


@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5f14a29a]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@134cea0c]
T: IrField

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@134cea0c]
T: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: IrSimpleFunction

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@134cea0c]
T: IrSimpleFunction

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@74652c89]
T: IrValueParameter

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6323e74d]
T: IrValueParameterImpl

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6323e74d]
T: IrTypeParameterImpl

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: IrExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@423118ec]
E: IrConstructorSymbol

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.PropertyDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@666a6c81]
E: PropertyDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: List<IrExpression>

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@20a0c5a4]
E: TypeProjection

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.ir.types.IrType defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@7fb8a7fe]
E: IrType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: IrConstructorSymbol

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: IrConstructorSymbol

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@134cea0c]
T: IrConstructorCallImpl

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@238b7ad7]
T: IrValueParameter

public inline fun <T, D : org.jetbrains.kotlin.descriptors.DeclarationDescriptor> org.jetbrains.kotlin.ir.util.SymbolTable.withScope(owner: D, block: org.jetbrains.kotlin.ir.util.SymbolTable.(D) -> T): T defined in org.jetbrains.kotlin.ir.util[DeserializedSimpleFunctionDescriptor@41babba2]
T: Unit

public abstract operator fun next(): org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@56225103]
T: SerializableProperty






public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@20a0c5a4]
E: TypeProjection

public abstract val value: org.jetbrains.kotlin.psi.KtProperty defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@4f33197a]
V: KtProperty

public abstract val value: org.jetbrains.kotlin.psi.KtParameter defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@41bed0ea]
V: KtParameter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: JsExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1b389f38]
E: SerializableProperty

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.js.backend.ast.JsNameRef defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3b5d3b15]
E: JsNameRef

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b11de2c]
K: PropertyDescriptor

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@e5111ad]
T: FunctionDescriptor

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@e5111ad]
T: FunctionDescriptor

public fun <T> kotlin.sequences.Sequence<T>.single(): T defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@e5111ad]
T: FunctionDescriptor

public abstract operator fun next(): org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@56225103]
T: SerializableProperty

public abstract operator fun next(): kotlin.Triple<org.jetbrains.kotlin.descriptors.ClassDescriptor, kotlin.collections.List<org.jetbrains.kotlin.psi.ValueArgument>, kotlin.collections.List<org.jetbrains.kotlin.descriptors.ValueParameterDescriptor>> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@432eda7d]
T: Triple<ClassDescriptor, List<ValueArgument>, List<ValueParameterDescriptor>>

public final operator fun component1(): org.jetbrains.kotlin.descriptors.ClassDescriptor defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@6373afca]
A: ClassDescriptor

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.psi.ValueArgument> defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@637e5654]
B: List<ValueArgument>

public final operator fun component3(): kotlin.collections.List<org.jetbrains.kotlin.descriptors.ValueParameterDescriptor> defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@6efabec9]
C: List<ValueParameterDescriptor>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@134cea0c]
T: JsFunction


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6ad88089]
T: SerializableProperty


@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <T> T.also(block: (T) -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@6323e74d]
T: Boolean

public abstract operator fun invoke(p1: org.jetbrains.org.objectweb.asm.commons.InstructionAdapter, p2: kotlin.Int): kotlin.Unit defined in kotlin.Function2[FunctionInvokeDescriptor@2c2e0e6e]
R: Unit

public final operator fun component1(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@32363f3e]
A: KotlinType

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.types.TypeProjection defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@20a0c5a4]
E: TypeProjection

public abstract operator fun get(index: kotlin.Int): kotlin.Pair<org.jetbrains.kotlin.types.KotlinType, org.jetbrains.kotlin.descriptors.ClassDescriptor?> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@12e9c749]
E: Pair<KotlinType, ClassDescriptor?>

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@134cea0c]
T: InstructionAdapter

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: Nothing

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: KtExpression

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: KtExpression

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1b389f38]
E: SerializableProperty

public final operator fun component1(): org.jetbrains.kotlin.psi.KtExpression defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3bce7164]
A: KtExpression

public final operator fun component2(): org.jetbrains.org.objectweb.asm.Type defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@3141c3f8]
B: Type

public final operator fun component1(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@29dfef0f]
A: Int

public final operator fun component2(): kotlin.Int defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@349cde20]
B: Int

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: Unit

public abstract val value: org.jetbrains.kotlin.psi.KtProperty defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@45524ac4]
V: KtProperty

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b11de2c]
K: PropertyDescriptor

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10f5b35d]
V: KtProperty

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b11de2c]
K: PropertyDescriptor

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10f5b35d]
V: KtParameter

public abstract operator fun next(): org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@56225103]
T: SerializableProperty

public abstract operator fun next(): kotlin.Triple<org.jetbrains.kotlin.descriptors.ClassDescriptor, kotlin.collections.List<org.jetbrains.kotlin.psi.ValueArgument>, kotlin.collections.List<org.jetbrains.kotlin.descriptors.ValueParameterDescriptor>> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@d8e4a58]
T: Triple<ClassDescriptor, List<ValueArgument>, List<ValueParameterDescriptor>>

public final operator fun component1(): org.jetbrains.kotlin.descriptors.ClassDescriptor defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@33d99cfc]
A: ClassDescriptor

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.psi.ValueArgument> defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@917b786]
B: List<ValueArgument>

public final operator fun component3(): kotlin.collections.List<org.jetbrains.kotlin.descriptors.ValueParameterDescriptor> defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@18bb1dff]
C: List<ValueParameterDescriptor>

public abstract operator fun next(): kotlin.Triple<org.jetbrains.kotlin.descriptors.ClassDescriptor, kotlin.collections.List<org.jetbrains.kotlin.psi.ValueArgument>, kotlin.collections.List<org.jetbrains.kotlin.descriptors.ValueParameterDescriptor>> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@432eda7d]
T: Triple<ClassDescriptor, List<ValueArgument>, List<ValueParameterDescriptor>>

public final operator fun component1(): org.jetbrains.kotlin.descriptors.ClassDescriptor defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@6373afca]
A: ClassDescriptor

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.psi.ValueArgument> defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@637e5654]
B: List<ValueArgument>

public final operator fun component3(): kotlin.collections.List<org.jetbrains.kotlin.descriptors.ValueParameterDescriptor> defined in kotlin.Triple[DeserializedSimpleFunctionDescriptor@6efabec9]
C: List<ValueParameterDescriptor>

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5f14a29a]
R: Unit

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.psi.ValueArgument defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@148d18c1]
E: ValueArgument

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.ValueParameterDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@53f77361]
E: ValueParameterDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5f14a29a]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: Unit

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1b389f38]
E: SerializableProperty

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@41943ef7]
E: SerializableProperty

public abstract operator fun next(): org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@56225103]
T: SerializableProperty

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@11079c4]
T: IndexedValue<SerializableProperty>

public final operator fun component2(): org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@225d9e4c]
T: SerializableProperty

val bitMaskOff: (kotlin.Int) -> kotlin.Int defined in org.jetbrains.kotlinx.serialization.compiler.backend.jvm.SerializerCodegenImpl.generateLoad.<anonymous>[LocalVariableDescriptor@1e40ce59] +++|+++
R: Int

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3b0d36ec]
T: IndexedValue<SerializableProperty>

public final operator fun component2(): org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@5caa0a67]
T: SerializableProperty

public abstract operator fun next(): org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@2eeeadd]
T: SerializableProperty

public abstract operator fun next(): kotlin.collections.IndexedValue<org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4544480f]
T: IndexedValue<SerializableProperty>

public final operator fun component2(): org.jetbrains.kotlinx.serialization.compiler.resolve.SerializableProperty defined in kotlin.collections.IndexedValue[DeserializedSimpleFunctionDescriptor@475ba0c9]
T: SerializableProperty

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b11de2c]
K: PropertyDescriptor

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10f5b35d]
V: KtDeclaration

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7cdf09f1]
T: TypeProjection

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: Unit

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7cdf09f1]
T: TypeProjection


public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3c83b6a4]
T: [@kotlin.jvm.JvmWildcard] PropertyDescriptor

public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3c83b6a4]
T: [@kotlin.jvm.JvmWildcard] SimpleFunctionDescriptor

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.PropertyDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@59972ac7]
T: PropertyDescriptor

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.TypeParameterDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@1094095d]
E: TypeParameterDescriptor

public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.descriptors.TypeParameterDescriptor> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@601e5caf]
A: List<TypeParameterDescriptor>

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.descriptors.ValueParameterDescriptor> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@62094ca4]
B: List<ValueParameterDescriptor>

public final operator fun component1(): kotlin.collections.List<org.jetbrains.kotlin.descriptors.TypeParameterDescriptor> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@601e5caf]
A: List<TypeParameterDescriptor>

public final operator fun component2(): kotlin.collections.List<org.jetbrains.kotlin.descriptors.ValueParameterDescriptor> defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@62094ca4]
B: List<ValueParameterDescriptor>

public abstract operator fun get(index: kotlin.Int): org.jetbrains.kotlin.descriptors.PropertyDescriptor defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@7fd5cb5]
E: PropertyDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.run(block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@53c96f45]
R: Boolean

public abstract val key: org.jetbrains.kotlin.name.Name defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@60b75792]
K: Name

public abstract val value: org.jetbrains.kotlin.resolve.constants.ConstantValue<*> defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@26ccaeda]
V: ConstantValue<*>

public abstract val key: org.jetbrains.kotlin.name.Name defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@60b75792]
K: Name

public abstract val value: org.jetbrains.kotlin.resolve.constants.ConstantValue<*> defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@26ccaeda]
V: ConstantValue<*>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@1d9b021a]
R: Triple<ClassDescriptor, (kotlin.collections.MutableList<out (org.jetbrains.kotlin.psi.ValueArgument..org.jetbrains.kotlin.psi.ValueArgument?)>..kotlin.collections.List<(org.jetbrains.kotlin.psi.ValueArgument..org.jetbrains.kotlin.psi.ValueArgument?)>), List<(org.jetbrains.kotlin.descriptors.ValueParameterDescriptor..org.jetbrains.kotlin.descriptors.ValueParameterDescriptor?)>>



@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <R, T> kotlin.Result<T>.fold(onSuccess: (value: T) -> R, onFailure: (exception: kotlin.Throwable) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5d679bb2]
R: Nothing

@kotlin.internal.InlineOnly @kotlin.SinceKotlin public inline fun <R, T> kotlin.Result<T>.fold(onSuccess: (value: T) -> R, onFailure: (exception: kotlin.Throwable) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5d679bb2]
R: Nothing



public final val lazyResources: () -> kotlin.collections.List<org.jetbrains.kotlin.android.synthetic.res.AndroidResource> defined in org.jetbrains.kotlin.android.synthetic.descriptors.AndroidSyntheticPackageData[PropertyDescriptorImpl@2b613e26] +++|+++
R: List<AndroidResource>

public abstract operator fun next(): org.jetbrains.kotlin.android.synthetic.res.AndroidResource defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@505a48d4]
T: AndroidResource

public abstract operator fun next(): org.jetbrains.kotlin.android.synthetic.descriptors.WidgetReceiver defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@504689cf]
T: WidgetReceiver

public abstract operator fun next(): kotlin.Pair<org.jetbrains.kotlin.types.SimpleType, org.jetbrains.kotlin.types.SimpleType> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@41dc8540]
T: Pair<SimpleType, SimpleType>

public final operator fun component1(): org.jetbrains.kotlin.types.SimpleType defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@19583ea3]
A: SimpleType

public final operator fun component2(): org.jetbrains.kotlin.types.SimpleType defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@41bb6369]
B: SimpleType


private final val functions: (org.jetbrains.kotlin.android.synthetic.descriptors.PredefinedPackageFragmentDescriptor) -> kotlin.collections.Collection<org.jetbrains.kotlin.descriptors.SimpleFunctionDescriptor> defined in org.jetbrains.kotlin.android.synthetic.descriptors.PredefinedPackageFragmentDescriptor[PropertyDescriptorImpl@1cd84875] +++|+++
R: Collection<SimpleFunctionDescriptor>

public abstract operator fun invoke(): org.jetbrains.kotlin.descriptors.PackageFragmentDescriptor defined in kotlin.Function0[FunctionInvokeDescriptor@449cad79]
R: PackageFragmentDescriptor

public abstract val key: kotlin.String defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@40f47495]
K: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5b8d0112]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5b8d0112]
R: Unit

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60aeb2ab]
T: ArrayList<WidgetReceiver>

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5b8d0112]
R: Unit

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60aeb2ab]
T: MutableList<WidgetReceiver>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.Lazy<T>.getValue(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): T defined in kotlin[DeserializedSimpleFunctionDescriptor@60aeb2ab]
T: List<Pair<SimpleType, SimpleType>>

public final val descriptor: () -> org.jetbrains.kotlin.descriptors.PackageFragmentDescriptor defined in org.jetbrains.kotlin.android.synthetic.descriptors.PredefinedPackageFragmentDescriptor.LazyAndroidExtensionsPackageFragmentDescriptor[PropertyDescriptorImpl@4ad1bcc0] +++|+++
R: PackageFragmentDescriptor

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5b8d0112]
R: String

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4f04d08d]
R: ArrayList<String>

public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6be8b1d5]
T: TypeProjection

@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@75792f9b]
R: Unit

public final operator fun component1(): org.jetbrains.org.objectweb.asm.Type defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@659fde63]
A: Type

public final operator fun component2(): kotlin.String defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4998224d]
B: String

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c3d265f]
T: FrameMap

public abstract operator fun next(): org.jetbrains.kotlin.android.parcel.ParcelableCodegenExtension.PropertyToSerialize defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@46930c17]
T: PropertyToSerialize

public final operator fun component1(): org.jetbrains.org.objectweb.asm.Type defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@659fde63]
A: Type

public final operator fun component2(): kotlin.String defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4998224d]
B: String

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c3d265f]
T: FrameMap

public abstract operator fun next(): org.jetbrains.kotlin.android.parcel.ParcelableCodegenExtension.PropertyToSerialize defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@30fe22e2]
T: PropertyToSerialize

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c3d265f]
T: ClassConstructorDescriptorImpl

public final operator fun component1(): org.jetbrains.org.objectweb.asm.Type defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@659fde63]
A: Type

public final operator fun component2(): kotlin.String defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@4998224d]
B: String


@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@75792f9b]
R: Unit

public abstract operator fun next(): org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@57709b54]
T: AnnotationDescriptor

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component1(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@39af57d3]
T: TypeProjection

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component2(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@51ce364d]
T: TypeProjection

public abstract operator fun next(): org.jetbrains.kotlin.psi.KtSuperTypeListEntry defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@7dd7a88e]
T: KtSuperTypeListEntry

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5b8d0112]
R: (kotlin.collections.MutableSet<(org.jetbrains.kotlin.types.KotlinType..org.jetbrains.kotlin.types.KotlinType?)>..kotlin.collections.Set<(org.jetbrains.kotlin.types.KotlinType..org.jetbrains.kotlin.types.KotlinType?)>)

public final operator fun component1(): kotlin.String defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@2636fa36]
A: String

public final operator fun component2(): org.jetbrains.kotlin.types.KotlinType defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@7f77246]
B: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5b8d0112]
R: Boolean

public final val first: org.jetbrains.kotlin.types.KotlinType defined in kotlin.Pair[DeserializedPropertyDescriptor@10b9ad33]
A: KotlinType

public final val second: org.jetbrains.kotlin.types.KotlinType defined in kotlin.Pair[DeserializedPropertyDescriptor@6b685bb5]
B: KotlinType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5b8d0112]
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5b8d0112]
R: Nothing

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4bc0e76]
T: TypeProjection

@kotlin.internal.InlineOnly public inline fun <T> T.apply(block: T.() -> kotlin.Unit): T defined in kotlin[DeserializedSimpleFunctionDescriptor@c3d265f]
T: List<TypeProjection>

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component1(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@39af57d3]
T: TypeProjection

@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component2(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@51ce364d]
T: TypeProjection

public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4bc0e76]
T: TypeProjection

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5b8d0112]
R: ParcelSerializer

@kotlin.SinceKotlin public fun <K, V> kotlin.collections.Map<K, V>.getValue(key: K): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3d4dab50]
V: String

public final val signature: kotlin.String defined in org.jetbrains.kotlin.android.parcel.serializers.Method[PropertyDescriptorImpl@500007a6]
T: String

public final val signature: kotlin.String defined in org.jetbrains.kotlin.android.parcel.serializers.Method[PropertyDescriptorImpl@4826f342]
T: String

public final val signature: kotlin.String defined in org.jetbrains.kotlin.android.parcel.serializers.Method[PropertyDescriptorImpl@77f344a0]
T: String

public final val signature: kotlin.String defined in org.jetbrains.kotlin.android.parcel.serializers.Method[PropertyDescriptorImpl@7ab69b09]
T: String

public final val signature: kotlin.String defined in org.jetbrains.kotlin.android.parcel.serializers.Method[PropertyDescriptorImpl@2e6a0176]
T: String

public final val signature: kotlin.String defined in org.jetbrains.kotlin.android.parcel.serializers.Method[PropertyDescriptorImpl@1d6f2d8a]
T: String



public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4c2f3b62]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@770a1569]
E: String

public abstract operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@770a1569]
E: String


private final val elementCallback: (org.jetbrains.kotlin.android.synthetic.res.ResourceIdentifier, kotlin.String) -> kotlin.Unit defined in org.jetbrains.kotlin.android.synthetic.AndroidXmlHandler[PropertyDescriptorImpl@46067add] +++|+++
R: Unit

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5b8d0112]
R: Nothing





@kotlin.internal.InlineOnly public inline fun <T, R> with(receiver: T, block: T.() -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@75792f9b]
R: Unit

public inline fun <T, R> kotlin.collections.Iterable<T>.fold(initial: R, operation: (acc: R, T) -> R): R defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4f04d08d]
R: ArrayList<PsiFile>

public abstract val value: kotlin.collections.List<com.intellij.psi.PsiFile> defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@24107a12]
V: List<PsiFile>

public abstract operator fun next(): kotlin.collections.List<org.jetbrains.kotlin.android.synthetic.res.AndroidResource> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@4abe6cf3]
T: List<AndroidResource>

public abstract operator fun next(): org.jetbrains.kotlin.android.synthetic.res.AndroidResource defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@41594cae]
T: AndroidResource

public abstract operator fun next(): org.jetbrains.kotlin.android.synthetic.res.AndroidVariantData defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@a823bee]
T: AndroidVariantData

public abstract operator fun next(): kotlin.collections.Map.Entry<kotlin.String, kotlin.collections.List<com.intellij.psi.PsiFile>> defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@6e56a44d]
T: Entry<String, List<PsiFile>>

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49dc82ff]
K: String

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3dbc2f5d]
V: List<PsiFile>

public abstract operator fun next(): org.jetbrains.kotlin.android.synthetic.res.AndroidVariantData defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@a823bee]
T: AndroidVariantData

public fun <T> kotlin.collections.List<T>.last(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4ebdbbeb]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5b8d0112]
R: Unit

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component1(): K defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49dc82ff]
K: FqName

@kotlin.internal.InlineOnly public inline operator fun <K, V> kotlin.collections.Map.Entry<K, V>.component2(): V defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3dbc2f5d]
V: Function0<PackageFragmentDescriptor>

public abstract val key: org.jetbrains.kotlin.name.FqName defined in kotlin.collections.Map.Entry[DeserializedPropertyDescriptor@779fa523]
K: FqName

public abstract operator fun next(): kotlin.String defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3cac31e]
T: String

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5b8d0112]
R: XmlSourceElement

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5b8d0112]
R: SimpleType

@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@5b8d0112]
R: XmlSourceElement

public abstract operator fun next(): org.jetbrains.kotlin.backend.common.output.OutputFile defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@67cf3e9f]
T: OutputFile

public abstract operator fun next(): org.jetbrains.kotlin.jvm.abi.JvmAbiAnalysisHandlerExtension.AbiOutput defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@92c4822]
T: AbiOutput

public abstract operator fun next(): org.jetbrains.kotlin.jvm.abi.JvmAbiAnalysisHandlerExtension.AbiOutput defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@92c4822]
T: AbiOutput

public final operator fun component1(): org.jetbrains.kotlin.metadata.jvm.deserialization.JvmNameResolver defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@21b0b70]
A: JvmNameResolver

public final operator fun component2(): org.jetbrains.kotlin.metadata.ProtoBuf.Class defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@66ef27bc]
B: Class

public abstract operator fun next(): org.jetbrains.kotlin.jvm.abi.JvmAbiAnalysisHandlerExtension.AbiOutput defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@92c4822]
T: AbiOutput


@kotlin.internal.InlineOnly public inline fun <T, R> T.let(block: (T) -> R): R defined in kotlin[DeserializedSimpleFunctionDescriptor@4feec458]
R: Unit






