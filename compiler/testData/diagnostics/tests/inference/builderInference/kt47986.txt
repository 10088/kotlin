package

@kotlin.OptIn(markerClass = {kotlin.experimental.ExperimentalTypeInference::class}) public fun </*0*/ T> buildFoo(/*0*/ @kotlin.BuilderInference builderAction: Foo<T>.() -> kotlin.Unit): Foo<T>
public fun main(): kotlin.Unit
public fun </*0*/ K> Foo<K>.bar(/*0*/ x: kotlin.Int = ...): kotlin.Unit

public final class Foo</*0*/ A> {
    public constructor Foo</*0*/ A>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
