package

public fun main(/*0*/ a: Simple): kotlin.Unit

public open class Simple {
    public constructor Simple()
    @org.jspecify.annotations.Nullable public final var field: @org.jspecify.annotations.Nullable Simple.Derived!
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    @org.jspecify.annotations.Nullable public open fun foo(/*0*/ x: Simple.Derived!, /*1*/ @org.jspecify.annotations.NullnessUnspecified y: @org.jspecify.annotations.NullnessUnspecified Simple.Base!): @org.jspecify.annotations.Nullable Simple.Derived!
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    public open class Base {
        public constructor Base()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public open class Derived : Simple.Base {
        public constructor Derived()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public/*package*/ open fun foo(): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    // Static members
    public open fun main(/*0*/ a: Simple!): kotlin.Unit
}
