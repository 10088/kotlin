package

public fun main(/*0*/ aNotNullNotNullNotNull: WildcardsWithDefaultA<kotlin.Any, kotlin.Any, kotlin.Any>, /*1*/ aNotNullNotNullNull: WildcardsWithDefaultA<kotlin.Any, kotlin.Any, kotlin.Any?>, /*2*/ aNotNullNullNotNull: WildcardsWithDefaultA<kotlin.Any, kotlin.Any?, kotlin.Any>, /*3*/ aNotNullNullNull: WildcardsWithDefaultA<kotlin.Any, kotlin.Any?, kotlin.Any?>, /*4*/ b: WildcardsWithDefaultB): kotlin.Unit

public open class WildcardsWithDefaultA</*0*/ T : kotlin.Any!, /*1*/ E : @org.jspecify.annotations.Nullable kotlin.Any!, /*2*/ F : @org.jspecify.annotations.NullnessUnspecified kotlin.Any!> {
    public constructor WildcardsWithDefaultA</*0*/ T : kotlin.Any!, /*1*/ E : @org.jspecify.annotations.Nullable kotlin.Any!, /*2*/ F : @org.jspecify.annotations.NullnessUnspecified kotlin.Any!>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    // Static members
    public open fun main(/*0*/ aNullUnspecNullUnspecNullUnspec: WildcardsWithDefaultA<kotlin.Any!, kotlin.Any!, kotlin.Any!>!, /*1*/ aNullUnspecNullUnspecNull: WildcardsWithDefaultA<kotlin.Any!, kotlin.Any!, @org.jspecify.annotations.Nullable kotlin.Any!>!, /*2*/ aNullUnspecNullNullUnspec: WildcardsWithDefaultA<kotlin.Any!, @org.jspecify.annotations.Nullable kotlin.Any!, kotlin.Any!>!, /*3*/ aNullUnspecNullNull: WildcardsWithDefaultA<kotlin.Any!, @org.jspecify.annotations.Nullable kotlin.Any!, @org.jspecify.annotations.Nullable kotlin.Any!>!, /*4*/ b: WildcardsWithDefaultB!): kotlin.Unit
}

@org.jspecify.annotations.DefaultNotNull public open class WildcardsWithDefaultB {
    public constructor WildcardsWithDefaultB()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open fun noBoundsNotNull(/*0*/ a: WildcardsWithDefaultA<*, *, *>!): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
