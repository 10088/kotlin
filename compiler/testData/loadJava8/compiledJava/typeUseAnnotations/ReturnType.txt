package test

@kotlin.annotation.Target(allowedTargets = {AnnotationTarget.TYPE}) public/*package*/ final annotation class A : kotlin.Annotation {
    public/*package*/ constructor A(/*0*/ value: kotlin.String = ...)
    public final val value: kotlin.String
}

public/*package*/ interface ReturnType {
    public abstract fun f0(): test.ReturnType.G1<@test.A test.ReturnType.G0!>!
    public abstract fun f1(): test.ReturnType.G1<test.ReturnType.G1<test.ReturnType.G1<test.ReturnType.G1<@test.A test.ReturnType.G0!>!>!>!>!
    public abstract fun f10(): test.ReturnType.G1<in @test.A kotlin.String!>!
    public abstract fun f11(): test.ReturnType.G2<in @test.A kotlin.String!, test.ReturnType.G2<in @test.A kotlin.Int!, test.ReturnType.G2<in @test.A test.ReturnType.G2<kotlin.Int!, in @test.A kotlin.Int!>!, in @test.A kotlin.Int!>!>!>!
    public abstract fun f12(): test.ReturnType.G2<in @test.A kotlin.String!, test.ReturnType.G2<out @test.A kotlin.Int!, test.ReturnType.G2<out @test.A test.ReturnType.G2<kotlin.Int!, in @test.A kotlin.Int!>!, out @test.A kotlin.Int!>!>!>!
    public abstract fun f2(): test.ReturnType.G1<@test.A kotlin.String!>!
    public abstract fun f3(): test.ReturnType.G2<@test.A kotlin.String!, test.ReturnType.G2<@test.A kotlin.Int!, test.ReturnType.G2<@test.A test.ReturnType.G2<kotlin.Int!, @test.A kotlin.Int!>!, @test.A kotlin.Int!>!>!>!
    public abstract fun f4(): test.ReturnType.G1<out @test.A test.ReturnType.G0!>!
    public abstract fun f5(): test.ReturnType.G1<test.ReturnType.G1<test.ReturnType.G1<test.ReturnType.G1<out @test.A test.ReturnType.G0!>!>!>!>!
    public abstract fun f6(): test.ReturnType.G1<out @test.A kotlin.String!>!
    public abstract fun f7(): test.ReturnType.G2<out @test.A kotlin.String!, test.ReturnType.G2<out @test.A kotlin.Int!, test.ReturnType.G2<out @test.A test.ReturnType.G2<kotlin.Int!, out @test.A kotlin.Int!>!, out @test.A kotlin.Int!>!>!>!
    public abstract fun f8(): test.ReturnType.G1<in @test.A test.ReturnType.G0!>!
    public abstract fun f9(): test.ReturnType.G1<test.ReturnType.G1<test.ReturnType.G1<test.ReturnType.G1<in @test.A test.ReturnType.G0!>!>!>!>!

    public interface G0 {
    }

    public interface G1</*0*/ T : kotlin.Any!> {
    }

    public interface G2</*0*/ A : kotlin.Any!, /*1*/ B : kotlin.Any!> {
    }
}
