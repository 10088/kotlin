/*
 * Copyright 2010-2020 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.jvm.compiler;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("compiler/testData/foreignAnnotationsJava8/tests/jspecify/kotlin")
@TestDataPath("$PROJECT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public class JspecifyAnnotationsTestGenerated extends AbstractJspecifyAnnotationsTest {
    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
    }

    public void testAllFilesPresentInKotlin() throws Exception {
        KotlinTestUtils.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/foreignAnnotationsJava8/tests/jspecify/kotlin"), Pattern.compile("^(.+)\\.kt$"), null, true);
    }

    @TestMetadata("annotatedWildcards.kt")
    public void testAnnotatedWildcards() throws Exception {
        runTest("compiler/testData/foreignAnnotationsJava8/tests/jspecify/kotlin/annotatedWildcards.kt");
    }

    @TestMetadata("defaults.kt")
    public void testDefaults() throws Exception {
        runTest("compiler/testData/foreignAnnotationsJava8/tests/jspecify/kotlin/defaults.kt");
    }

    @TestMetadata("ignoreAnnotations.kt")
    public void testIgnoreAnnotations() throws Exception {
        runTest("compiler/testData/foreignAnnotationsJava8/tests/jspecify/kotlin/ignoreAnnotations.kt");
    }

    @TestMetadata("nonPlatformTypeParameter.kt")
    public void testNonPlatformTypeParameter() throws Exception {
        runTest("compiler/testData/foreignAnnotationsJava8/tests/jspecify/kotlin/nonPlatformTypeParameter.kt");
    }

    @TestMetadata("simple.kt")
    public void testSimple() throws Exception {
        runTest("compiler/testData/foreignAnnotationsJava8/tests/jspecify/kotlin/simple.kt");
    }

    @TestMetadata("typeArgumentsFromParameterBounds.kt")
    public void testTypeArgumentsFromParameterBounds() throws Exception {
        runTest("compiler/testData/foreignAnnotationsJava8/tests/jspecify/kotlin/typeArgumentsFromParameterBounds.kt");
    }

    @TestMetadata("typeParameterBounds.kt")
    public void testTypeParameterBounds() throws Exception {
        runTest("compiler/testData/foreignAnnotationsJava8/tests/jspecify/kotlin/typeParameterBounds.kt");
    }

    @TestMetadata("WildcardsWithDefault.kt")
    public void testWildcardsWithDefault() throws Exception {
        runTest("compiler/testData/foreignAnnotationsJava8/tests/jspecify/kotlin/WildcardsWithDefault.kt");
    }
}
