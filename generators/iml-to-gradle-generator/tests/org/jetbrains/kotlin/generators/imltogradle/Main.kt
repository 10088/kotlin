/*
 * Copyright 2010-2021 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.generators.imltogradle

import org.jetbrains.jps.model.module.JpsModule
import org.jetbrains.jps.model.serialization.JpsProjectLoader
import java.io.File

fun main() {
    val imlFiles = File(".").canonicalFile.resolve("kotlin-ide").walk()
        .filter { it.isFile && it.extension == "iml" && it.name.startsWith("kotlin.") }
        .toList()

    imlFiles.zip(JpsProjectLoader.loadModules(imlFiles.map { it.toPath() }, null, mapOf()))
        .forEach { (imlFile, jpsModule) ->
            imlFile.parentFile.resolve("build.gradle.kts").writeText(generateBuildGradleFileByJpsModule(imlFile, jpsModule))
        }

}

fun generateBuildGradleFileByJpsModule(imlFile: File, jpsModule: JpsModule): String {
    return """
        |// GENERATED build.gradle.kts 
        |// GENERATED BY ${imlFile.name} 
        |// USE `./gradlew generateGradleByIml` TO REGENERATE THIS FILE
        |
        |plugins {
        |    kotlin("jvm")
        |    id("jps-compatible")
        |}
        |
        |sourceSets {
        |    "main" {
        |        projectDefault()
        |        java.srcDir("../idea-analysis/src")
        |        resources.srcDir("../idea-analysis/resources")
        |    }
        |    "test" {}
        |}
    """.trimMarginWithInterpolations()
}

fun String.trimMarginWithInterpolations(): String {
    val regex = Regex("""^(\s*\|)(\s*).*$""")
    val out = mutableListOf<String>()
    var prevIndent = ""
    for (line in lines()) {
        val matchResult = regex.matchEntire(line)
        if (matchResult != null) {
            out.add(line.removePrefix(matchResult.groupValues[1]))
            prevIndent = matchResult.groupValues[2]
        } else {
            out.add(prevIndent + line)
        }
    }
    return out.joinToString("\n").trim()
}
