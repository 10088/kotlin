<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
  <!--suppress XmlPathReference -->
  <xi:include href="/META-INF/CocoaPlugin.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <!--suppress XmlPathReference -->
  <xi:include href="/META-INF/SwiftLangPlugin.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/KonanOCSwift.xml" xpointer="xpointer(/idea-plugin/*)"/>

  <id>org.jetbrains.kotlin.mobile.plugin</id>
  <name>Mobile for CLion</name>
  <!--version_placeholder-->
  <vendor>JetBrains</vendor>

  <!--idea_version_placeholder-->

  <change-notes/>

  <depends>com.intellij.modules.clion</depends>
  <depends>org.jetbrains.kotlin.native.clion</depends>
  <!--suppress PluginXmlValidity -->
  <depends optional="true" config-file="plugin-with-markdown.xml">org.intellij.plugins.markdown</depends>

  <application-components>
    <!-- swift -->
    <component>
      <interface-class>com.jetbrains.swift.codeinsight.resolve.module.SwiftModuleIOCache</interface-class>
      <implementation-class>com.jetbrains.swift.codeinsight.resolve.module.MobileSwiftModuleIOCache</implementation-class>
    </component>
  </application-components>

  <extensions defaultExtensionNs="com.intellij">
    <configurationType implementation="com.jetbrains.mobile.execution.MobileAppRunConfigurationType"/>
    <configurationType implementation="com.jetbrains.mobile.execution.testing.MobileTestRunConfigurationType"/>
    <stepsBeforeRunProvider implementation="com.jetbrains.mobile.execution.MobileBeforeRunTaskProvider"/>
    <projectTaskRunner implementation="com.jetbrains.mobile.execution.MobileProjectTaskRunner" order="first, before gradle.mpp"/>

    <applicationService serviceImplementation="com.jetbrains.mobile.execution.testing.AppleXCTestLocator"
                        serviceInterface="com.jetbrains.cidr.execution.testing.xctest.OCUnitTestLocator"/>

    <programRunner implementation="com.jetbrains.mobile.execution.MobileRunner" order="first"/>

    <applicationService serviceInterface="com.jetbrains.cidr.OCPathManagerCustomization"
                        serviceImplementation="com.jetbrains.mobile.PathManagerCustomization" overrides="true"/>
    <executionTargetProvider implementation="com.jetbrains.mobile.execution.DeviceExecutionTargetProvider"/>

    <externalProjectDataService implementation="com.jetbrains.mobile.gradle.AndroidProjectDataService"/>

    <!-- apple gradle project model -->
    <externalProjectDataService implementation="com.jetbrains.cidr.apple.gradle.AppleProjectDataService"/>
    <projectService serviceImplementation="com.jetbrains.cidr.apple.gradle.GradleAppleWorkspace"/>

    <!-- swift -->
    <applicationService serviceInterface="com.jetbrains.swift.SwiftCompilerSettings"
                        serviceImplementation="com.jetbrains.swift.MobileSwiftCompilerSettings"/>
    <!--<applicationService serviceInterface="com.jetbrains.swift.codeinsight.highlighting.SwiftSourceKitAnnotator$Producer"
                        serviceImplementation="com.jetbrains.swift.swiftpm.codeinsight.highlighting.CLionSwiftSourceKitAnnotator$Producer"/>-->

    <applicationService serviceImplementation="com.jetbrains.swift.SwiftSettings"/>

    <projectService serviceInterface="com.jetbrains.swift.codeinsight.resolve.SwiftModuleManager"
                    serviceImplementation="com.jetbrains.swift.codeinsight.resolve.MobileSwiftModuleManager"/>

    <applicationService serviceInterface="com.jetbrains.swift.codeinsight.resolve.module.SwiftModuleReader"
                        serviceImplementation="com.jetbrains.swift.codeinsight.resolve.module.MobileSwiftModuleReader"/>

    <applicationService serviceInterface="com.jetbrains.swift.sourcekitd.SourceKitServiceManager"
                        serviceImplementation="com.jetbrains.swift.sourcekitd.MobileSourceKitServiceManager"/>

    <!--<externalAnnotator implementationClass="com.jetbrains.swift.swiftpm.codeinsight.highlighting.CLionSwiftSourceKitAnnotator"
                       language="Swift"/>-->

    <projectService serviceInterface="com.jetbrains.cidr.documentation.CocoaDocumentationManager"
                    serviceImplementation="com.jetbrains.mobile.documentation.AppleDocumentationManager"/>
  </extensions>

  <extensions defaultExtensionNs="cidr.lang">
    <testFramework implementation="com.jetbrains.mobile.execution.testing.AppleXCTestFramework"/>
  </extensions>

  <extensions defaultExtensionNs="org.jetbrains.konan">
    <konanConsumer implementation="com.jetbrains.mobile.bridging.MobileKonanConsumer"/>
  </extensions>

  <extensions defaultExtensionNs="org.jetbrains.plugins.gradle">
    <projectResolve implementation="com.jetbrains.cidr.apple.gradle.AppleProjectResolver"/>
    <projectResolve implementation="com.jetbrains.mobile.gradle.AndroidProjectResolver"/>
  </extensions>

  <extensions defaultExtensionNs="cidr.lang">
    <moduleMapManagerRequestor implementation="com.jetbrains.cidr.apple.gradle.GradleAppleModuleMapManagerRequestor"/>
    <customHeaderProvider implementation="com.jetbrains.mobile.bridging.MobileKonanFrameworkHeaderProvider"/>
    <!-- swift -->
    <swiftSourceModuleProvider implementation="com.jetbrains.swift.codeinsight.resolve.MobileSwiftSourceModuleProvider"/>
    <swiftCustomIncludePathProvider implementation="com.jetbrains.swift.codeinsight.resolve.module.MobileXCTestPathProvider"/>
    <customHeaderProvider implementation="com.jetbrains.swift.bridging.MobileSwiftBridgeHeaderProvider"/>
  </extensions>

  <extensions defaultExtensionNs="cidr.cocoa">
    <xcodeProjectFileProvider implementation="com.jetbrains.cidr.apple.gradle.AppleXcodeProjectFileProvider"/>
  </extensions>

  <actions>
    <action id="Build" class="com.jetbrains.mobile.execution.MobileBuildAction" use-shortcut-of="CompileDirty"/>

    <group id="CIDR.Swift.NewGroup">
      <reference id="Swift.NewGroup"/>
      <add-to-group group-id="CIDR.Lang.NewGroup" anchor="first"/>
    </group>
  </actions>
</idea-plugin>
