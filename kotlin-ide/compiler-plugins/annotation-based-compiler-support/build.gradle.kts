// GENERATED build.gradle.kts
// GENERATED BY kotlin.compiler-plugins.annotation-based-compiler-support.iml
// USE `./gradlew generateGradleByIml` TO REGENERATE THIS FILE

plugins {
    kotlin("jvm")
    id("jps-compatible")
}

dependencies {
    jpsLikeModuleDependency(":kotlin-ide:core", JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:jps:jps-common", JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:maven", JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:gradle:gradle-idea", JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:gradle:gradle-tooling", JpsDepScope.COMPILE)
    jpsLikeJarDependency(intellijDep(), JpsDepScope.COMPILE, { includeJars("platform-api") })
    jpsLikeJarDependency(intellijDep(), JpsDepScope.COMPILE, { includeJars("resources_en") })
    jpsLikeJarDependency(intellijDep(), JpsDepScope.COMPILE, { includeJars("intellij-core-analysis-deprecated") })
    jpsLikeJarDependency(intellijPluginDep("maven"), JpsDepScope.COMPILE)
    jpsLikeJarDependency(intellijPluginDep("gradle"), JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:common", JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:frontend-independent", JpsDepScope.COMPILE)
}

sourceSets {
    "main" {
        java.srcDir("src")
    }
    "test" {
        
    }
}

testsJar()