// GENERATED build.gradle.kts
// GENERATED BY kotlin.compiler-plugins.noarg.iml
// USE `./gradlew generateGradleByIml` TO REGENERATE THIS FILE

plugins {
    kotlin("jvm")
    id("jps-compatible")
}

dependencies {
    jpsLikeJarDependency(kotlinStdlib(), JpsDepScope.COMPILE)
    jpsLikeJarDependency(project(":prepare:ide-plugin-dependencies:kotlin-compiler-for-ide"), JpsDepScope.COMPILE)
    jpsLikeJarDependency(project(":prepare:ide-plugin-dependencies:noarg-compiler-plugin-for-ide"), JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:common", JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:jps:jps-common", JpsDepScope.TEST)
    jpsLikeModuleDependency(":kotlin-ide:maven", JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:gradle:gradle-idea", JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:gradle:gradle-tooling", JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:compiler-plugins:annotation-based-compiler-support", JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:tests-common", JpsDepScope.TEST)
    jpsLikeModuleDependency(":kotlin-ide:test-framework", JpsDepScope.TEST)
    jpsLikeJarDependency(intellijPluginDep("java"), JpsDepScope.COMPILE)
    jpsLikeJarDependency(intellijDep(), JpsDepScope.COMPILE, { includeJars("intellij-core") })
    jpsLikeJarDependency(intellijDep(), JpsDepScope.COMPILE, { includeJars("intellij-core-analysis-deprecated") })
    jpsLikeJarDependency(intellijPluginDep("gradle"), JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:frontend-independent", JpsDepScope.COMPILE)
}

sourceSets {
    "main" {
        java.srcDir("src")
        resources.srcDir("resources")
    }
    "test" {
        java.srcDir("test")
    }
}

testsJar()