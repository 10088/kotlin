// GENERATED build.gradle.kts
// GENERATED BY kotlin.idea.iml
// USE `./gradlew generateGradleByIml` TO REGENERATE THIS FILE

plugins {
    kotlin("jvm")
    id("jps-compatible")
}

dependencies {
    jpsLikeCompileJar("org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.3.9")
    jpsLikeCompileJar("org.jetbrains.intellij.deps.completion:completion-ranking-kotlin:0.1.3")
    jpsLikeTestJar("io.javaslang:javaslang:2.0.6")
    jpsLikeCompileJar("com.google.guava:guava:29.0-jre")
    jpsLikeCompileJar("org.jetbrains.intellij.deps:jdom:2.0.6")
    jpsLikeCompileJar("com.google.code.gson:gson:2.8.6")
    jpsLikeCompileJar("org.swinglabs:swingx-core:1.6.2-2")
    jpsLikeCompileJar("org.jetbrains.intellij.deps:asm-all:9.0")
    jpsLikeCompileJar("org.jetbrains.intellij.deps:trove4j:1.0.20200330")
    jpsLikeTestJar("org.jetbrains.kotlin:kotlin-test:1.4.0")
    jpsLikeCompileModule(":kotlin-ide:common")
    jpsLikeCompileModule(":kotlin-ide:core")
    jpsLikeCompileModule(":kotlin-ide:frontend-independent")
    jpsLikeCompileModule(":kotlin-ide:jps:jps-common")
    jpsLikeCompileModule(":kotlin-ide:j2k:old")
    jpsLikeCompileModule(":kotlin-ide:j2k:new")
    jpsLikeCompileModule(":kotlin-ide:formatter")
    jpsLikeCompileModule(":kotlin-ide:j2k:idea")
    jpsLikeCompileModule(":kotlin-ide:gradle:gradle-tooling")
    jpsLikeCompileModule(":kotlin-ide:jvm-debugger:sequence")
    jpsLikeCompileModule(":kotlin-ide:scripting")
    jpsLikeTestModule(":kotlin-ide:jvm")
    jpsLikeCompileModule(":kotlin-ide:jvm-debugger:core")
    jpsLikeCompileModule(":kotlin-ide:line-indent-provider")
    jpsLikeTestModule(":kotlin-ide:test-framework")
    jpsLikeTestModule(":kotlin-ide:tests-common")
    jpsLikeTestModule(":kotlin-ide:repl")
    jpsLikeTestModule(":kotlin-ide:jvm-debugger:util")
    jpsLikeTestModule(":kotlin-ide:native")
    jpsLikeTestModule(":kotlin-ide:gradle:gradle-native")
    jpsLikeTestModule(":kotlin-ide:maven")
    jpsLikeTestModule(":kotlin-ide:uast:uast-kotlin")
    jpsLikeTestModule(":kotlin-ide:uast:uast-kotlin-idea")
    jpsLikeTestModule(":kotlin-ide:jvm-debugger:evaluation")
    jpsLikeTestModule(":kotlin-ide:compiler-plugins:sam-with-receiver")
    jpsLikeTestModule(":kotlin-ide:compiler-plugins:noarg")
    jpsLikeTestModule(":kotlin-ide:compiler-plugins:kotlinx-serialization")
    jpsLikeTestModule(":kotlin-ide:compiler-plugins:allopen")
    jpsLikeTestModule(":kotlin-ide:compiler-plugins:parcelize")
    jpsLikeTestModule(":kotlin-ide:j2k:services")
    jpsLikeCompileJar(intellijDep(), { includeJars("platform-api") })
    jpsLikeCompileJar(intellijDep(), { includeJars("resources_en") })
    jpsLikeCompileJar(intellijDep(), { includeJars("platform-impl") })
    jpsLikeCompileJar(intellijDep(), { includeJars("platform-statistics") }, exported = true)
    jpsLikeCompileJar(intellijDep(), { includeJars("intellij-dvcs") })
    jpsLikeTestJar(intellijPluginDep("IntelliLang"))
    jpsLikeTestJar(intellijDep(), { includeJars("platform-serviceContainer") })
    jpsLikeCompileJar(intellijPluginDep("java"))
    jpsLikeCompileJar(intellijDep(), { includeJars("intellij-core-analysis-deprecated") })
    jpsLikeTestJar(intellijPluginDep("java"))
    jpsLikeTestJar(intellijDep(), { includeJars("intellij-core-analysis-deprecated") })
    jpsLikeTestJar(intellijPluginDep("junit"))
    jpsLikeTestJar(intellijPluginDep("Groovy"))
    jpsLikeCompileJar(intellijPluginDep("gradle"))
    jpsLikeCompileJar(intellijPluginDep("markdown"))
    jpsLikeCompileJar(intellijDep(), { includeJars("spellchecker") })
    jpsLikeCompileJar(intellijPluginDep("copyright"))
    jpsLikeTestJar(intellijPluginDep("properties"))
    jpsLikeCompileJar("javax.xml.bind:jaxb-api:2.3.1")
    jpsLikeCompileJar(intellijDep(), { includeJars("platform-core-ui") })
    jpsLikeCompileJar("org.jetbrains.intellij.deps.fastutil:intellij-deps-fastutil:8.4.1-4")
    jpsLikeCompileJar(intellijDep(), { includeJars("idea") })
    jpsLikeCompileModule(":kotlin-ide:resources-descriptors")
}

sourceSets {
    "main" {
        resources.srcDir("../completion/resources")
        java.srcDir("../completion/src")
        java.srcDir("src")
        resources.srcDir("resources")
        resources.srcDir("resources-en")
        java.srcDir("../live-templates/src")
    }
    "test" {
        java.srcDir("../completion/test")
        java.srcDir("test")
        java.srcDir("../live-templates/test")
    }
}

testsJar()