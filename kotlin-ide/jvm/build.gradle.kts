// GENERATED build.gradle.kts
// GENERATED BY kotlin.jvm.iml
// USE `./gradlew generateGradleByIml` TO REGENERATE THIS FILE

plugins {
    kotlin("jvm")
    id("jps-compatible")
}

dependencies {
    jpsLikeJarDependency(kotlinStdlib(), JpsDepScope.COMPILE)
    jpsLikeJarDependency("com.google.guava:guava:29.0-jre", JpsDepScope.COMPILE)
    jpsLikeJarDependency("org.swinglabs:swingx-core:1.6.2-2", JpsDepScope.COMPILE)
    jpsLikeJarDependency("org.jetbrains.intellij.deps:jdom:2.0.6", JpsDepScope.COMPILE)
    jpsLikeJarDependency("com.google.code.gson:gson:2.8.6", JpsDepScope.COMPILE)
    jpsLikeJarDependency(project(":prepare:ide-plugin-dependencies:kotlin-compiler-for-ide"), JpsDepScope.COMPILE)
    jpsLikeJarDependency(project(":kotlin-scripting-compiler"), JpsDepScope.COMPILE)
    jpsLikeJarDependency(project(":kotlin-scripting-compiler-impl"), JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:core", JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:common", JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:frontend-independent", JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:jps:jps-common", JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:jvm-debugger:core", JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:idea", JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:formatter", JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:jvm-debugger:util", JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:gradle:gradle-tooling", JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:repl", JpsDepScope.COMPILE)
    jpsLikeJarDependency(intellijPluginDep("java"), JpsDepScope.COMPILE)
    jpsLikeJarDependency(intellijDep(), JpsDepScope.COMPILE, { includeJars("platform-api") })
    jpsLikeJarDependency(intellijDep(), JpsDepScope.COMPILE, { includeJars("resources_en") })
    jpsLikeJarDependency(intellijPluginDep("coverage"), JpsDepScope.COMPILE)
    jpsLikeJarDependency(intellijPluginDep("IntelliLang"), JpsDepScope.COMPILE)
    jpsLikeJarDependency(intellijDep(), JpsDepScope.COMPILE, { includeJars("bootstrap") })
    jpsLikeJarDependency(intellijDep(), JpsDepScope.COMPILE, { includeJars("intellij-core-analysis-deprecated") })
    jpsLikeJarDependency(intellijDep(), JpsDepScope.COMPILE, { includeJars("testFramework") })
    jpsLikeJarDependency(intellijDep(), JpsDepScope.COMPILE, { includeJars("platform-impl") })
    jpsLikeJarDependency(intellijDep(), JpsDepScope.COMPILE, { includeJars("intellij-dvcs") })
    jpsLikeJarDependency(intellijDep(), JpsDepScope.COMPILE, { includeJars("intellij-core") })
    jpsLikeJarDependency(intellijPluginDep("java-decompiler"), JpsDepScope.COMPILE)
    jpsLikeJarDependency(intellijPluginDep("java-i18n"), JpsDepScope.COMPILE)
    jpsLikeJarDependency(intellijPluginDep("junit"), JpsDepScope.COMPILE)
    jpsLikeJarDependency(intellijPluginDep("properties"), JpsDepScope.COMPILE)
    jpsLikeJarDependency(intellijPluginDep("testng"), JpsDepScope.COMPILE)
    jpsLikeJarDependency(intellijDep(), JpsDepScope.COMPILE, { includeJars("intellij-xml") })
}

sourceSets {
    "main" {
        java.srcDir("src")
        resources.srcDir("resources")
    }
    "test" {
        
    }
}

testsJar()