// GENERATED build.gradle.kts
// GENERATED BY kotlin.project-wizard.cli.iml
// USE `./gradlew generateGradleByIml` TO REGENERATE THIS FILE

plugins {
    kotlin("jvm")
    id("jps-compatible")
}

dependencies {
    jpsLikeJarDependency(kotlinStdlib(), JpsDepScope.COMPILE)
    jpsLikeJarDependency(project(":kotlin-reflect"), JpsDepScope.COMPILE)
    jpsLikeJarDependency("org.jetbrains.kotlinx:kotlinx-collections-immutable-jvm:0.3.1", JpsDepScope.COMPILE)
    jpsLikeJarDependency(project(":prepare:ide-plugin-dependencies:kotlin-compiler-for-ide"), JpsDepScope.RUNTIME)
    jpsLikeJarDependency("org.yaml:snakeyaml:1.24", JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:project-wizard:core", JpsDepScope.COMPILE)
    jpsLikeModuleDependency(":kotlin-ide:tests-common", JpsDepScope.TEST)
    jpsLikeJarDependency(intellijDep(), JpsDepScope.TEST, { includeJars("testFramework") }) // Exported transitive dependency
    jpsLikeJarDependency(intellijDep(), JpsDepScope.TEST, { includeJars("platform-api") }) // Exported transitive dependency
    jpsLikeJarDependency(intellijDep(), JpsDepScope.TEST, { includeJars("resources_en") }) // Exported transitive dependency
    jpsLikeJarDependency(intellijDep(), JpsDepScope.TEST, { includeJars("platform-core-ui") }) // Exported transitive dependency
    jpsLikeJarDependency(intellijDep(), JpsDepScope.TEST, { includeJars("platform-impl") }) // Exported transitive dependency
    jpsLikeJarDependency(intellijDep(), JpsDepScope.TEST, { includeJars("intellij-core-analysis-deprecated") }) // Exported transitive dependency
    jpsLikeJarDependency("junit:junit:4.12", JpsDepScope.TEST) // Exported transitive dependency
    jpsLikeJarDependency("org.codehaus.groovy:groovy:2.5.11", JpsDepScope.TEST) // Exported transitive dependency
    jpsLikeJarDependency(intellijDep(), JpsDepScope.TEST, { includeJars("intellij-core") }) // Exported transitive dependency
    jpsLikeJarDependency("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.0", JpsDepScope.TEST) // Exported transitive dependency
    jpsLikeJarDependency(intellijDep(), JpsDepScope.TEST, { includeJars("resources") }) // Exported transitive dependency
    jpsLikeJarDependency(intellijDep(), JpsDepScope.TEST, { includeJars("extensions") }) // Exported transitive dependency
    jpsLikeJarDependency(intellijDep(), JpsDepScope.TEST, { includeJars("util") }) // Exported transitive dependency
    jpsLikeJarDependency(intellijDep(), JpsDepScope.TEST, { includeJars("platform-concurrency") }) // Exported transitive dependency
    jpsLikeJarDependency(intellijDep(), JpsDepScope.TEST, { includeJars("platform-util-ex") }) // Exported transitive dependency
    jpsLikeJarDependency("org.jetbrains:annotations:20.1.0", JpsDepScope.TEST) // Exported transitive dependency
    jpsLikeJarDependency(intellijDep(), JpsDepScope.TEST, { includeJars("platform-util-ui") }) // Exported transitive dependency
    jpsLikeJarDependency("org.apache.velocity:velocity:1.7", JpsDepScope.TEST) // Exported transitive dependency
    jpsLikeJarDependency(intellijDep(), JpsDepScope.TEST, { includeJars("platform-ide-util-io") }) // Exported transitive dependency
    jpsLikeJarDependency(intellijDep(), JpsDepScope.TEST, { includeJars("forms_rt") }) // Exported transitive dependency
    jpsLikeJarDependency("com.jgoodies:forms:1.1-preview", JpsDepScope.TEST) // Exported transitive dependency
    jpsLikeJarDependency(intellijDep(), JpsDepScope.TEST, { includeJars("jps-model") }) // Exported transitive dependency
    jpsLikeJarDependency("org.jetbrains.intellij.deps:jdom:2.0.6", JpsDepScope.TEST) // Exported transitive dependency
    jpsLikeJarDependency(intellijDep(), JpsDepScope.TEST, { includeJars("testFramework.core") }) // Exported transitive dependency
    jpsLikeJarDependency("org.jetbrains:jetCheck:0.2.2", JpsDepScope.TEST) // Exported transitive dependency
    jpsLikeJarDependency(intellijDep(), JpsDepScope.TEST, { includeJars("idea_rt") }) // Exported transitive dependency
    jpsLikeJarDependency("log4j:log4j:1.2.17", JpsDepScope.TEST) // Exported transitive dependency
}

sourceSets {
    "main" {
        java.srcDir("src")
    }
    "test" {
        java.srcDir("test")
    }
}

testsJar()