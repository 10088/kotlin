FILE: simple.kt
    @R|org/jetbrains/kotlin/fir/plugin/WithClass|() public final class A : R|AGen| {
        public constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public final override fun foo(): R|kotlin/String| {
            ^foo String()
        }

    }
    public final class B : R|ERROR CLASS: Symbol not found, for `BGen`| {
        public constructor(): R|B| {
            super<R|kotlin/Any|>()
        }

    }
    public final fun test(a: R|AGen|): R|kotlin/Unit| {
        R|/takeString|(R|<local>/a|.R|/AGen.foo|())
    }
    public final fun takeString(s: R|kotlin/String|): R|kotlin/Unit| {
    }
FILE: AllOpen.Generated.kt
    public abstract interface AGen {
        public abstract fun foo(): R|kotlin/String|

    }
