/*
 * Copyright 2010-2020 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kaptlite.test;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TargetBackend;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs")
@TestDataPath("$PROJECT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public class StubGeneratorTestGenerated extends AbstractStubGeneratorTest {
    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doTest, TargetBackend.ANY, testDataFilePath);
    }

    @TestMetadata("abstractList.kt")
    public void testAbstractList() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/abstractList.kt");
    }

    public void testAllFilesPresentInStubs() throws Exception {
        KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs"), Pattern.compile("^(.+)\\.kt$"), TargetBackend.ANY, true);
    }

    @TestMetadata("annotationDeclarationSiteTargets.kt")
    public void testAnnotationDeclarationSiteTargets() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/annotationDeclarationSiteTargets.kt");
    }

    @TestMetadata("customPropertyDelegates.kt")
    public void testCustomPropertyDelegates() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/customPropertyDelegates.kt");
    }

    @TestMetadata("dataClasses.kt")
    public void testDataClasses() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/dataClasses.kt");
    }

    @TestMetadata("declarations.kt")
    public void testDeclarations() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/declarations.kt");
    }

    @TestMetadata("defaultPackage.kt")
    public void testDefaultPackage() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/defaultPackage.kt");
    }

    @TestMetadata("deprecated.kt")
    public void testDeprecated() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/deprecated.kt");
    }

    @TestMetadata("enums.kt")
    public void testEnums() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/enums.kt");
    }

    @TestMetadata("facades.kt")
    public void testFacades() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/facades.kt");
    }

    @TestMetadata("fieldInitializers.kt")
    public void testFieldInitializers() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/fieldInitializers.kt");
    }

    @TestMetadata("flags.kt")
    public void testFlags() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/flags.kt");
    }

    @TestMetadata("generics.kt")
    public void testGenerics() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/generics.kt");
    }

    @TestMetadata("implicitReturnTypes.kt")
    public void testImplicitReturnTypes() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/implicitReturnTypes.kt");
    }

    @TestMetadata("inheritance.kt")
    public void testInheritance() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/inheritance.kt");
    }

    @TestMetadata("inlineClasses.kt")
    public void testInlineClasses() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/inlineClasses.kt");
    }

    @TestMetadata("interfaceDelegates.kt")
    public void testInterfaceDelegates() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/interfaceDelegates.kt");
    }

    @TestMetadata("javaNested.kt")
    public void testJavaNested() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/javaNested.kt");
    }

    @TestMetadata("javadoc.kt")
    public void testJavadoc() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/javadoc.kt");
    }

    @TestMetadata("javadocFormatting.kt")
    public void testJavadocFormatting() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/javadocFormatting.kt");
    }

    @TestMetadata("jvmField.kt")
    public void testJvmField() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/jvmField.kt");
    }

    @TestMetadata("jvmName.kt")
    public void testJvmName() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/jvmName.kt");
    }

    @TestMetadata("jvmOverloads.kt")
    public void testJvmOverloads() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/jvmOverloads.kt");
    }

    @TestMetadata("jvmThrows.kt")
    public void testJvmThrows() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/jvmThrows.kt");
    }

    @TestMetadata("lateinit.kt")
    public void testLateinit() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/lateinit.kt");
    }

    @TestMetadata("multiFileFacades.kt")
    public void testMultiFileFacades() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/multiFileFacades.kt");
    }

    @TestMetadata("nestedSameName.kt")
    public void testNestedSameName() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/nestedSameName.kt");
    }

    @TestMetadata("parameterNames.kt")
    public void testParameterNames() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/parameterNames.kt");
    }

    @TestMetadata("primitiveLiterals.kt")
    public void testPrimitiveLiterals() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/primitiveLiterals.kt");
    }

    @TestMetadata("propertyDelegates.kt")
    public void testPropertyDelegates() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/propertyDelegates.kt");
    }

    @TestMetadata("sealedClasses.kt")
    public void testSealedClasses() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/sealedClasses.kt");
    }

    @TestMetadata("simple.kt")
    public void testSimple() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/simple.kt");
    }

    @TestMetadata("specialJavaKeywords.kt")
    public void testSpecialJavaKeywords() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/specialJavaKeywords.kt");
    }

    @TestMetadata("suspendMain.kt")
    public void testSuspendMain() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/suspendMain.kt");
    }

    @TestMetadata("suspendWithRuntime.kt")
    public void testSuspendWithRuntime() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/suspendWithRuntime.kt");
    }

    @TestMetadata("suspendWithoutRuntime.kt")
    public void testSuspendWithoutRuntime() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/suspendWithoutRuntime.kt");
    }

    @TestMetadata("varargs.kt")
    public void testVarargs() throws Exception {
        runTest("plugins/kapt-lite/kapt-lite-compiler-plugin/testData/stubs/varargs.kt");
    }
}
