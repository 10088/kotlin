// FILE: deprecated/Anno.java
/**
 * This file was generated by the kapt-lite stub generator.
 * Do not change it manually.
 */
package deprecated;

@kotlin.Deprecated(message = "Anno is deprecated")
@java.lang.annotation.Retention(value = java.lang.annotation.RetentionPolicy.RUNTIME)
@kotlin.Metadata()
@java.lang.Deprecated
public abstract @interface Anno {
    public abstract java.lang.String value();
}

// FILE: deprecated/DeprecatedKt.java
/**
 * This file was generated by the kapt-lite stub generator.
 * Do not change it manually.
 */
package deprecated;

@kotlin.Metadata()
public final class DeprecatedKt {
    public static final void ext(@org.jetbrains.annotations.NotNull java.lang.String $this$ext) {}

    @kotlin.Deprecated(message = "topLevel() is deprecated")
    @java.lang.Deprecated
    public static final void topLevel() {}

    private DeprecatedKt() {}
}

// FILE: deprecated/EnumClass.java
/**
 * This file was generated by the kapt-lite stub generator.
 * Do not change it manually.
 */
package deprecated;

@kotlin.Deprecated(message = "EnumClass is deprecated")
@kotlin.Metadata()
@java.lang.Deprecated
public enum EnumClass {
    FOO,
    BAR,
    ;

    @kotlin.Deprecated(message = "goo is deprecated")
    @java.lang.Deprecated
    public final void goo() {}

    private EnumClass() {}
}

// FILE: deprecated/Foo.java
/**
 * This file was generated by the kapt-lite stub generator.
 * Do not change it manually.
 */
package deprecated;

@kotlin.Deprecated(message = "Foo is deprecated")
@kotlin.Metadata()
@java.lang.Deprecated
public final class Foo {
    @org.jetbrains.annotations.NotNull
    @java.lang.Deprecated
    private final java.lang.String x = "";
    @java.lang.Deprecated
    private final int n1;

    @kotlin.Deprecated(message = "foo() is deprecated")
    @java.lang.Deprecated
    public final void foo(int a, @org.jetbrains.annotations.NotNull java.lang.String b) {}

    @org.jetbrains.annotations.NotNull
    @java.lang.Deprecated
    public final java.lang.String getX() {
        return null;
    }

    @kotlin.Deprecated(message = "y/get is deprecated")
    @java.lang.Deprecated
    public final int getY() {
        return 0;
    }

    @kotlin.Deprecated(message = "y/set is deprecated")
    @java.lang.Deprecated
    public final void setY(int newValue) {}

    @java.lang.Deprecated
    public final int getN1() {
        return 0;
    }

    @kotlin.Deprecated(message = "constructor is deprecated")
    @java.lang.Deprecated
    public Foo(int n1) {}

    @kotlin.Deprecated(message = "secondary constructor is deprecated")
    @java.lang.Deprecated
    public Foo() {}

    @kotlin.Deprecated(message = "Nested is deprecated")
    @kotlin.Metadata()
    @java.lang.Deprecated
    public final static class Nested {
        @kotlin.Deprecated(message = "p() is deprecated")
        @java.lang.Deprecated
        public final void p() {}

        public Nested() {}
    }
}

// FILE: deprecated/Intf.java
/**
 * This file was generated by the kapt-lite stub generator.
 * Do not change it manually.
 */
package deprecated;

@kotlin.Deprecated(message = "Intf is deprecated")
@kotlin.Metadata()
@java.lang.Deprecated
public abstract interface Intf {

}

// FILE: deprecated/Obj.java
/**
 * This file was generated by the kapt-lite stub generator.
 * Do not change it manually.
 */
package deprecated;

@kotlin.Deprecated(message = "Obj is deprecated")
@kotlin.Metadata()
@java.lang.Deprecated
public final class Obj {
    @kotlin.jvm.JvmField
    @java.lang.Deprecated
    public static final int f = 0;
    @java.lang.Deprecated
    public static final int c = 5;
    public static final deprecated.Obj INSTANCE = null;

    private Obj() {}
}

deprecated/Foo.java[44:25]: variable n1 might not have been initialized
deprecated/Foo.java[48:19]: variable n1 might not have been initialized