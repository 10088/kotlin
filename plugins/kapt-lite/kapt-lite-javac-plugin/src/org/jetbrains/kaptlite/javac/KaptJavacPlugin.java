/*
 * Copyright 2010-2019 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kaptlite.javac;

import com.sun.source.tree.CompilationUnitTree;
import com.sun.source.util.JavacTask;
import com.sun.source.util.Plugin;
import com.sun.source.util.TaskEvent;
import com.sun.source.util.TaskListener;
import com.sun.tools.javac.parser.Tokens;
import com.sun.tools.javac.tree.DocCommentTable;
import com.sun.tools.javac.tree.JCTree.JCCompilationUnit;
import com.sun.tools.javac.util.List;

public class KaptJavacPlugin implements Plugin {
    @Override
    public String getName() {
        return "KaptJavacPlugin";
    }

    @Override
    public void init(JavacTask task, String... args) {
        task.addTaskListener(new TaskListener() {
            private boolean annotationProcessingFinished = false;

            @Override
            public void started(TaskEvent e) {
                if (e.getKind() == TaskEvent.Kind.ENTER && annotationProcessingFinished) {
                    CompilationUnitTree unit = e.getCompilationUnit();
                    if (unit instanceof JCCompilationUnit) {
                        patch((JCCompilationUnit) unit);
                    }
                }
            }

            @Override
            public void finished(TaskEvent e) {
                if (e.getKind() == TaskEvent.Kind.ANNOTATION_PROCESSING) {
                    annotationProcessingFinished = true;
                }
            }
        });
    }

    private static void patch(JCCompilationUnit unit) {
        if (isKaptStubFile(unit)) {
            unit.pid = null;
            unit.docComments = null;
            unit.defs = List.nil();
        }
    }

    private static boolean isKaptStubFile(JCCompilationUnit unit) {
        DocCommentTable docs = unit.docComments;
        if (docs == null) {
            return false;
        }

        Tokens.Comment comment = docs.getComment(unit);
        if (comment == null) {
            return false;
        }

        String text = comment.getText();
        return text.contains("This file was generated by the kapt-lite stub generator.")
               && text.contains("Do not change it manually.");
    }
}
