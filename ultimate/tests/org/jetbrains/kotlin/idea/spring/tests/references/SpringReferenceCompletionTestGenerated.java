/*
 * Copyright 2010-2019 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.idea.spring.tests.references;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TargetBackend;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("kotlin-ultimate/ultimate/testData/spring/core/references/completion/variants")
@TestDataPath("$PROJECT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public class SpringReferenceCompletionTestGenerated extends AbstractSpringReferenceCompletionTest {
    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doTest, TargetBackend.ANY, testDataFilePath);
    }

    public void testAllFilesPresentInVariants() throws Exception {
        KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("kotlin-ultimate/ultimate/testData/spring/core/references/completion/variants"), Pattern.compile("^(.+)\\.kt$"), TargetBackend.ANY, true);
    }

    @TestMetadata("beanWithDefaultName.kt")
    public void testBeanWithDefaultName() throws Exception {
        runTest("kotlin-ultimate/ultimate/testData/spring/core/references/completion/variants/beanWithDefaultName.kt");
    }

    @TestMetadata("beanWithExplicitName.kt")
    public void testBeanWithExplicitName() throws Exception {
        runTest("kotlin-ultimate/ultimate/testData/spring/core/references/completion/variants/beanWithExplicitName.kt");
    }

    @TestMetadata("packageReference.kt")
    public void testPackageReference() throws Exception {
        runTest("kotlin-ultimate/ultimate/testData/spring/core/references/completion/variants/packageReference.kt");
    }

    @TestMetadata("qualifierReference1Xml.kt")
    public void testQualifierReference1Xml() throws Exception {
        runTest("kotlin-ultimate/ultimate/testData/spring/core/references/completion/variants/qualifierReference1Xml.kt");
    }

    @TestMetadata("qualifierReference2Xml.kt")
    public void testQualifierReference2Xml() throws Exception {
        runTest("kotlin-ultimate/ultimate/testData/spring/core/references/completion/variants/qualifierReference2Xml.kt");
    }

    @TestMetadata("scopeReferenceXml.kt")
    public void testScopeReferenceXml() throws Exception {
        runTest("kotlin-ultimate/ultimate/testData/spring/core/references/completion/variants/scopeReferenceXml.kt");
    }

    @TestMetadata("springBeanReferenceXml.kt")
    public void testSpringBeanReferenceXml() throws Exception {
        runTest("kotlin-ultimate/ultimate/testData/spring/core/references/completion/variants/springBeanReferenceXml.kt");
    }
}
